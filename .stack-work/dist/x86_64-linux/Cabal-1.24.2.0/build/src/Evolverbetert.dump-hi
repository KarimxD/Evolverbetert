
==================== FINAL INTERFACE ====================
2017-04-24 13:51:13.862104 UTC

interface Evolverbetert-0.1.0.0-JiawwqdleTNHNC9Qg9fPkT:Evolverbetert 8002
  interface hash: 6a7ab0459e5975a57157efdbd6077a1e
  ABI hash: 471fa73a9d9df0122094b9c3f8f2e097
  export-list hash: f89da81429e254240a5b99d42f4038d6
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: ab396f11155bd696ab63895436e6f1df
  sig of: Nothing
  used TH splices: False
  where
exports:
  Evolverbetert.main
module dependencies: Misc Mutations MyGraphics MyRandom Parameters
                     World
package dependencies: GLURaw-2.0.0.3@GLURaw-2.0.0.3-G12M6COyQIU5WfRlrIwPuj
                      GLUT-2.7.0.11@GLUT-2.7.0.11-IP0PzJz4wI8KYXyKTnttpl
                      MonadRandom-0.5.1@MonadRandom-0.5.1-IY6HiWu00vQLARukQW3KMH
                      ObjectName-1.1.0.1@ObjectName-1.1.0.1-EiFOWjUQWWuLyOhtrmuIWX
                      OpenGL-3.0.1.0@OpenGL-3.0.1.0-BckrJgI63aX3I0VRJxU6fY
                      OpenGLRaw-3.2.4.0@OpenGLRaw-3.2.4.0-JDyGgOXR61GG549SwmWm2Q
                      StateVar-1.1.0.4@StateVar-1.1.0.4-5dJbnTVECtEAhfJXPZKdbO
                      array-0.5.1.1@array-0.5.1.1 base-4.9.1.0
                      binary-0.8.3.0@binary-0.8.3.0
                      bytestring-0.10.8.1@bytestring-0.10.8.1
                      containers-0.5.7.1@containers-0.5.7.1
                      deepseq-1.4.2.0@deepseq-1.4.2.0
                      fixed-0.2.1.1@fixed-0.2.1.1-8Jr82l0kss5Gr4nEevmXlZ ghc-prim-0.5.0.0
                      half-0.2.2.3@half-0.2.2.3-GHJ372Ls7FBA3PAGtGHfOR
                      integer-gmp-1.0.0.1
                      mersenne-random-pure64-0.2.2.0@mersenne-random-pure64-0.2.2.0-560i5rQoI3i9IX3BgSFLBV
                      monad-parallel-0.7.2.2@monad-parallel-0.7.2.2-DgGZ1OYT6KM5SKZdJnC6sE
                      mtl-2.2.1@mtl-2.2.1-BLKBelFsPB3BoFeSWSOYj6
                      parallel-3.2.1.0@parallel-3.2.1.0-CNlrARikHUx7Z7NHwpxRS3
                      primitive-0.6.1.0@primitive-0.6.1.0-6AbSTw9JXz141LE5p6LGH
                      random-1.1@random-1.1-9tceXaeYIMZ4JrKq20Egog
                      random-shuffle-0.0.4@random-shuffle-0.0.4-97h14tPp7Ru21125sv6IMi
                      split-0.2.3.1@split-0.2.3.1-FWyXC6nhV0H3AfM8IzrEFk
                      stm-2.4.4.1@stm-2.4.4.1-JQn4hNPyYjP5m9AcbI88Ve
                      text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR
                      time-1.6.0.1@time-1.6.0.1 transformers-0.5.2.0@transformers-0.5.2.0
orphans: Evolverbetert-0.1.0.0-JiawwqdleTNHNC9Qg9fPkT:MyRandom
         base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
         binary-0.8.3.0@binary-0.8.3.0:Data.Binary.Generic
         bytestring-0.10.8.1@bytestring-0.10.8.1:Data.ByteString.Builder
         stm-2.4.4.1@stm-2.4.4.1-JQn4hNPyYjP5m9AcbI88Ve:Control.Monad.STM
         text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR:Data.Text
         text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR:Data.Text.Show
         time-1.6.0.1@time-1.6.0.1:Data.Time.Calendar.Gregorian
         time-1.6.0.1@time-1.6.0.1:Data.Time.Format.Parse
         time-1.6.0.1@time-1.6.0.1:Data.Time.LocalTime.LocalTime
         transformers-0.5.2.0@transformers-0.5.2.0:Control.Monad.Trans.Error
family instance modules: MonadRandom-0.5.1@MonadRandom-0.5.1-IY6HiWu00vQLARukQW3KMH:Control.Monad.Trans.Random.Lazy
                         base-4.9.1.0:Control.Applicative base-4.9.1.0:Data.Complex
                         base-4.9.1.0:Data.Either base-4.9.1.0:Data.Functor.Const
                         base-4.9.1.0:Data.Functor.Identity base-4.9.1.0:Data.List.NonEmpty
                         base-4.9.1.0:Data.Monoid base-4.9.1.0:Data.Semigroup
                         base-4.9.1.0:Data.Type.Equality base-4.9.1.0:Data.Version
                         base-4.9.1.0:Data.Void base-4.9.1.0:GHC.Exts
                         base-4.9.1.0:GHC.Generics base-4.9.1.0:GHC.IO.Exception
                         base-4.9.1.0:GHC.TypeLits
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntMap.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntSet.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Sequence
                         containers-0.5.7.1@containers-0.5.7.1:Data.Set.Base
                         primitive-0.6.1.0@primitive-0.6.1.0-6AbSTw9JXz141LE5p6LGH:Control.Monad.Primitive
                         text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR:Data.Text
import  -/  Misc e369c0044f3a6828d65da26cc67c036a
  exports: a3036bb0056918ea31bb3edb3bd0f2f1
  maybeCh ac094690c25bb9be58c2f3d1463a4a6d
  moore8 50291001c9a31f3c61b6249f3d3d58dd
import  -/  Mutations cf4c3d0c630c90a2e981bc2a4795d3a5
  exports: 07e4787ff96df80395353237fc2f2662
  mutAg 40047d4b7c4aadfcf57c2f4bef6349e7
import  -/  MyGraphics 7c0ffe47b4230756b57901c5223b5246
  exports: 1daec637f0a2ccdff52e1e0a4be5cdfe
  showWorld b27c2127d5dfe3d971c0b9ae360ddd04
import  -/  MyRandom 6550107e9ca18f776f56264c334ccfaa
  exports: 9b2c6f35135fc9455c1a3dd162ebc359
  Rand 8ad6bc0a02980079a34b3d183be0e1cc
  evalRand 7485b9fc82d1a5f239c7d01e75c343eb
  getDouble 77c5acbc26eb9fac333f57a3beffe418
  getMyStdGen 4d2476e437a517695045957f2739a9c5
  getRange ed956ee86810b2d1cf682ced1c25f87c
  pureMT 1c5a87f8ff28036c6ba5bd26da1d3c7f
  runRand a880fcba1e60ed35dc3e04e04ee71309
  setMyStdGen aef16105ad120265d0fdff6a85d23602
import  -/  Parameters 48e1b2fc115bb72998e1d4d477fa1e93
  exports: 5f973e3a01f953e950df5c127a831d15
  Time 879d5e19ebb9bc15f9454477e91cb426
  deathRate e9e76292deec60b132755b09265774eb
  display 072523fa7d913d43a379ea317d7f8603
  envSwitchProb 3b796b939ca858dba44d32d2598e0f4c
  height 11a41b235c8c74d554ad15017020aa10
  maxTime 28409dc3eda35b8a092dada345993b15
  nrEnv 8345559e80d2531135319c3308fbfd0b
  outputTime 220cbf22aed063a812d0c13d564d9048
  selectionPressure c4d9629fd29388c791e69055784ce3a6
  width 9796718fd371819fe8c1f5ab4717d562
  worldBounds bbc48d4f2b3efd5c4253ddddfd736c4c
  worldCoods 8f3de24b4ce4ba0142ea3923677c8b2f
import  -/  World 0d26c8647f8e525318dd9fb9138de0b7
  exports: e77751d24e4beac4ad5913cc5adf0fb0
  Agent 4b2cc13ce18d28c6c31329fb43199d06
  Env a1d0de52ada648163e32b03965fa7cc7
  NoAgent 1312a2fb7ba35216219a99207ca57f7b
  World d16299f3b53f4ddfc48bebc9b8288ec5
  World 9af19fb01ca0eb7d59ceb0e35f564957
  agents fb18882e5ecf2f932bf9bf289cd810e0
  devAg 57b4aafaafb403c7c20fc017e2cc3933
  env 1e61971513ed1299f547f48f70f98a8f
  fitnessAgent f4de6e89310d327417c17b60e8863395
  genome c5a1c16dd5abac14aa5dfb0e5dfe1efd
  hammDistAg ccf0a6969ac8d31e34f6d571639ba83a
  randomAgent f9327173b40bfc0a0e94611c7529abd6
import  -/  GLUT-2.7.0.11@GLUT-2.7.0.11-IP0PzJz4wI8KYXyKTnttpl:Graphics.UI.GLUT 850ab735296960c40e0ec36d1d65a5d9
import  -/  GLUT-2.7.0.11@GLUT-2.7.0.11-IP0PzJz4wI8KYXyKTnttpl:Graphics.UI.GLUT.Begin 05dfd16366721fd6a3e5ed4e8d031496
import  -/  GLUT-2.7.0.11@GLUT-2.7.0.11-IP0PzJz4wI8KYXyKTnttpl:Graphics.UI.GLUT.Callbacks.Window 055811271b55e7da82a607ecad66f70a
import  -/  GLUT-2.7.0.11@GLUT-2.7.0.11-IP0PzJz4wI8KYXyKTnttpl:Graphics.UI.GLUT.Initialization 6f5c3e11cdffd203f733838209805df8
import  -/  GLUT-2.7.0.11@GLUT-2.7.0.11-IP0PzJz4wI8KYXyKTnttpl:Graphics.UI.GLUT.State 848d0bde398956b53d4fab9d4a4e203b
import  -/  GLUT-2.7.0.11@GLUT-2.7.0.11-IP0PzJz4wI8KYXyKTnttpl:Graphics.UI.GLUT.Window 050ef4cbfa70b612c77f709bb8027899
import  -/  OpenGL-3.0.1.0@OpenGL-3.0.1.0-BckrJgI63aX3I0VRJxU6fY:Graphics.Rendering.OpenGL.GL.CoordTrans 75f4b70189073bad57f60e018a98f091
import  -/  OpenGL-3.0.1.0@OpenGL-3.0.1.0-BckrJgI63aX3I0VRJxU6fY:Graphics.Rendering.OpenGL.GLU.Matrix 1fa9dbebfc155f30d7e38f0da0231759
import  -/  StateVar-1.1.0.4@StateVar-1.1.0.4-5dJbnTVECtEAhfJXPZKdbO:Data.StateVar 54a09cc28cf7d6ddcbd881e9786d7bbd
import  -/  array-0.5.1.1@array-0.5.1.1:Data.Array.Base a1a813de21dd195f39f7a053a2142a3f
import  -/  array-0.5.1.1@array-0.5.1.1:Data.Array.IArray 606f8bb830eb2a88c29c91f27c77f304
import  -/  base-4.9.1.0:Control.Monad a6784c5dab0d75c63dabec5a37843f98
import  -/  base-4.9.1.0:Data.Fixed b80105ba94244c515fc7e741d2a7c501
import  -/  base-4.9.1.0:Data.Foldable 3e0b6967a1da89945d0e2d47266337a2
import  -/  base-4.9.1.0:Data.Function 7aca86bfbd92366def5f260e30cb2628
import  -/  base-4.9.1.0:Data.IORef 71c87b0b25a8bca3e3f4497725f5e543
import  -/  base-4.9.1.0:Data.List 07ae2acca6538aa0800bd0a993ac6ac1
import  -/  base-4.9.1.0:Data.Maybe d876c4ffe4b3c43755a781e8ad860d88
import  -/  base-4.9.1.0:Data.String b34df69c7b6358cd40a379c8a0a78dcf
import  -/  base-4.9.1.0:Data.Traversable 556020d7cf3c4a34a774600512918a37
import  -/  base-4.9.1.0:Data.Tuple 7dc4bbb45d2e69c991ffac438beeca11
import  -/  base-4.9.1.0:GHC.Base c4231c43c07e46080a26bf94094c7aa1
import  -/  base-4.9.1.0:GHC.IO eb504c57b397cf133849f8586f15dafb
import  -/  base-4.9.1.0:GHC.IO.Exception 5064be4c355632a1d1c4f2322f56ac52
import  -/  base-4.9.1.0:GHC.IO.Handle ba98a5b34d78cbf48b41fe58a3735c69
import  -/  base-4.9.1.0:GHC.IO.Handle.FD dbf0d0d4f42ab1465129a88ccf7880ff
import  -/  base-4.9.1.0:GHC.IO.Handle.Types 17aa0e2ab137800e3a31992d780c071f
import  -/  base-4.9.1.0:GHC.IO.IOMode 2f5782f93b12a0d860d6d661b9fb405c
import  -/  base-4.9.1.0:GHC.IORef 306bd532f2f3b000347cbe6316adc20e
import  -/  base-4.9.1.0:GHC.List ab8c4e523e6c479c549d3bcd5fc4a439
import  -/  base-4.9.1.0:GHC.Num 00bfaa7b2f9d6084913c0697a8a49ec8
import  -/  base-4.9.1.0:GHC.Real 82e4e59051a13dba1da63e1e970a69e6
import  -/  base-4.9.1.0:GHC.Show a027f5ac24879eaba752f44aa90fe511
import  -/  base-4.9.1.0:Prelude 22dd289b8469a8fa8dc81cab7b237771
import  -/  base-4.9.1.0:System.Console.GetOpt cc31faf101a3ac67abb428b865bee7a2
import  -/  base-4.9.1.0:System.Environment 08cb808e8e6a7821e6f8cfa76a977431
import  -/  base-4.9.1.0:System.IO e4a64a8e3dce8616da54f0ee7104f7db
import  -/  base-4.9.1.0:Text.Read 75c59863e882ebaec4532e9465e2ee9b
import  -/  bytestring-0.10.8.1@bytestring-0.10.8.1:Data.ByteString.Char8 64661030f691dd1495e363eeda7a5344
import  -/  containers-0.5.7.1@containers-0.5.7.1:Data.Map 20d4ffbee41965d03d6a989425473dc4
import  -/  ghc-prim-0.5.0.0:GHC.Classes 0bdf3d057a415ec1b84a7b1994efbe47
import  -/  ghc-prim-0.5.0.0:GHC.Types 89f8de4f08018c9177c98d979eae0e45
import  -/  monad-parallel-0.7.2.2@monad-parallel-0.7.2.2-DgGZ1OYT6KM5SKZdJnC6sE:Control.Monad.Parallel 3d5939245e33ac38d24f11e881f73827
import  -/  split-0.2.3.1@split-0.2.3.1-FWyXC6nhV0H3AfM8IzrEFk:Data.List.Split c60198a427bfd51d9fb4562c059ec1d2
1c334b96fd925a319cb62471eca327c9
  $fEqFlag :: GHC.Classes.Eq Evolverbetert.Flag
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Evolverbetert.Flag
                  Evolverbetert.$fEqFlag_$c==
                  Evolverbetert.$fEqFlag_$c/= -}
1c334b96fd925a319cb62471eca327c9
  $fEqFlag_$c/= ::
    Evolverbetert.Flag -> Evolverbetert.Flag -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Evolverbetert.Flag) (b :: Evolverbetert.Flag) ->
                 case Evolverbetert.$fEqFlag_$c== a b of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
1c334b96fd925a319cb62471eca327c9
  $fEqFlag_$c== ::
    Evolverbetert.Flag -> Evolverbetert.Flag -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (ds :: Evolverbetert.Flag)
                   (ds1 :: Evolverbetert.Flag) ->
                 case ds of wild {
                   Evolverbetert.Help
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False Evolverbetert.Help -> GHC.Types.True }
                   Evolverbetert.OutputFile a1
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        Evolverbetert.OutputFile b1 -> GHC.Base.eqString a1 b1 }
                   Evolverbetert.WorldSeed a1
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        Evolverbetert.WorldSeed b1 -> GHC.Base.eqString a1 b1 }
                   Evolverbetert.AgentSeed a1
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        Evolverbetert.AgentSeed b1 -> GHC.Base.eqString a1 b1 }
                   Evolverbetert.Graphics
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        Evolverbetert.Graphics -> GHC.Types.True } }) -}
1c334b96fd925a319cb62471eca327c9
  $fOrdFlag :: GHC.Classes.Ord Evolverbetert.Flag
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Evolverbetert.Flag
                  Evolverbetert.$fEqFlag
                  Evolverbetert.$fOrdFlag_$ccompare
                  Evolverbetert.$fOrdFlag_$c<
                  Evolverbetert.$fOrdFlag_$c<=
                  Evolverbetert.$fOrdFlag_$c>
                  Evolverbetert.$fOrdFlag_$c>=
                  Evolverbetert.$fOrdFlag_$cmax
                  Evolverbetert.$fOrdFlag_$cmin -}
1c334b96fd925a319cb62471eca327c9
  $fOrdFlag_$c< ::
    Evolverbetert.Flag -> Evolverbetert.Flag -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Evolverbetert.Flag) (y :: Evolverbetert.Flag) ->
                 case Evolverbetert.$fOrdFlag_$ccompare x y of wild {
                   DEFAULT -> GHC.Types.False GHC.Types.LT -> GHC.Types.True }) -}
1c334b96fd925a319cb62471eca327c9
  $fOrdFlag_$c<= ::
    Evolverbetert.Flag -> Evolverbetert.Flag -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Evolverbetert.Flag) (y :: Evolverbetert.Flag) ->
                 case Evolverbetert.$fOrdFlag_$ccompare x y of wild {
                   DEFAULT -> GHC.Types.True GHC.Types.GT -> GHC.Types.False }) -}
1c334b96fd925a319cb62471eca327c9
  $fOrdFlag_$c> ::
    Evolverbetert.Flag -> Evolverbetert.Flag -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Evolverbetert.Flag) (y :: Evolverbetert.Flag) ->
                 case Evolverbetert.$fOrdFlag_$ccompare x y of wild {
                   DEFAULT -> GHC.Types.False GHC.Types.GT -> GHC.Types.True }) -}
1c334b96fd925a319cb62471eca327c9
  $fOrdFlag_$c>= ::
    Evolverbetert.Flag -> Evolverbetert.Flag -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Evolverbetert.Flag) (y :: Evolverbetert.Flag) ->
                 case Evolverbetert.$fOrdFlag_$ccompare x y of wild {
                   DEFAULT -> GHC.Types.True GHC.Types.LT -> GHC.Types.False }) -}
1c334b96fd925a319cb62471eca327c9
  $fOrdFlag_$ccompare ::
    Evolverbetert.Flag -> Evolverbetert.Flag -> GHC.Types.Ordering
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (a :: Evolverbetert.Flag)
                   (b :: Evolverbetert.Flag) ->
                 case a of wild {
                   Evolverbetert.Help
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.LT Evolverbetert.Help -> GHC.Types.EQ }
                   Evolverbetert.OutputFile a1
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.LT
                        Evolverbetert.Help -> GHC.Types.GT
                        Evolverbetert.OutputFile b1
                        -> GHC.Classes.$fOrd[]_$s$ccompare1 a1 b1 }
                   Evolverbetert.WorldSeed a1
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.GT
                        Evolverbetert.WorldSeed ds
                        -> GHC.Classes.$fOrd[]_$s$ccompare1 a1 ds
                        Evolverbetert.AgentSeed ds -> GHC.Types.LT
                        Evolverbetert.Graphics -> GHC.Types.LT }
                   Evolverbetert.AgentSeed a1
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.GT
                        Evolverbetert.AgentSeed b1
                        -> GHC.Classes.$fOrd[]_$s$ccompare1 a1 b1
                        Evolverbetert.Graphics -> GHC.Types.LT }
                   Evolverbetert.Graphics
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.GT
                        Evolverbetert.Graphics -> GHC.Types.EQ } }) -}
1c334b96fd925a319cb62471eca327c9
  $fOrdFlag_$cmax ::
    Evolverbetert.Flag -> Evolverbetert.Flag -> Evolverbetert.Flag
  {- Arity: 2, HasNoCafRefs, Strictness: <S,U><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Evolverbetert.Flag) (y :: Evolverbetert.Flag) ->
                 case Evolverbetert.$fOrdFlag_$ccompare x y of wild {
                   DEFAULT -> y GHC.Types.GT -> x }) -}
1c334b96fd925a319cb62471eca327c9
  $fOrdFlag_$cmin ::
    Evolverbetert.Flag -> Evolverbetert.Flag -> Evolverbetert.Flag
  {- Arity: 2, HasNoCafRefs, Strictness: <S,U><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Evolverbetert.Flag) (y :: Evolverbetert.Flag) ->
                 case Evolverbetert.$fOrdFlag_$ccompare x y of wild {
                   DEFAULT -> x GHC.Types.GT -> y }) -}
1c334b96fd925a319cb62471eca327c9
  $fShowFlag :: GHC.Show.Show Evolverbetert.Flag
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Evolverbetert.Flag
                  Evolverbetert.$fShowFlag_$cshowsPrec
                  Evolverbetert.$fShowFlag_$cshow
                  Evolverbetert.$fShowFlag_$cshowList -}
1c334b96fd925a319cb62471eca327c9
  $fShowFlag1 :: Evolverbetert.Flag -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (Evolverbetert.$fShowFlag_$cshowsPrec
                   Evolverbetert.$fShowFlag2) -}
8cfdecb05043f6dcdd5316df332e86cb
  $fShowFlag2 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 0#) -}
1c05ef004af342e1a23e1447e1e38b2b
  $fShowFlag3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Graphics"#) -}
464467daf4c2dd4091300e3730a454fc
  $fShowFlag4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "AgentSeed "#) -}
050ae37db0747aa460bf403ade6b3b04
  $fShowFlag5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "WorldSeed "#) -}
a82cbbc4ae06c7f1770ea931d34920f5
  $fShowFlag6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "OutputFile "#) -}
24a9654222fc517e50742b5b1deb6fb5
  $fShowFlag7 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Help"#) -}
98901add9a3ca1857257fe3cd1aa8ba0
  $fShowFlag8 :: [GHC.Types.Char]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   GHC.Show.shows6
                   (GHC.Types.[] @ GHC.Types.Char)) -}
1c334b96fd925a319cb62471eca327c9
  $fShowFlag_$cshow :: Evolverbetert.Flag -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (x :: Evolverbetert.Flag) ->
                 case x of wild {
                   Evolverbetert.Help -> Evolverbetert.$fShowFlag7
                   Evolverbetert.OutputFile b1
                   -> GHC.Base.++
                        @ GHC.Types.Char
                        Evolverbetert.$fShowFlag6
                        (GHC.Types.:
                           @ GHC.Types.Char
                           GHC.Show.shows6
                           (GHC.Show.showLitString b1 Evolverbetert.$fShowFlag8))
                   Evolverbetert.WorldSeed b1
                   -> GHC.Base.++
                        @ GHC.Types.Char
                        Evolverbetert.$fShowFlag5
                        (GHC.Types.:
                           @ GHC.Types.Char
                           GHC.Show.shows6
                           (GHC.Show.showLitString b1 Evolverbetert.$fShowFlag8))
                   Evolverbetert.AgentSeed b1
                   -> GHC.Base.++
                        @ GHC.Types.Char
                        Evolverbetert.$fShowFlag4
                        (GHC.Types.:
                           @ GHC.Types.Char
                           GHC.Show.shows6
                           (GHC.Show.showLitString b1 Evolverbetert.$fShowFlag8))
                   Evolverbetert.Graphics -> Evolverbetert.$fShowFlag3 }) -}
1c334b96fd925a319cb62471eca327c9
  $fShowFlag_$cshowList :: [Evolverbetert.Flag] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ Evolverbetert.Flag
                   Evolverbetert.$fShowFlag1) -}
1c334b96fd925a319cb62471eca327c9
  $fShowFlag_$cshowsPrec ::
    GHC.Types.Int -> Evolverbetert.Flag -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,1*U(U)><S,1*U><L,U>,
     Unfolding: (\ (ds :: GHC.Types.Int)
                   (ds1 :: Evolverbetert.Flag)
                   (eta :: GHC.Base.String) ->
                 case ds1 of wild {
                   Evolverbetert.Help
                   -> GHC.Base.++ @ GHC.Types.Char Evolverbetert.$fShowFlag7 eta
                   Evolverbetert.OutputFile b1
                   -> case ds of wild1 { GHC.Types.I# x ->
                      case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.>=# x 11#) of wild2 {
                        GHC.Types.False
                        -> GHC.Base.++
                             @ GHC.Types.Char
                             Evolverbetert.$fShowFlag6
                             (GHC.Types.:
                                @ GHC.Types.Char
                                GHC.Show.shows6
                                (GHC.Show.showLitString
                                   b1
                                   (GHC.Types.: @ GHC.Types.Char GHC.Show.shows6 eta)))
                        GHC.Types.True
                        -> GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.shows7
                             (GHC.Base.++
                                @ GHC.Types.Char
                                Evolverbetert.$fShowFlag6
                                (GHC.Types.:
                                   @ GHC.Types.Char
                                   GHC.Show.shows6
                                   (GHC.Show.showLitString
                                      b1
                                      (GHC.Types.:
                                         @ GHC.Types.Char
                                         GHC.Show.shows6
                                         (GHC.Types.: @ GHC.Types.Char GHC.Show.shows4 eta))))) } }
                   Evolverbetert.WorldSeed b1
                   -> case ds of wild1 { GHC.Types.I# x ->
                      case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.>=# x 11#) of wild2 {
                        GHC.Types.False
                        -> GHC.Base.++
                             @ GHC.Types.Char
                             Evolverbetert.$fShowFlag5
                             (GHC.Types.:
                                @ GHC.Types.Char
                                GHC.Show.shows6
                                (GHC.Show.showLitString
                                   b1
                                   (GHC.Types.: @ GHC.Types.Char GHC.Show.shows6 eta)))
                        GHC.Types.True
                        -> GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.shows7
                             (GHC.Base.++
                                @ GHC.Types.Char
                                Evolverbetert.$fShowFlag5
                                (GHC.Types.:
                                   @ GHC.Types.Char
                                   GHC.Show.shows6
                                   (GHC.Show.showLitString
                                      b1
                                      (GHC.Types.:
                                         @ GHC.Types.Char
                                         GHC.Show.shows6
                                         (GHC.Types.: @ GHC.Types.Char GHC.Show.shows4 eta))))) } }
                   Evolverbetert.AgentSeed b1
                   -> case ds of wild1 { GHC.Types.I# x ->
                      case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.>=# x 11#) of wild2 {
                        GHC.Types.False
                        -> GHC.Base.++
                             @ GHC.Types.Char
                             Evolverbetert.$fShowFlag4
                             (GHC.Types.:
                                @ GHC.Types.Char
                                GHC.Show.shows6
                                (GHC.Show.showLitString
                                   b1
                                   (GHC.Types.: @ GHC.Types.Char GHC.Show.shows6 eta)))
                        GHC.Types.True
                        -> GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.shows7
                             (GHC.Base.++
                                @ GHC.Types.Char
                                Evolverbetert.$fShowFlag4
                                (GHC.Types.:
                                   @ GHC.Types.Char
                                   GHC.Show.shows6
                                   (GHC.Show.showLitString
                                      b1
                                      (GHC.Types.:
                                         @ GHC.Types.Char
                                         GHC.Show.shows6
                                         (GHC.Types.: @ GHC.Types.Char GHC.Show.shows4 eta))))) } }
                   Evolverbetert.Graphics
                   -> GHC.Base.++ @ GHC.Types.Char Evolverbetert.$fShowFlag3 eta }) -}
6e3d4497e2e602fc8ee998442420b9d6
  $tc'AgentSeed :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   11845945558769014239##
                   1362871597912215946##
                   Evolverbetert.$trModule
                   Evolverbetert.$tc'AgentSeed1) -}
b655ccfc3051249d0aa486e85dde537c
  $tc'AgentSeed1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'AgentSeed"#) -}
cf026001ad9e7f3722551bb87aab4237
  $tc'Graphics :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   7145275935320614261##
                   3818950886840160905##
                   Evolverbetert.$trModule
                   Evolverbetert.$tc'Graphics1) -}
2000a335d7afff41f68fb5c0cbd23f25
  $tc'Graphics1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Graphics"#) -}
fe114ca78c1a5b478764058d12e517e8
  $tc'Help :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   8961375130141207493##
                   15924758769338368740##
                   Evolverbetert.$trModule
                   Evolverbetert.$tc'Help1) -}
c7953cd2f25a496d8355fb6788dc4a21
  $tc'Help1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Help"#) -}
d2c13d1bc83af6331ecb4b0119771f5a
  $tc'OutputFile :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   6936850840864859142##
                   2004179360165458226##
                   Evolverbetert.$trModule
                   Evolverbetert.$tc'OutputFile1) -}
775ac3c37892ff7e0830dd8386a73b94
  $tc'OutputFile1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'OutputFile"#) -}
6ef925be2747ab62d15178f4eb227eac
  $tc'WorldSeed :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   651415342536730509##
                   9204617633148199185##
                   Evolverbetert.$trModule
                   Evolverbetert.$tc'WorldSeed1) -}
001b9f539ffef9454cba2e5262b3c40a
  $tc'WorldSeed1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'WorldSeed"#) -}
ce253fb7d13407ba9781aaf8177fa4ca
  $tcFlag :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   1605086873100995822##
                   13318768977517827376##
                   Evolverbetert.$trModule
                   Evolverbetert.$tcFlag1) -}
f1d9b122fcf4096264e4ca6bda869959
  $tcFlag1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Flag"#) -}
a9fdf79c7a27742bbc23bff52f3f8cd1
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Evolverbetert.$trModule2
                   Evolverbetert.$trModule1) -}
5ba1e2f36637701a1f28186d114892ef
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Evolverbetert"#) -}
9dca04ccc051bdaf7b67b3ed4a7d10fc
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   "Evolverbetert-0.1.0.0-JiawwqdleTNHNC9Qg9fPkT"#) -}
24f7a508b30ca76f38fb02493c79839c
  $wf :: GHC.Prim.Double# -> GHC.Prim.Int# -> GHC.Prim.Double#
  {- Arity: 2, HasNoCafRefs, Strictness: <L,U><S,U>, Inline: [0] -}
1c334b96fd925a319cb62471eca327c9
  data Flag
    = Help
    | OutputFile GHC.Base.String
    | WorldSeed GHC.Base.String
    | AgentSeed GHC.Base.String
    | Graphics
74582c5f878e3a703612da8856127493
  main :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Evolverbetert.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R)) -}
cd7059d7e8ed8dd38f98f3ba6e53f384
  main1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U> -}
instance GHC.Classes.Eq [Evolverbetert.Flag]
  = Evolverbetert.$fEqFlag
instance GHC.Classes.Ord [Evolverbetert.Flag]
  = Evolverbetert.$fOrdFlag
instance GHC.Show.Show [Evolverbetert.Flag]
  = Evolverbetert.$fShowFlag
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

