
==================== FINAL INTERFACE ====================
2017-05-02 08:28:14.694504 UTC

interface Evolverbetert-0.1.0.0-oxgjcqyO3h9h1Y3DYcTQF:Mutations [hpc] 8002
  interface hash: 9646c644a21288e6926e09047786efec
  ABI hash: 4f24482d924ed7731ffffdcdbe41f518
  export-list hash: 34643337f6a8d0bae52b1537e30740f5
  orphan hash: eff3823c214c88bde40d44932e61b8f7
  flag hash: 566c261facb1547c57528108f6948d9c
  sig of: Nothing
  used TH splices: False
  where
exports:
  Mutations.mutAg
module dependencies: Misc MyRandom Parameters Types World
package dependencies: MonadRandom-0.5.1@MonadRandom-0.5.1-IY6HiWu00vQLARukQW3KMH
                      array-0.5.1.1@array-0.5.1.1 base-4.9.1.0
                      containers-0.5.7.1@containers-0.5.7.1
                      deepseq-1.4.2.0@deepseq-1.4.2.0 ghc-prim-0.5.0.0
                      integer-gmp-1.0.0.1
                      mersenne-random-pure64-0.2.2.0@mersenne-random-pure64-0.2.2.0-560i5rQoI3i9IX3BgSFLBV
                      mtl-2.2.1@mtl-2.2.1-BLKBelFsPB3BoFeSWSOYj6
                      primitive-0.6.1.0@primitive-0.6.1.0-6AbSTw9JXz141LE5p6LGH
                      random-1.1@random-1.1-9tceXaeYIMZ4JrKq20Egog
                      random-shuffle-0.0.4@random-shuffle-0.0.4-97h14tPp7Ru21125sv6IMi
                      split-0.2.3.1@split-0.2.3.1-FWyXC6nhV0H3AfM8IzrEFk
                      time-1.6.0.1@time-1.6.0.1 transformers-0.5.2.0@transformers-0.5.2.0
orphans: Evolverbetert-0.1.0.0-oxgjcqyO3h9h1Y3DYcTQF:MyRandom
         base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
         time-1.6.0.1@time-1.6.0.1:Data.Time.Calendar.Gregorian
         time-1.6.0.1@time-1.6.0.1:Data.Time.Format.Parse
         time-1.6.0.1@time-1.6.0.1:Data.Time.LocalTime.LocalTime
         transformers-0.5.2.0@transformers-0.5.2.0:Control.Monad.Trans.Error
family instance modules: MonadRandom-0.5.1@MonadRandom-0.5.1-IY6HiWu00vQLARukQW3KMH:Control.Monad.Trans.Random.Lazy
                         base-4.9.1.0:Control.Applicative base-4.9.1.0:Data.Complex
                         base-4.9.1.0:Data.Either base-4.9.1.0:Data.Functor.Const
                         base-4.9.1.0:Data.Functor.Identity base-4.9.1.0:Data.List.NonEmpty
                         base-4.9.1.0:Data.Monoid base-4.9.1.0:Data.Semigroup
                         base-4.9.1.0:Data.Type.Equality base-4.9.1.0:Data.Version
                         base-4.9.1.0:Data.Void base-4.9.1.0:GHC.Exts
                         base-4.9.1.0:GHC.Generics base-4.9.1.0:GHC.IO.Exception
                         base-4.9.1.0:GHC.TypeLits
                         containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Set.Base
                         primitive-0.6.1.0@primitive-0.6.1.0-6AbSTw9JXz141LE5p6LGH:Control.Monad.Primitive
import  -/  Misc 2a73154b77cca82acd707da299a4eae7
  exports: 6e476ec0cb13f7693c20e9797b9ba3fd
  maybeCh 89bd4b18e9943e3fdd7296ef77a24437
  repeatCollect d118d187e2d0ee1d44043e2f82a7f251
import  -/  MyRandom 0dcc6c91c6e70d06c08b5b82a04f1337
  exports: 7821f15d6cc2cc02e9e8abba923ea43b
  Rand 0b4ec93ad64459693414d10d5fef2098
  getBool 785f01b937b6781166fcdd69af059cbd
  getDouble 612c32438a8ddd95508bbe0c732fad78
  getRange bf86d5d1dcbef991a4fc47a8b9797b1f
import  -/  Parameters 03aa3ef78a378dc6bdbf28d3e0f800f1
  exports: fea0ab185fab0b15ba191f9d3ea960f0
  Prob 3bbcc3c1c0cc1ac7688633422406105c
  maxThres facfa0cb78148d75e4a0cd2fcce8d21e
  minThres 82676fc9c8eb6085dc8d5221afdb5c2f
  nrGeneTypes' 8780f97d6be39bdfa67a5f4114fd994f
  pGenDel 6b1a2657b01f84e5a044b0d15e0b04c7
  pGenDup 3b2a85bc10d444993607ac46df614231
  pGenThresCh edb4a725fe16d83f563920f8b1461ee8
  pTfbsDel b098ab9c11ff03d4a9b04642228fb605
  pTfbsDup ed341fff5a698c99db1eab1cf1e67f2c
  pTfbsInnov 46d3b456bda01d8e0b2055ec551dee02
  pTfbsPrefCh f47ccb32d074d8439f1fd00b506e7aae
  pTfbsWtCh 53c9a0d58b8fa8c26be3621b6bde6fd9
import  -/  Types 32978543d3e5942c0fca1d899b402377
  exports: f2d3892cae9faa75e4d9e5ce4ff3401f
  Agent 6e70c078bbe4ade34d62bafca45b69c1
  Agent 38df965694c57ea8a99df285579eb778
  CGene 21c05e9ab2bff6a8a7578acd0fe8c328
  CTfbs 7420e066f811d73e6ba289e5f4e3627e
  Chromosome b0226af39439d913341efe44e43bfe94
  Gene 1a54626e2985fb35d77d52576fd30ef5
  Gene a072f6d238ac5e449aeaa2a33683da36
  ID 4b20d6d0265267d2f650e3a662978c2b
  ID 11cf07ccdff9acbf576dc2c8351e445c
  Locus 3a1ffa0ff8e7c5056897e544d9829245
  NoAgent eb2f5928cf741a34cae5c8a97231993d
  Tfbs 2ae56c392d1e2582f48466147b66b169
  Tfbs 1dea3bc58315922227e05d4377f1eea5
import  -/  World b68ee2aa83d202441effdbc7ccdf8d84
  exports: b3b8d7f652ad50a1ed48dfa408cd2db9
  gSTFromGenome ddd02c5b25600a85eb4abd1b649d2599
  groupGeneTfbs f0dacebfc5dcb096d7639d5a4baeddda
  reduceToTfbss f800a3b2e969aba9d9f6add26ca5ced2
import  -/  base-4.9.1.0:Control.Monad a6784c5dab0d75c63dabec5a37843f98
import  -/  base-4.9.1.0:Data.Foldable 3e0b6967a1da89945d0e2d47266337a2
import  -/  base-4.9.1.0:Data.Functor 5ab1dc703df5b482e77efb697833ca3c
import  -/  base-4.9.1.0:Data.List 07ae2acca6538aa0800bd0a993ac6ac1
import  -/  base-4.9.1.0:Data.OldList 27987919d8da2f92e3f472ca81f730f8
import  -/  base-4.9.1.0:Data.Traversable 556020d7cf3c4a34a774600512918a37
import  -/  base-4.9.1.0:GHC.Base c4231c43c07e46080a26bf94094c7aa1
import  -/  base-4.9.1.0:GHC.List ab8c4e523e6c479c549d3bcd5fc4a439
import  -/  base-4.9.1.0:GHC.Num 00bfaa7b2f9d6084913c0697a8a49ec8
import  -/  base-4.9.1.0:GHC.Real 82e4e59051a13dba1da63e1e970a69e6
import  -/  base-4.9.1.0:Prelude 22dd289b8469a8fa8dc81cab7b237771
import  -/  ghc-prim-0.5.0.0:GHC.Classes 0bdf3d057a415ec1b84a7b1994efbe47
7fec0aae0cace03f7e99b52ff1cf44ac
  $s$fApplicativeStateT ::
    GHC.Base.Applicative
      (Control.Monad.Trans.State.Strict.StateT
         s Data.Functor.Identity.Identity)
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ s.
                  @ (Control.Monad.Trans.State.Strict.StateT
                       s Data.Functor.Identity.Identity)
                  (Mutations.$s$fApplicativeStateT_$s$fApplicativeStateT_$cp1Applicative
                     @ s)
                  (Mutations.$s$fApplicativeStateT_$s$fApplicativeStateT_$cpure @ s)
                  (Mutations.$s$fApplicativeStateT_$s$fApplicativeStateT_$c<*> @ s)
                  (Control.Monad.Trans.State.Strict.$fApplicativeStateT_$c*>
                     @ Data.Functor.Identity.Identity
                     @ s
                     Mutations.$s$fApplicativeStateT_$dFunctor
                     Data.Functor.Identity.$fMonadIdentity)
                  (Control.Monad.Trans.State.Strict.$fApplicativeStateT_$c<*
                     @ Data.Functor.Identity.Identity
                     @ s
                     Mutations.$s$fApplicativeStateT_$dFunctor
                     Data.Functor.Identity.$fMonadIdentity) -}
2bcc75dcf027da9835668dc214a3cb17
  $s$fApplicativeStateT_$dFunctor ::
    GHC.Base.Functor Data.Functor.Identity.Identity
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Data.Functor.Identity.$fFunctorIdentity -}
2750c9bd67d85f5775f954267d302b32
  $s$fApplicativeStateT_$s$fApplicativeStateT_$c<*> ::
    Control.Monad.Trans.State.Strict.StateT
      s Data.Functor.Identity.Identity (a -> b)
    -> Control.Monad.Trans.State.Strict.StateT
         s Data.Functor.Identity.Identity a
    -> Control.Monad.Trans.State.Strict.StateT
         s Data.Functor.Identity.Identity b
  {- Arity: 3, HasNoCafRefs,
     Strictness: <C(S),1*C1(U(1*C1(U),U))><C(S),1*C1(U(U,U))><L,U>m,
     Inline: INLINE (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ @ s
                   @ a
                   @ b
                   (ds :: Control.Monad.Trans.State.Strict.StateT
                            s Data.Functor.Identity.Identity (a -> b))
                   (ds1 :: Control.Monad.Trans.State.Strict.StateT
                             s Data.Functor.Identity.Identity a) ->
                 GHC.Base.$
                   @ 'GHC.Types.PtrRepLifted
                   @ (s -> Data.Functor.Identity.Identity (b, s))
                   @ (Control.Monad.Trans.State.Strict.StateT
                        s Data.Functor.Identity.Identity b)
                   (\ (tpl :: s -> Data.Functor.Identity.Identity (b, s)) -> tpl)
                     `cast`
                   (<s -> Data.Functor.Identity.Identity (b, s)>_R
                    ->_R Sym (Control.Monad.Trans.State.Strict.N:StateT[0]
                                  <s>_N <Data.Functor.Identity.Identity>_R <b>_N))
                   (\ (s1 :: s) ->
                    Data.Functor.Identity.$fMonadIdentity_$c>>=
                      @ (a -> b, s)
                      @ (b, s)
                      (ds
                         `cast`
                       (Control.Monad.Trans.State.Strict.N:StateT[0]
                            <s>_N <Data.Functor.Identity.Identity>_R <a -> b>_N)
                         s1)
                      (\ (ds2 :: (a -> b, s))[OneShot] ->
                       case ds2 of wild { (,) f s' ->
                       Data.Functor.Identity.$fMonadIdentity_$c>>=
                         @ (a, s)
                         @ (b, s)
                         (ds1
                            `cast`
                          (Control.Monad.Trans.State.Strict.N:StateT[0]
                               <s>_N <Data.Functor.Identity.Identity>_R <a>_N)
                            s')
                         (\ (ds3 :: (a, s))[OneShot] ->
                          case ds3 of wild1 { (,) x s'' ->
                          Data.Functor.Identity.$fApplicativeIdentity_$cpure
                            @ (b, s)
                            (f x, s'') }) }))) -}
dc6bea3ab4703a3eb7796e1c442b6805
  $s$fApplicativeStateT_$s$fApplicativeStateT_$cp1Applicative ::
    GHC.Base.Functor
      (Control.Monad.Trans.State.Strict.StateT
         s Data.Functor.Identity.Identity)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Mutations.$s$fApplicativeStateT_$s$fFunctorStateT -}
dd32abec61006963348a0802f92dad63
  $s$fApplicativeStateT_$s$fApplicativeStateT_$cpure ::
    a
    -> Control.Monad.Trans.State.Strict.StateT
         s Data.Functor.Identity.Identity a
  {- Arity: 2, HasNoCafRefs, Strictness: <L,U><L,U>m,
     Inline: INLINE (sat-args=1),
     Unfolding: InlineRule (1, False, False)
                (\ @ s @ a (a1 :: a) ->
                 GHC.Base.$
                   @ 'GHC.Types.PtrRepLifted
                   @ (s -> Data.Functor.Identity.Identity (a, s))
                   @ (Control.Monad.Trans.State.Strict.StateT
                        s Data.Functor.Identity.Identity a)
                   (\ (tpl :: s -> Data.Functor.Identity.Identity (a, s)) -> tpl)
                     `cast`
                   (<s -> Data.Functor.Identity.Identity (a, s)>_R
                    ->_R Sym (Control.Monad.Trans.State.Strict.N:StateT[0]
                                  <s>_N <Data.Functor.Identity.Identity>_R <a>_N))
                   (\ (s1 :: s) ->
                    Data.Functor.Identity.$fApplicativeIdentity_$cpure
                      @ (a, s)
                      (a1, s1))) -}
fb2c5ba344bb93c9ff7e2a049b906b3c
  $s$fApplicativeStateT_$s$fFunctorStateT ::
    GHC.Base.Functor
      (Control.Monad.Trans.State.Strict.StateT
         s Data.Functor.Identity.Identity)
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ s.
                  @ (Control.Monad.Trans.State.Strict.StateT
                       s Data.Functor.Identity.Identity)
                  (Mutations.$s$fApplicativeStateT_$s$fFunctorStateT_$cfmap @ s)
                  (Control.Monad.Trans.State.Strict.$fFunctorStateT_$c<$
                     @ Data.Functor.Identity.Identity
                     @ s
                     Data.Functor.Identity.$fFunctorIdentity) -}
6cacc671bdc149083264281798628634
  $s$fApplicativeStateT_$s$fFunctorStateT_$cfmap ::
    (a -> b)
    -> Control.Monad.Trans.State.Strict.StateT
         s Data.Functor.Identity.Identity a
    -> Control.Monad.Trans.State.Strict.StateT
         s Data.Functor.Identity.Identity b
  {- Arity: 3, HasNoCafRefs,
     Strictness: <L,1*C1(U)><C(S),1*C1(U(U,U))><L,U>m,
     Inline: INLINE (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ @ s
                   @ a
                   @ b
                   (f :: a -> b)
                   (m1 :: Control.Monad.Trans.State.Strict.StateT
                            s Data.Functor.Identity.Identity a) ->
                 GHC.Base.$
                   @ 'GHC.Types.PtrRepLifted
                   @ (s -> Data.Functor.Identity.Identity (b, s))
                   @ (Control.Monad.Trans.State.Strict.StateT
                        s Data.Functor.Identity.Identity b)
                   (\ (tpl :: s -> Data.Functor.Identity.Identity (b, s)) -> tpl)
                     `cast`
                   (<s -> Data.Functor.Identity.Identity (b, s)>_R
                    ->_R Sym (Control.Monad.Trans.State.Strict.N:StateT[0]
                                  <s>_N <Data.Functor.Identity.Identity>_R <b>_N))
                   (\ (s1 :: s) ->
                    GHC.Base.$
                      @ 'GHC.Types.PtrRepLifted
                      @ (Data.Functor.Identity.Identity (a, s))
                      @ (Data.Functor.Identity.Identity (b, s))
                      (Data.Functor.Identity.$fFunctorIdentity_$cfmap
                         @ (a, s)
                         @ (b, s)
                         (\ (ds :: (a, s)) -> case ds of wild { (,) a1 s' -> (f a1, s') }))
                      (Control.Monad.Trans.State.Strict.runStateT
                         @ s
                         @ Data.Functor.Identity.Identity
                         @ a
                         m1
                         s1))) -}
d0fa82990c39f4f7c7da2ef794493019
  $s$fMonadStateT ::
    GHC.Base.Monad
      (Control.Monad.Trans.State.Strict.StateT
         s Data.Functor.Identity.Identity)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ s.
                  @ (Control.Monad.Trans.State.Strict.StateT
                       s Data.Functor.Identity.Identity)
                  (Mutations.$s$fMonadStateT_$s$fMonadStateT_$cp1Monad @ s)
                  (Mutations.$s$fMonadStateT_$s$fMonadStateT_$c>>= @ s)
                  (Mutations.$s$fMonadStateT_$s$fMonadStateT_$c>> @ s)
                  (Control.Monad.Trans.State.Strict.$fMonadStateT_$creturn
                     @ Data.Functor.Identity.Identity
                     @ s
                     Data.Functor.Identity.$fMonadIdentity)
                  (Mutations.$s$fMonadStateT_$s$fMonadStateT_$cfail @ s) -}
2513b9eb3c069bcbe3906e2952a6bda6
  $s$fMonadStateT_$s$fMonadStateT_$c>> ::
    Control.Monad.Trans.State.Strict.StateT
      s Data.Functor.Identity.Identity a
    -> Control.Monad.Trans.State.Strict.StateT
         s Data.Functor.Identity.Identity b
    -> Control.Monad.Trans.State.Strict.StateT
         s Data.Functor.Identity.Identity b
  {- Arity: 3, HasNoCafRefs,
     Strictness: <C(S),1*C1(U(A,U))><C(S),1*C1(U(U,U))><L,U>,
     Inline: INLINE (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ @ s
                   @ a
                   @ b
                   (m1 :: Control.Monad.Trans.State.Strict.StateT
                            s Data.Functor.Identity.Identity a)
                   (k :: Control.Monad.Trans.State.Strict.StateT
                           s Data.Functor.Identity.Identity b) ->
                 GHC.Base.$
                   @ 'GHC.Types.PtrRepLifted
                   @ (s -> Data.Functor.Identity.Identity (b, s))
                   @ (Control.Monad.Trans.State.Strict.StateT
                        s Data.Functor.Identity.Identity b)
                   (\ (tpl :: s -> Data.Functor.Identity.Identity (b, s)) -> tpl)
                     `cast`
                   (<s -> Data.Functor.Identity.Identity (b, s)>_R
                    ->_R Sym (Control.Monad.Trans.State.Strict.N:StateT[0]
                                  <s>_N <Data.Functor.Identity.Identity>_R <b>_N))
                   (\ (s1 :: s) ->
                    Data.Functor.Identity.$fMonadIdentity_$c>>=
                      @ (a, s)
                      @ (b, s)
                      (Control.Monad.Trans.State.Strict.runStateT
                         @ s
                         @ Data.Functor.Identity.Identity
                         @ a
                         m1
                         s1)
                      (\ (ds :: (a, s))[OneShot] ->
                       case ds of wild { (,) a1 s' ->
                       Control.Monad.Trans.State.Strict.runStateT
                         @ s
                         @ Data.Functor.Identity.Identity
                         @ b
                         k
                         s' }))) -}
f5bfcfe622a9c0c3189c993f807f6c7e
  $s$fMonadStateT_$s$fMonadStateT_$c>>= ::
    Control.Monad.Trans.State.Strict.StateT
      s Data.Functor.Identity.Identity a
    -> (a
        -> Control.Monad.Trans.State.Strict.StateT
             s Data.Functor.Identity.Identity b)
    -> Control.Monad.Trans.State.Strict.StateT
         s Data.Functor.Identity.Identity b
  {- Arity: 3, HasNoCafRefs,
     Strictness: <C(S),1*C1(U(U,U))><C(C(S)),1*C1(C1(U(U,U)))><L,U>,
     Inline: INLINE (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ @ s
                   @ a
                   @ b
                   (m1 :: Control.Monad.Trans.State.Strict.StateT
                            s Data.Functor.Identity.Identity a)
                   (k :: a
                         -> Control.Monad.Trans.State.Strict.StateT
                              s Data.Functor.Identity.Identity b) ->
                 GHC.Base.$
                   @ 'GHC.Types.PtrRepLifted
                   @ (s -> Data.Functor.Identity.Identity (b, s))
                   @ (Control.Monad.Trans.State.Strict.StateT
                        s Data.Functor.Identity.Identity b)
                   (\ (tpl :: s -> Data.Functor.Identity.Identity (b, s)) -> tpl)
                     `cast`
                   (<s -> Data.Functor.Identity.Identity (b, s)>_R
                    ->_R Sym (Control.Monad.Trans.State.Strict.N:StateT[0]
                                  <s>_N <Data.Functor.Identity.Identity>_R <b>_N))
                   (\ (s1 :: s) ->
                    Data.Functor.Identity.$fMonadIdentity_$c>>=
                      @ (a, s)
                      @ (b, s)
                      (Control.Monad.Trans.State.Strict.runStateT
                         @ s
                         @ Data.Functor.Identity.Identity
                         @ a
                         m1
                         s1)
                      (\ (ds :: (a, s))[OneShot] ->
                       case ds of wild { (,) a1 s' ->
                       Control.Monad.Trans.State.Strict.runStateT
                         @ s
                         @ Data.Functor.Identity.Identity
                         @ b
                         (k a1)
                         s' }))) -}
17c2fd80007fad270cf865907cce456d
  $s$fMonadStateT_$s$fMonadStateT_$cfail ::
    GHC.Base.String
    -> Control.Monad.Trans.State.Strict.StateT
         s Data.Functor.Identity.Identity a
  {- Arity: 2, Strictness: <B,U><B,A>x, Inline: INLINE (sat-args=1),
     Unfolding: InlineRule (1, False, False)
                (\ @ s @ a (str :: GHC.Base.String) ->
                 GHC.Base.$
                   @ 'GHC.Types.PtrRepLifted
                   @ (s -> Data.Functor.Identity.Identity (a, s))
                   @ (Control.Monad.Trans.State.Strict.StateT
                        s Data.Functor.Identity.Identity a)
                   (\ (tpl :: s -> Data.Functor.Identity.Identity (a, s)) -> tpl)
                     `cast`
                   (<s -> Data.Functor.Identity.Identity (a, s)>_R
                    ->_R Sym (Control.Monad.Trans.State.Strict.N:StateT[0]
                                  <s>_N <Data.Functor.Identity.Identity>_R <a>_N))
                   (\ (ds :: s) ->
                    Data.Functor.Identity.$fMonadIdentity_$s$dmfail @ (a, s) str)) -}
2d33027fdfb59bfca3ef2d35a7bf0312
  $s$fMonadStateT_$s$fMonadStateT_$cp1Monad ::
    GHC.Base.Applicative
      (Control.Monad.Trans.State.Strict.StateT
         s Data.Functor.Identity.Identity)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Mutations.$s$fApplicativeStateT -}
fb73bfccd6a5f00d2afe151da982c87a
  $s^1 :: Parameters.Prob
  {- Strictness: x -}
604d414119e639fedd6865341c513622
  $s^2 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (0) -}
fef08d02ede4c65197b8f6673546d2d4
  $seven1 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (2) -}
f5ba5b58e39fe1a72722a131bad38ed7
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Mutations.$trModule2
                   Mutations.$trModule1) -}
10da1a36678582f5f9e0b4ed69c424e4
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Mutations"#) -}
f4a178101c480cec99003064ce2989db
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   "Evolverbetert-0.1.0.0-oxgjcqyO3h9h1Y3DYcTQF"#) -}
952079d829cde0a9d99220e3d770a308
  $w$s^ ::
    Parameters.Prob -> GHC.Integer.Type.Integer -> GHC.Prim.Double#
  {- Arity: 2, Strictness: <L,U(U)><S,U>, Inline: [0],
     Unfolding: (\ (w :: Parameters.Prob)
                   (w1 :: GHC.Integer.Type.Integer) ->
                 case GHC.Integer.Type.ltInteger#
                        w1
                        Mutations.$s^2 of wild { DEFAULT ->
                 case GHC.Prim.tagToEnum# @ GHC.Types.Bool wild of wild1 {
                   GHC.Types.False
                   -> case GHC.Integer.Type.eqInteger#
                             w1
                             Mutations.$s^2 of wild2 { DEFAULT ->
                      case GHC.Prim.tagToEnum# @ GHC.Types.Bool wild2 of wild3 {
                        GHC.Types.False
                        -> case w of ww { GHC.Types.D# ww1 -> Mutations.$wf ww1 w1 }
                        GHC.Types.True -> 1.0## } }
                   GHC.Types.True
                   -> case Mutations.$s^1 ret_ty GHC.Prim.Double# of {} } }) -}
6f95a4200c10692727a96596ec9c7a28
  $wf ::
    GHC.Prim.Double# -> GHC.Integer.Type.Integer -> GHC.Prim.Double#
  {- Arity: 2, Strictness: <L,U><S,U>, Inline: [0] -}
5f9012004d6fc73433095d57c81e5c18
  dupChr :: Types.Chromosome -> MyRandom.Rand Types.Chromosome
6e6b0f307f92d76b9ff4d623d9bef0e7
  mutAg :: Types.Agent -> MyRandom.Rand Types.Agent
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (ds :: Types.Agent) ->
                 {__scc {Evolverbetert-0.1.0.0-oxgjcqyO3h9h1Y3DYcTQF:Mutations.mutAg} True True} case ds of wild {
                                                                                                   Types.Agent genome gst
                                                                                                   -> let {
                                                                                                        m1 :: Control.Monad.Trans.State.Strict.StateT
                                                                                                                System.Random.Mersenne.Pure64.Internal.PureMT
                                                                                                                Data.Functor.Identity.Identity
                                                                                                                [Types.Chromosome]
                                                                                                        = Mutations.mutAg2
                                                                                                            genome
                                                                                                      } in
                                                                                                      (\ (s1 :: System.Random.Mersenne.Pure64.Internal.PureMT) ->
                                                                                                       case (m1
                                                                                                               `cast`
                                                                                                             (Control.Monad.Trans.State.Strict.N:StateT[0]
                                                                                                                  <System.Random.Mersenne.Pure64.Internal.PureMT>_N
                                                                                                                  <Data.Functor.Identity.Identity>_R
                                                                                                                  <[Types.Chromosome]>_N)
                                                                                                               s1)
                                                                                                              `cast`
                                                                                                            (Data.Functor.Identity.N:Identity[0]
                                                                                                                 <([Types.Chromosome],
                                                                                                                   System.Random.Mersenne.Pure64.Internal.PureMT)>_R) of wild1 { (,) a1 s' ->
                                                                                                       (Types.Agent
                                                                                                          a1
                                                                                                          ({__scc {Evolverbetert-0.1.0.0-oxgjcqyO3h9h1Y3DYcTQF:Mutations.mutAg.gst'} True True} World.gSTFromGenome
                                                                                                                                                                                                  a1),
                                                                                                        s')
                                                                                                         `cast`
                                                                                                       (Sym (Data.Functor.Identity.N:Identity[0]
                                                                                                                 <(Types.Agent,
                                                                                                                   System.Random.Mersenne.Pure64.Internal.PureMT)>_R)) })
                                                                                                        `cast`
                                                                                                      (Sym (Control.Monad.Trans.State.Strict.N:StateT[0]
                                                                                                                <System.Random.Mersenne.Pure64.Internal.PureMT>_N
                                                                                                                <Data.Functor.Identity.Identity>_R
                                                                                                                <Types.Agent>_N))
                                                                                                   Types.NoAgent
                                                                                                   -> Mutations.mutAg1
                                                                                                        `cast`
                                                                                                      (Trans
                                                                                                           (<System.Random.Mersenne.Pure64.Internal.PureMT>_R
                                                                                                            ->_R Sym (Data.Functor.Identity.N:Identity[0]
                                                                                                                          <(Types.Agent,
                                                                                                                            System.Random.Mersenne.Pure64.Internal.PureMT)>_R))
                                                                                                           (Sym (Control.Monad.Trans.State.Strict.N:StateT[0]
                                                                                                                     <System.Random.Mersenne.Pure64.Internal.PureMT>_N
                                                                                                                     <Data.Functor.Identity.Identity>_R
                                                                                                                     <Types.Agent>_N))) }) -}
883e00169ad1c1b1590aa8606d8812a6
  mutAg1 ::
    System.Random.Mersenne.Pure64.Internal.PureMT
    -> (Types.Agent, System.Random.Mersenne.Pure64.Internal.PureMT)
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U>m,
     Unfolding: InlineRule (1, True, False)
                (\ (eta1 :: System.Random.Mersenne.Pure64.Internal.PureMT) ->
                 (Types.NoAgent, eta1)) -}
a63cc131196cb2c78af289449585bd36
  mutAg2 ::
    [Types.Chromosome]
    -> Control.Monad.Trans.State.Strict.StateT
         System.Random.Mersenne.Pure64.Internal.PureMT
         Data.Functor.Identity.Identity
         [Types.Chromosome]
  {- Unfolding: ({__scc {Evolverbetert-0.1.0.0-oxgjcqyO3h9h1Y3DYcTQF:Mutations.mutAg} False True} Data.Traversable.$fTraversable[]_$cmapM
                                                                                                    @ (Control.Monad.Trans.State.Strict.StateT
                                                                                                         System.Random.Mersenne.Pure64.Internal.PureMT
                                                                                                         Data.Functor.Identity.Identity)
                                                                                                    @ Types.Chromosome
                                                                                                    @ Types.Chromosome
                                                                                                    (Mutations.$s$fMonadStateT
                                                                                                       @ System.Random.Mersenne.Pure64.Internal.PureMT)
                                                                                                    Mutations.dupChr) -}
"SPEC/Mutations $fApplicativeStateT @ Identity _" [ALWAYS] forall @ s
                                                                  ($dMonad :: GHC.Base.Monad
                                                                                Data.Functor.Identity.Identity)
                                                                  ($dFunctor :: GHC.Base.Functor
                                                                                  Data.Functor.Identity.Identity)
  Control.Monad.Trans.State.Strict.$fApplicativeStateT @ Data.Functor.Identity.Identity
                                                       @ s
                                                       $dFunctor
                                                       $dMonad
  = Mutations.$s$fApplicativeStateT @ s
"SPEC/Mutations $fApplicativeStateT_$c<*> @ Identity _" [ALWAYS] forall @ s
                                                                        ($dMonad :: GHC.Base.Monad
                                                                                      Data.Functor.Identity.Identity)
                                                                        ($dFunctor :: GHC.Base.Functor
                                                                                        Data.Functor.Identity.Identity)
  Control.Monad.Trans.State.Strict.$fApplicativeStateT_$c<*> @ Data.Functor.Identity.Identity
                                                             @ s
                                                             $dFunctor
                                                             $dMonad
  = Mutations.$s$fApplicativeStateT_$s$fApplicativeStateT_$c<*> @ s
"SPEC/Mutations $fApplicativeStateT_$cp1Applicative @ Identity _" [ALWAYS] forall @ s
                                                                                  ($dMonad :: GHC.Base.Monad
                                                                                                Data.Functor.Identity.Identity)
                                                                                  ($dFunctor :: GHC.Base.Functor
                                                                                                  Data.Functor.Identity.Identity)
  Control.Monad.Trans.State.Strict.$fApplicativeStateT_$cp1Applicative @ Data.Functor.Identity.Identity
                                                                       @ s
                                                                       $dFunctor
                                                                       $dMonad
  = Mutations.$s$fApplicativeStateT_$s$fApplicativeStateT_$cp1Applicative
      @ s
"SPEC/Mutations $fApplicativeStateT_$cpure @ Identity _" [ALWAYS] forall @ s
                                                                         ($dMonad :: GHC.Base.Monad
                                                                                       Data.Functor.Identity.Identity)
                                                                         ($dFunctor :: GHC.Base.Functor
                                                                                         Data.Functor.Identity.Identity)
  Control.Monad.Trans.State.Strict.$fApplicativeStateT_$cpure @ Data.Functor.Identity.Identity
                                                              @ s
                                                              $dFunctor
                                                              $dMonad
  = Mutations.$s$fApplicativeStateT_$s$fApplicativeStateT_$cpure @ s
"SPEC/Mutations $fFunctorStateT @ Identity _" [ALWAYS] forall @ s
                                                              ($dFunctor :: GHC.Base.Functor
                                                                              Data.Functor.Identity.Identity)
  Control.Monad.Trans.State.Strict.$fFunctorStateT @ Data.Functor.Identity.Identity
                                                   @ s
                                                   $dFunctor
  = Mutations.$s$fApplicativeStateT_$s$fFunctorStateT @ s
"SPEC/Mutations $fFunctorStateT_$cfmap @ Identity _" [ALWAYS] forall @ s
                                                                     ($dFunctor :: GHC.Base.Functor
                                                                                     Data.Functor.Identity.Identity)
  Control.Monad.Trans.State.Strict.$fFunctorStateT_$cfmap @ Data.Functor.Identity.Identity
                                                          @ s
                                                          $dFunctor
  = Mutations.$s$fApplicativeStateT_$s$fFunctorStateT_$cfmap @ s
"SPEC/Mutations $fMonadStateT @ Identity _" [ALWAYS] forall @ s
                                                            ($dMonad :: GHC.Base.Monad
                                                                          Data.Functor.Identity.Identity)
  Control.Monad.Trans.State.Strict.$fMonadStateT @ Data.Functor.Identity.Identity
                                                 @ s
                                                 $dMonad
  = Mutations.$s$fMonadStateT @ s
"SPEC/Mutations $fMonadStateT_$c>> @ Identity _" [ALWAYS] forall @ s
                                                                 ($dMonad :: GHC.Base.Monad
                                                                               Data.Functor.Identity.Identity)
  Control.Monad.Trans.State.Strict.$fMonadStateT_$c>> @ Data.Functor.Identity.Identity
                                                      @ s
                                                      $dMonad
  = Mutations.$s$fMonadStateT_$s$fMonadStateT_$c>> @ s
"SPEC/Mutations $fMonadStateT_$c>>= @ Identity _" [ALWAYS] forall @ s
                                                                  ($dMonad :: GHC.Base.Monad
                                                                                Data.Functor.Identity.Identity)
  Control.Monad.Trans.State.Strict.$fMonadStateT_$c>>= @ Data.Functor.Identity.Identity
                                                       @ s
                                                       $dMonad
  = Mutations.$s$fMonadStateT_$s$fMonadStateT_$c>>= @ s
"SPEC/Mutations $fMonadStateT_$cfail @ Identity _" [ALWAYS] forall @ s
                                                                   ($dMonad :: GHC.Base.Monad
                                                                                 Data.Functor.Identity.Identity)
  Control.Monad.Trans.State.Strict.$fMonadStateT_$cfail @ Data.Functor.Identity.Identity
                                                        @ s
                                                        $dMonad
  = Mutations.$s$fMonadStateT_$s$fMonadStateT_$cfail @ s
"SPEC/Mutations $fMonadStateT_$cp1Monad @ Identity _" [ALWAYS] forall @ s
                                                                      ($dMonad :: GHC.Base.Monad
                                                                                    Data.Functor.Identity.Identity)
  Control.Monad.Trans.State.Strict.$fMonadStateT_$cp1Monad @ Data.Functor.Identity.Identity
                                                           @ s
                                                           $dMonad
  = Mutations.$s$fMonadStateT_$s$fMonadStateT_$cp1Monad @ s
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

