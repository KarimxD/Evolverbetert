
==================== FINAL INTERFACE ====================
2017-04-26 15:37:08.687247 UTC

interface Evolverbetert-0.1.0.0-JiawwqdleTNHNC9Qg9fPkT:Mutations [hpc] 8002
  interface hash: 2c057af6a44553e3d26ac213b477c2cb
  ABI hash: f7b0935d934dc62dbc7720748f1261b7
  export-list hash: 0d52d2629401434cfd136feaa7df8e4a
  orphan hash: 6a3a410e8b36dc6e2aeddf55810deb93
  flag hash: 566c261facb1547c57528108f6948d9c
  sig of: Nothing
  used TH splices: False
  where
exports:
  Mutations.mutAg
module dependencies: Misc MyRandom Parameters Types World
package dependencies: MonadRandom-0.5.1@MonadRandom-0.5.1-IY6HiWu00vQLARukQW3KMH
                      array-0.5.1.1@array-0.5.1.1 base-4.9.1.0
                      containers-0.5.7.1@containers-0.5.7.1
                      deepseq-1.4.2.0@deepseq-1.4.2.0 ghc-prim-0.5.0.0
                      integer-gmp-1.0.0.1
                      mersenne-random-pure64-0.2.2.0@mersenne-random-pure64-0.2.2.0-560i5rQoI3i9IX3BgSFLBV
                      mtl-2.2.1@mtl-2.2.1-BLKBelFsPB3BoFeSWSOYj6
                      primitive-0.6.1.0@primitive-0.6.1.0-6AbSTw9JXz141LE5p6LGH
                      random-1.1@random-1.1-9tceXaeYIMZ4JrKq20Egog
                      random-shuffle-0.0.4@random-shuffle-0.0.4-97h14tPp7Ru21125sv6IMi
                      split-0.2.3.1@split-0.2.3.1-FWyXC6nhV0H3AfM8IzrEFk
                      time-1.6.0.1@time-1.6.0.1 transformers-0.5.2.0@transformers-0.5.2.0
orphans: Evolverbetert-0.1.0.0-JiawwqdleTNHNC9Qg9fPkT:MyRandom
         base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
         time-1.6.0.1@time-1.6.0.1:Data.Time.Calendar.Gregorian
         time-1.6.0.1@time-1.6.0.1:Data.Time.Format.Parse
         time-1.6.0.1@time-1.6.0.1:Data.Time.LocalTime.LocalTime
         transformers-0.5.2.0@transformers-0.5.2.0:Control.Monad.Trans.Error
family instance modules: MonadRandom-0.5.1@MonadRandom-0.5.1-IY6HiWu00vQLARukQW3KMH:Control.Monad.Trans.Random.Lazy
                         base-4.9.1.0:Control.Applicative base-4.9.1.0:Data.Complex
                         base-4.9.1.0:Data.Either base-4.9.1.0:Data.Functor.Const
                         base-4.9.1.0:Data.Functor.Identity base-4.9.1.0:Data.List.NonEmpty
                         base-4.9.1.0:Data.Monoid base-4.9.1.0:Data.Semigroup
                         base-4.9.1.0:Data.Type.Equality base-4.9.1.0:Data.Version
                         base-4.9.1.0:Data.Void base-4.9.1.0:GHC.Exts
                         base-4.9.1.0:GHC.Generics base-4.9.1.0:GHC.IO.Exception
                         base-4.9.1.0:GHC.TypeLits
                         containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Set.Base
                         primitive-0.6.1.0@primitive-0.6.1.0-6AbSTw9JXz141LE5p6LGH:Control.Monad.Primitive
import  -/  Misc 7c0846d5151aa3976be221f5a46a4e97
  exports: fb044bf498acb33549eb7c51f9d2b907
  maybeCh 892171fb445e407e3e08b7538686fede
  repeatCollect ab0ef29ccb62aa11a48c680eab6b52cc
import  -/  MyRandom 182c41d4defde8d08f518d29f4df558c
  exports: 6a3b246076d887accae198004a7f70d6
  Rand 86a475c1a4a2e3e28a826bd2f49fdf44
  getBool 01b16e14ab322b38631ae8901fe80eb0
  getDouble bad88a8c20ffa90c2054a378b8a71658
  getRange b6a172676204c07d07f0c812ec9d92a0
import  -/  Parameters 934216b463092aab34aa8d6da02a0ffd
  exports: 2da6637e19561a3c84dac8b2f8e0f38b
  Prob b9237f89dcca355d6e31740b337ba81c
  maxThres aed0eefcc9e563d86435e4b57d330c2c
  minThres 9aeebdbff4e630124901ecd3f0fc166f
  nrGeneTypes' 999e2645e16eec8e4a305879605b429a
  pGenDel 72c333f53f8990bf3546935d592f2c7e
  pGenDup 070daff60bc9bb038b77ddb18fbd00eb
  pGenThresCh 8dc5d4cd0a43e4414e076129ef63e0ee
  pTfbsDel 321fec86ad3038e0943bc95b1511b82a
  pTfbsDup d303e18e2e47058b2e328540f8cfd0ac
  pTfbsInnov 412bd7f46415063b2d3f779435b96ac3
  pTfbsPrefCh c4d73eba3901d451fe8c60577637bece
  pTfbsWtCh 45b2c344dc88342a332884448d7fa0ab
import  -/  Types 067da2fa0f710839b88e4fd1e1eded28
  exports: 6ec82bea59d093b10ad3149623a0d676
  Agent 01b470aa914080b07a81270f816e1225
  Agent 96dc13c40ccb216e8863ab97a7d41886
  CGene 131a513de9c84a842d73d7cbe8089ec5
  CTfbs c028c7bdf79b48f3df811a3a09929710
  Chromosome 06157d91ad48e8fb468961c405df7893
  Gene 12acf9e65e1db1aa9029b562a1e9dadb
  Gene e61fa6692e0904f1e277a345501f370e
  ID a04dd4235358424911f4130270c51a83
  ID f02152849ccc1a6d1ba195f399237c56
  Locus 00852ab6e68f9437488a4b665181bda8
  NoAgent b7d8cf22e526c1e2e90e11821c8dcfa9
  Tfbs e42b2e8ced8e180ebeb7514f32ff178d
  Tfbs c364d1799620a5ba7a05a7f6bbc17a6f
import  -/  World 0b7434b437e15c97cb605d374fd57909
  exports: 3dfc99342d1991a0fe3b35f33fb08559
  gSTFromGenome 2be808fa98ce6b5ed2dbb6e2934a06dd
  groupGeneTfbs c5d2b8f901c6b3cf6c334ff5c7f255b4
  reduceToTfbss b95e3fcd1bdd6b38e8681decefd828e5
import  -/  base-4.9.1.0:Control.Monad a6784c5dab0d75c63dabec5a37843f98
import  -/  base-4.9.1.0:Data.Foldable 3e0b6967a1da89945d0e2d47266337a2
import  -/  base-4.9.1.0:Data.Functor 5ab1dc703df5b482e77efb697833ca3c
import  -/  base-4.9.1.0:Data.List 07ae2acca6538aa0800bd0a993ac6ac1
import  -/  base-4.9.1.0:Data.OldList 27987919d8da2f92e3f472ca81f730f8
import  -/  base-4.9.1.0:Data.Traversable 556020d7cf3c4a34a774600512918a37
import  -/  base-4.9.1.0:GHC.Base c4231c43c07e46080a26bf94094c7aa1
import  -/  base-4.9.1.0:GHC.List ab8c4e523e6c479c549d3bcd5fc4a439
import  -/  base-4.9.1.0:GHC.Num 00bfaa7b2f9d6084913c0697a8a49ec8
import  -/  base-4.9.1.0:GHC.Real 82e4e59051a13dba1da63e1e970a69e6
import  -/  base-4.9.1.0:Prelude 22dd289b8469a8fa8dc81cab7b237771
import  -/  ghc-prim-0.5.0.0:GHC.Classes 0bdf3d057a415ec1b84a7b1994efbe47
27f3452b3b2b54f2e0c1c55398eecf50
  $s$fApplicativeStateT ::
    GHC.Base.Applicative
      (Control.Monad.Trans.State.Strict.StateT
         s Data.Functor.Identity.Identity)
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ s.
                  @ (Control.Monad.Trans.State.Strict.StateT
                       s Data.Functor.Identity.Identity)
                  (Mutations.$s$fApplicativeStateT_$s$fApplicativeStateT_$cp1Applicative
                     @ s)
                  (Mutations.$s$fApplicativeStateT_$s$fApplicativeStateT_$cpure @ s)
                  (Mutations.$s$fApplicativeStateT_$s$fApplicativeStateT_$c<*> @ s)
                  (Control.Monad.Trans.State.Strict.$fApplicativeStateT_$c*>
                     @ Data.Functor.Identity.Identity
                     @ s
                     Mutations.$s$fApplicativeStateT_$dFunctor
                     Data.Functor.Identity.$fMonadIdentity)
                  (Control.Monad.Trans.State.Strict.$fApplicativeStateT_$c<*
                     @ Data.Functor.Identity.Identity
                     @ s
                     Mutations.$s$fApplicativeStateT_$dFunctor
                     Data.Functor.Identity.$fMonadIdentity) -}
5937402241d8dae700dc4edd105e5815
  $s$fApplicativeStateT_$dFunctor ::
    GHC.Base.Functor Data.Functor.Identity.Identity
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Data.Functor.Identity.$fFunctorIdentity -}
b1bf7d9d0ca2b7dd83a7d2a1bc96ce5d
  $s$fApplicativeStateT_$s$fApplicativeStateT_$c<*> ::
    Control.Monad.Trans.State.Strict.StateT
      s Data.Functor.Identity.Identity (a -> b)
    -> Control.Monad.Trans.State.Strict.StateT
         s Data.Functor.Identity.Identity a
    -> Control.Monad.Trans.State.Strict.StateT
         s Data.Functor.Identity.Identity b
  {- Arity: 3, HasNoCafRefs,
     Strictness: <C(S),1*C1(U(1*C1(U),U))><C(S),1*C1(U(U,U))><L,U>m,
     Inline: INLINE (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ @ s
                   @ a
                   @ b
                   (ds1 :: Control.Monad.Trans.State.Strict.StateT
                             s Data.Functor.Identity.Identity (a -> b))
                   (ds2 :: Control.Monad.Trans.State.Strict.StateT
                             s Data.Functor.Identity.Identity a) ->
                 GHC.Base.$
                   @ 'GHC.Types.PtrRepLifted
                   @ (s -> Data.Functor.Identity.Identity (b, s))
                   @ (Control.Monad.Trans.State.Strict.StateT
                        s Data.Functor.Identity.Identity b)
                   (\ (tpl :: s -> Data.Functor.Identity.Identity (b, s)) -> tpl)
                     `cast`
                   (<s -> Data.Functor.Identity.Identity (b, s)>_R
                    ->_R Sym (Control.Monad.Trans.State.Strict.N:StateT[0]
                                  <s>_N <Data.Functor.Identity.Identity>_R <b>_N))
                   (\ (s1 :: s) ->
                    Data.Functor.Identity.$fMonadIdentity_$c>>=
                      @ (a -> b, s)
                      @ (b, s)
                      (ds1
                         `cast`
                       (Control.Monad.Trans.State.Strict.N:StateT[0]
                            <s>_N <Data.Functor.Identity.Identity>_R <a -> b>_N)
                         s1)
                      (\ (ds3 :: (a -> b, s))[OneShot] ->
                       case ds3 of wild { (,) f s' ->
                       Data.Functor.Identity.$fMonadIdentity_$c>>=
                         @ (a, s)
                         @ (b, s)
                         (ds2
                            `cast`
                          (Control.Monad.Trans.State.Strict.N:StateT[0]
                               <s>_N <Data.Functor.Identity.Identity>_R <a>_N)
                            s')
                         (\ (ds4 :: (a, s))[OneShot] ->
                          case ds4 of wild1 { (,) x s'' ->
                          Data.Functor.Identity.$fApplicativeIdentity_$cpure
                            @ (b, s)
                            (f x, s'') }) }))) -}
80df9f813a5504e610356976884a3d0d
  $s$fApplicativeStateT_$s$fApplicativeStateT_$cp1Applicative ::
    GHC.Base.Functor
      (Control.Monad.Trans.State.Strict.StateT
         s Data.Functor.Identity.Identity)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Mutations.$s$fApplicativeStateT_$s$fFunctorStateT -}
0c7810ef3ba76027a281c977822087dd
  $s$fApplicativeStateT_$s$fApplicativeStateT_$cpure ::
    a
    -> Control.Monad.Trans.State.Strict.StateT
         s Data.Functor.Identity.Identity a
  {- Arity: 2, HasNoCafRefs, Strictness: <L,U><L,U>m,
     Inline: INLINE (sat-args=1),
     Unfolding: InlineRule (1, False, False)
                (\ @ s @ a (a1 :: a) ->
                 GHC.Base.$
                   @ 'GHC.Types.PtrRepLifted
                   @ (s -> Data.Functor.Identity.Identity (a, s))
                   @ (Control.Monad.Trans.State.Strict.StateT
                        s Data.Functor.Identity.Identity a)
                   (\ (tpl :: s -> Data.Functor.Identity.Identity (a, s)) -> tpl)
                     `cast`
                   (<s -> Data.Functor.Identity.Identity (a, s)>_R
                    ->_R Sym (Control.Monad.Trans.State.Strict.N:StateT[0]
                                  <s>_N <Data.Functor.Identity.Identity>_R <a>_N))
                   (\ (s1 :: s) ->
                    Data.Functor.Identity.$fApplicativeIdentity_$cpure
                      @ (a, s)
                      (a1, s1))) -}
ee7baffb37253f3bf84cb7983ee7f07b
  $s$fApplicativeStateT_$s$fFunctorStateT ::
    GHC.Base.Functor
      (Control.Monad.Trans.State.Strict.StateT
         s Data.Functor.Identity.Identity)
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ s.
                  @ (Control.Monad.Trans.State.Strict.StateT
                       s Data.Functor.Identity.Identity)
                  (Mutations.$s$fApplicativeStateT_$s$fFunctorStateT_$cfmap @ s)
                  (Control.Monad.Trans.State.Strict.$fFunctorStateT_$c<$
                     @ Data.Functor.Identity.Identity
                     @ s
                     Data.Functor.Identity.$fFunctorIdentity) -}
13aa464fb21052cbcce80aa3bc48e4c3
  $s$fApplicativeStateT_$s$fFunctorStateT_$cfmap ::
    (a -> b)
    -> Control.Monad.Trans.State.Strict.StateT
         s Data.Functor.Identity.Identity a
    -> Control.Monad.Trans.State.Strict.StateT
         s Data.Functor.Identity.Identity b
  {- Arity: 3, HasNoCafRefs,
     Strictness: <L,1*C1(U)><C(S),1*C1(U(U,U))><L,U>m,
     Inline: INLINE (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ @ s
                   @ a
                   @ b
                   (f :: a -> b)
                   (m1 :: Control.Monad.Trans.State.Strict.StateT
                            s Data.Functor.Identity.Identity a) ->
                 GHC.Base.$
                   @ 'GHC.Types.PtrRepLifted
                   @ (s -> Data.Functor.Identity.Identity (b, s))
                   @ (Control.Monad.Trans.State.Strict.StateT
                        s Data.Functor.Identity.Identity b)
                   (\ (tpl :: s -> Data.Functor.Identity.Identity (b, s)) -> tpl)
                     `cast`
                   (<s -> Data.Functor.Identity.Identity (b, s)>_R
                    ->_R Sym (Control.Monad.Trans.State.Strict.N:StateT[0]
                                  <s>_N <Data.Functor.Identity.Identity>_R <b>_N))
                   (\ (s1 :: s) ->
                    GHC.Base.$
                      @ 'GHC.Types.PtrRepLifted
                      @ (Data.Functor.Identity.Identity (a, s))
                      @ (Data.Functor.Identity.Identity (b, s))
                      (Data.Functor.Identity.$fFunctorIdentity_$cfmap
                         @ (a, s)
                         @ (b, s)
                         (\ (ds1 :: (a, s)) ->
                          case ds1 of wild { (,) a1 s' -> (f a1, s') }))
                      (Control.Monad.Trans.State.Strict.runStateT
                         @ s
                         @ Data.Functor.Identity.Identity
                         @ a
                         m1
                         s1))) -}
1cd62f900e061782bcda2dfad40d5190
  $s$fMonadStateT ::
    GHC.Base.Monad
      (Control.Monad.Trans.State.Strict.StateT
         s Data.Functor.Identity.Identity)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ s.
                  @ (Control.Monad.Trans.State.Strict.StateT
                       s Data.Functor.Identity.Identity)
                  (Mutations.$s$fMonadStateT_$s$fMonadStateT_$cp1Monad @ s)
                  (Mutations.$s$fMonadStateT_$s$fMonadStateT_$c>>= @ s)
                  (Mutations.$s$fMonadStateT_$s$fMonadStateT_$c>> @ s)
                  (Control.Monad.Trans.State.Strict.$fMonadStateT_$creturn
                     @ Data.Functor.Identity.Identity
                     @ s
                     Data.Functor.Identity.$fMonadIdentity)
                  (Mutations.$s$fMonadStateT_$s$fMonadStateT_$cfail @ s) -}
62ecb8a446b3891541e72696af2b8909
  $s$fMonadStateT_$s$fMonadStateT_$c>> ::
    Control.Monad.Trans.State.Strict.StateT
      s Data.Functor.Identity.Identity a
    -> Control.Monad.Trans.State.Strict.StateT
         s Data.Functor.Identity.Identity b
    -> Control.Monad.Trans.State.Strict.StateT
         s Data.Functor.Identity.Identity b
  {- Arity: 3, HasNoCafRefs,
     Strictness: <C(S),1*C1(U(A,U))><C(S),1*C1(U(U,U))><L,U>,
     Inline: INLINE (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ @ s
                   @ a
                   @ b
                   (m1 :: Control.Monad.Trans.State.Strict.StateT
                            s Data.Functor.Identity.Identity a)
                   (k :: Control.Monad.Trans.State.Strict.StateT
                           s Data.Functor.Identity.Identity b) ->
                 GHC.Base.$
                   @ 'GHC.Types.PtrRepLifted
                   @ (s -> Data.Functor.Identity.Identity (b, s))
                   @ (Control.Monad.Trans.State.Strict.StateT
                        s Data.Functor.Identity.Identity b)
                   (\ (tpl :: s -> Data.Functor.Identity.Identity (b, s)) -> tpl)
                     `cast`
                   (<s -> Data.Functor.Identity.Identity (b, s)>_R
                    ->_R Sym (Control.Monad.Trans.State.Strict.N:StateT[0]
                                  <s>_N <Data.Functor.Identity.Identity>_R <b>_N))
                   (\ (s1 :: s) ->
                    Data.Functor.Identity.$fMonadIdentity_$c>>=
                      @ (a, s)
                      @ (b, s)
                      (Control.Monad.Trans.State.Strict.runStateT
                         @ s
                         @ Data.Functor.Identity.Identity
                         @ a
                         m1
                         s1)
                      (\ (ds1 :: (a, s))[OneShot] ->
                       case ds1 of wild { (,) a1 s' ->
                       Control.Monad.Trans.State.Strict.runStateT
                         @ s
                         @ Data.Functor.Identity.Identity
                         @ b
                         k
                         s' }))) -}
c04530e10e1ba9f6aa5f2fa948871b8d
  $s$fMonadStateT_$s$fMonadStateT_$c>>= ::
    Control.Monad.Trans.State.Strict.StateT
      s Data.Functor.Identity.Identity a
    -> (a
        -> Control.Monad.Trans.State.Strict.StateT
             s Data.Functor.Identity.Identity b)
    -> Control.Monad.Trans.State.Strict.StateT
         s Data.Functor.Identity.Identity b
  {- Arity: 3, HasNoCafRefs,
     Strictness: <C(S),1*C1(U(U,U))><C(C(S)),1*C1(C1(U(U,U)))><L,U>,
     Inline: INLINE (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ @ s
                   @ a
                   @ b
                   (m1 :: Control.Monad.Trans.State.Strict.StateT
                            s Data.Functor.Identity.Identity a)
                   (k :: a
                         -> Control.Monad.Trans.State.Strict.StateT
                              s Data.Functor.Identity.Identity b) ->
                 GHC.Base.$
                   @ 'GHC.Types.PtrRepLifted
                   @ (s -> Data.Functor.Identity.Identity (b, s))
                   @ (Control.Monad.Trans.State.Strict.StateT
                        s Data.Functor.Identity.Identity b)
                   (\ (tpl :: s -> Data.Functor.Identity.Identity (b, s)) -> tpl)
                     `cast`
                   (<s -> Data.Functor.Identity.Identity (b, s)>_R
                    ->_R Sym (Control.Monad.Trans.State.Strict.N:StateT[0]
                                  <s>_N <Data.Functor.Identity.Identity>_R <b>_N))
                   (\ (s1 :: s) ->
                    Data.Functor.Identity.$fMonadIdentity_$c>>=
                      @ (a, s)
                      @ (b, s)
                      (Control.Monad.Trans.State.Strict.runStateT
                         @ s
                         @ Data.Functor.Identity.Identity
                         @ a
                         m1
                         s1)
                      (\ (ds1 :: (a, s))[OneShot] ->
                       case ds1 of wild { (,) a1 s' ->
                       Control.Monad.Trans.State.Strict.runStateT
                         @ s
                         @ Data.Functor.Identity.Identity
                         @ b
                         (k a1)
                         s' }))) -}
a62a561c708a99ccceb46b7fa508fa0b
  $s$fMonadStateT_$s$fMonadStateT_$cfail ::
    GHC.Base.String
    -> Control.Monad.Trans.State.Strict.StateT
         s Data.Functor.Identity.Identity a
  {- Arity: 2, Strictness: <B,U><B,A>x, Inline: INLINE (sat-args=1),
     Unfolding: InlineRule (1, False, False)
                (\ @ s @ a (str :: GHC.Base.String) ->
                 GHC.Base.$
                   @ 'GHC.Types.PtrRepLifted
                   @ (s -> Data.Functor.Identity.Identity (a, s))
                   @ (Control.Monad.Trans.State.Strict.StateT
                        s Data.Functor.Identity.Identity a)
                   (\ (tpl :: s -> Data.Functor.Identity.Identity (a, s)) -> tpl)
                     `cast`
                   (<s -> Data.Functor.Identity.Identity (a, s)>_R
                    ->_R Sym (Control.Monad.Trans.State.Strict.N:StateT[0]
                                  <s>_N <Data.Functor.Identity.Identity>_R <a>_N))
                   (\ (ds1 :: s) ->
                    Data.Functor.Identity.$fMonadIdentity_$s$dmfail @ (a, s) str)) -}
02c8e83be483c43ff641385419c0afa1
  $s$fMonadStateT_$s$fMonadStateT_$cp1Monad ::
    GHC.Base.Applicative
      (Control.Monad.Trans.State.Strict.StateT
         s Data.Functor.Identity.Identity)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Mutations.$s$fApplicativeStateT -}
753a4b5488b866828e038b20c9a6d536
  $s^1 :: Parameters.Prob
  {- Strictness: x -}
725341e62f7cb187159c114cb8fb1d5a
  $s^2 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (0) -}
add5074536257f68bd50d9c8908bc88d
  $seven1 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (2) -}
48e758d63f7c8be47074786b0f45a8da
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Mutations.$trModule2
                   Mutations.$trModule1) -}
cc50c358df3fe0568e03e360d30928d9
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Mutations"#) -}
fda198ae3c348aab815744bd1e3f4f4d
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   "Evolverbetert-0.1.0.0-JiawwqdleTNHNC9Qg9fPkT"#) -}
0cdd9d50c5d5bd84de4b1457d5e3fd81
  $w$s^ ::
    Parameters.Prob -> GHC.Integer.Type.Integer -> GHC.Prim.Double#
  {- Arity: 2, Strictness: <L,U(U)><S,U>, Inline: [0],
     Unfolding: (\ (w :: Parameters.Prob)
                   (w1 :: GHC.Integer.Type.Integer) ->
                 case GHC.Integer.Type.ltInteger#
                        w1
                        Mutations.$s^2 of wild { DEFAULT ->
                 case GHC.Prim.tagToEnum# @ GHC.Types.Bool wild of wild1 {
                   GHC.Types.False
                   -> case GHC.Integer.Type.eqInteger#
                             w1
                             Mutations.$s^2 of wild2 { DEFAULT ->
                      case GHC.Prim.tagToEnum# @ GHC.Types.Bool wild2 of wild3 {
                        GHC.Types.False
                        -> case w of ww { GHC.Types.D# ww1 -> Mutations.$wf ww1 w1 }
                        GHC.Types.True -> 1.0## } }
                   GHC.Types.True
                   -> case Mutations.$s^1 ret_ty GHC.Prim.Double# of {} } }) -}
14bfa3d27d2fd6d31532c05bb962d52e
  $wf ::
    GHC.Prim.Double# -> GHC.Integer.Type.Integer -> GHC.Prim.Double#
  {- Arity: 2, Strictness: <L,U><S,U>, Inline: [0] -}
4081124f29900b275209c4973f91cbac
  dupChr :: Types.Chromosome -> MyRandom.Rand Types.Chromosome
00cc57d82ac81d579b56993d0a35caa5
  mutAg :: Types.Agent -> MyRandom.Rand Types.Agent
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (ds1 :: Types.Agent) ->
                 {__scc {Evolverbetert-0.1.0.0-JiawwqdleTNHNC9Qg9fPkT:Mutations.mutAg} True True} case ds1 of wild {
                                                                                                    Types.Agent genome gst
                                                                                                    -> let {
                                                                                                         m1 :: Control.Monad.Trans.State.Strict.StateT
                                                                                                                 System.Random.Mersenne.Pure64.Internal.PureMT
                                                                                                                 Data.Functor.Identity.Identity
                                                                                                                 [Types.Chromosome]
                                                                                                         = Mutations.mutAg2
                                                                                                             genome
                                                                                                       } in
                                                                                                       (\ (s1 :: System.Random.Mersenne.Pure64.Internal.PureMT) ->
                                                                                                        case (m1
                                                                                                                `cast`
                                                                                                              (Control.Monad.Trans.State.Strict.N:StateT[0]
                                                                                                                   <System.Random.Mersenne.Pure64.Internal.PureMT>_N
                                                                                                                   <Data.Functor.Identity.Identity>_R
                                                                                                                   <[Types.Chromosome]>_N)
                                                                                                                s1)
                                                                                                               `cast`
                                                                                                             (Data.Functor.Identity.N:Identity[0]
                                                                                                                  <([Types.Chromosome],
                                                                                                                    System.Random.Mersenne.Pure64.Internal.PureMT)>_R) of wild1 { (,) a1 s' ->
                                                                                                        (Types.Agent
                                                                                                           a1
                                                                                                           ({__scc {Evolverbetert-0.1.0.0-JiawwqdleTNHNC9Qg9fPkT:Mutations.mutAg.gst'} True True} World.gSTFromGenome
                                                                                                                                                                                                    a1),
                                                                                                         s')
                                                                                                          `cast`
                                                                                                        (Sym (Data.Functor.Identity.N:Identity[0]
                                                                                                                  <(Types.Agent,
                                                                                                                    System.Random.Mersenne.Pure64.Internal.PureMT)>_R)) })
                                                                                                         `cast`
                                                                                                       (Sym (Control.Monad.Trans.State.Strict.N:StateT[0]
                                                                                                                 <System.Random.Mersenne.Pure64.Internal.PureMT>_N
                                                                                                                 <Data.Functor.Identity.Identity>_R
                                                                                                                 <Types.Agent>_N))
                                                                                                    Types.NoAgent
                                                                                                    -> Mutations.mutAg1
                                                                                                         `cast`
                                                                                                       (Trans
                                                                                                            (<System.Random.Mersenne.Pure64.Internal.PureMT>_R
                                                                                                             ->_R Sym (Data.Functor.Identity.N:Identity[0]
                                                                                                                           <(Types.Agent,
                                                                                                                             System.Random.Mersenne.Pure64.Internal.PureMT)>_R))
                                                                                                            (Sym (Control.Monad.Trans.State.Strict.N:StateT[0]
                                                                                                                      <System.Random.Mersenne.Pure64.Internal.PureMT>_N
                                                                                                                      <Data.Functor.Identity.Identity>_R
                                                                                                                      <Types.Agent>_N))) }) -}
79d2d96a5b55744606cf5a92c4ac547b
  mutAg1 ::
    System.Random.Mersenne.Pure64.Internal.PureMT
    -> (Types.Agent, System.Random.Mersenne.Pure64.Internal.PureMT)
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U>m,
     Unfolding: InlineRule (1, True, False)
                (\ (eta1 :: System.Random.Mersenne.Pure64.Internal.PureMT) ->
                 (Types.NoAgent, eta1)) -}
911eeaa57612868ca18d51d03994c615
  mutAg2 ::
    [Types.Chromosome]
    -> Control.Monad.Trans.State.Strict.StateT
         System.Random.Mersenne.Pure64.Internal.PureMT
         Data.Functor.Identity.Identity
         [Types.Chromosome]
  {- Unfolding: ({__scc {Evolverbetert-0.1.0.0-JiawwqdleTNHNC9Qg9fPkT:Mutations.mutAg} False True} Data.Traversable.$fTraversable[]_$cmapM
                                                                                                     @ (Control.Monad.Trans.State.Strict.StateT
                                                                                                          System.Random.Mersenne.Pure64.Internal.PureMT
                                                                                                          Data.Functor.Identity.Identity)
                                                                                                     @ Types.Chromosome
                                                                                                     @ Types.Chromosome
                                                                                                     (Mutations.$s$fMonadStateT
                                                                                                        @ System.Random.Mersenne.Pure64.Internal.PureMT)
                                                                                                     Mutations.dupChr) -}
"SPEC/Mutations $fApplicativeStateT @ Identity _" [ALWAYS] forall @ s
                                                                  ($dMonad :: GHC.Base.Monad
                                                                                Data.Functor.Identity.Identity)
                                                                  ($dFunctor :: GHC.Base.Functor
                                                                                  Data.Functor.Identity.Identity)
  Control.Monad.Trans.State.Strict.$fApplicativeStateT @ Data.Functor.Identity.Identity
                                                       @ s
                                                       $dFunctor
                                                       $dMonad
  = Mutations.$s$fApplicativeStateT @ s
"SPEC/Mutations $fApplicativeStateT_$c<*> @ Identity _" [ALWAYS] forall @ s
                                                                        ($dMonad :: GHC.Base.Monad
                                                                                      Data.Functor.Identity.Identity)
                                                                        ($dFunctor :: GHC.Base.Functor
                                                                                        Data.Functor.Identity.Identity)
  Control.Monad.Trans.State.Strict.$fApplicativeStateT_$c<*> @ Data.Functor.Identity.Identity
                                                             @ s
                                                             $dFunctor
                                                             $dMonad
  = Mutations.$s$fApplicativeStateT_$s$fApplicativeStateT_$c<*> @ s
"SPEC/Mutations $fApplicativeStateT_$cp1Applicative @ Identity _" [ALWAYS] forall @ s
                                                                                  ($dMonad :: GHC.Base.Monad
                                                                                                Data.Functor.Identity.Identity)
                                                                                  ($dFunctor :: GHC.Base.Functor
                                                                                                  Data.Functor.Identity.Identity)
  Control.Monad.Trans.State.Strict.$fApplicativeStateT_$cp1Applicative @ Data.Functor.Identity.Identity
                                                                       @ s
                                                                       $dFunctor
                                                                       $dMonad
  = Mutations.$s$fApplicativeStateT_$s$fApplicativeStateT_$cp1Applicative
      @ s
"SPEC/Mutations $fApplicativeStateT_$cpure @ Identity _" [ALWAYS] forall @ s
                                                                         ($dMonad :: GHC.Base.Monad
                                                                                       Data.Functor.Identity.Identity)
                                                                         ($dFunctor :: GHC.Base.Functor
                                                                                         Data.Functor.Identity.Identity)
  Control.Monad.Trans.State.Strict.$fApplicativeStateT_$cpure @ Data.Functor.Identity.Identity
                                                              @ s
                                                              $dFunctor
                                                              $dMonad
  = Mutations.$s$fApplicativeStateT_$s$fApplicativeStateT_$cpure @ s
"SPEC/Mutations $fFunctorStateT @ Identity _" [ALWAYS] forall @ s
                                                              ($dFunctor :: GHC.Base.Functor
                                                                              Data.Functor.Identity.Identity)
  Control.Monad.Trans.State.Strict.$fFunctorStateT @ Data.Functor.Identity.Identity
                                                   @ s
                                                   $dFunctor
  = Mutations.$s$fApplicativeStateT_$s$fFunctorStateT @ s
"SPEC/Mutations $fFunctorStateT_$cfmap @ Identity _" [ALWAYS] forall @ s
                                                                     ($dFunctor :: GHC.Base.Functor
                                                                                     Data.Functor.Identity.Identity)
  Control.Monad.Trans.State.Strict.$fFunctorStateT_$cfmap @ Data.Functor.Identity.Identity
                                                          @ s
                                                          $dFunctor
  = Mutations.$s$fApplicativeStateT_$s$fFunctorStateT_$cfmap @ s
"SPEC/Mutations $fMonadStateT @ Identity _" [ALWAYS] forall @ s
                                                            ($dMonad :: GHC.Base.Monad
                                                                          Data.Functor.Identity.Identity)
  Control.Monad.Trans.State.Strict.$fMonadStateT @ Data.Functor.Identity.Identity
                                                 @ s
                                                 $dMonad
  = Mutations.$s$fMonadStateT @ s
"SPEC/Mutations $fMonadStateT_$c>> @ Identity _" [ALWAYS] forall @ s
                                                                 ($dMonad :: GHC.Base.Monad
                                                                               Data.Functor.Identity.Identity)
  Control.Monad.Trans.State.Strict.$fMonadStateT_$c>> @ Data.Functor.Identity.Identity
                                                      @ s
                                                      $dMonad
  = Mutations.$s$fMonadStateT_$s$fMonadStateT_$c>> @ s
"SPEC/Mutations $fMonadStateT_$c>>= @ Identity _" [ALWAYS] forall @ s
                                                                  ($dMonad :: GHC.Base.Monad
                                                                                Data.Functor.Identity.Identity)
  Control.Monad.Trans.State.Strict.$fMonadStateT_$c>>= @ Data.Functor.Identity.Identity
                                                       @ s
                                                       $dMonad
  = Mutations.$s$fMonadStateT_$s$fMonadStateT_$c>>= @ s
"SPEC/Mutations $fMonadStateT_$cfail @ Identity _" [ALWAYS] forall @ s
                                                                   ($dMonad :: GHC.Base.Monad
                                                                                 Data.Functor.Identity.Identity)
  Control.Monad.Trans.State.Strict.$fMonadStateT_$cfail @ Data.Functor.Identity.Identity
                                                        @ s
                                                        $dMonad
  = Mutations.$s$fMonadStateT_$s$fMonadStateT_$cfail @ s
"SPEC/Mutations $fMonadStateT_$cp1Monad @ Identity _" [ALWAYS] forall @ s
                                                                      ($dMonad :: GHC.Base.Monad
                                                                                    Data.Functor.Identity.Identity)
  Control.Monad.Trans.State.Strict.$fMonadStateT_$cp1Monad @ Data.Functor.Identity.Identity
                                                           @ s
                                                           $dMonad
  = Mutations.$s$fMonadStateT_$s$fMonadStateT_$cp1Monad @ s
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

