
==================== FINAL INTERFACE ====================
2017-04-19 14:33:30.042243 UTC

interface Evolverbetert-0.1.0.0-LjkPE0Wdux1AmRTdZ477DX:Mutations [hpc] 8002
  interface hash: 74b879344edce0a5fa71ec8abc7fa9d8
  ABI hash: 2b4d2d960c2e89131fbb366c58893f84
  export-list hash: e24066682c89f7249b02afe544d606ed
  orphan hash: 441c0d956cbe694cf5f2d9ccc698f2c3
  flag hash: d25d19a7b2a6306b9602a256a49f18a2
  sig of: Nothing
  used TH splices: False
  where
exports:
  Mutations.mutAg
module dependencies: Misc MyRandom Parameters World
package dependencies: MonadRandom-0.5.1@MonadRandom-0.5.1-IY6HiWu00vQLARukQW3KMH
                      array-0.5.1.1@array-0.5.1.1 base-4.9.1.0
                      containers-0.5.7.1@containers-0.5.7.1
                      deepseq-1.4.2.0@deepseq-1.4.2.0 ghc-prim-0.5.0.0
                      integer-gmp-1.0.0.1
                      mersenne-random-pure64-0.2.2.0@mersenne-random-pure64-0.2.2.0-560i5rQoI3i9IX3BgSFLBV
                      mtl-2.2.1@mtl-2.2.1-BLKBelFsPB3BoFeSWSOYj6
                      primitive-0.6.1.0@primitive-0.6.1.0-6AbSTw9JXz141LE5p6LGH
                      random-1.1@random-1.1-9tceXaeYIMZ4JrKq20Egog
                      random-shuffle-0.0.4@random-shuffle-0.0.4-97h14tPp7Ru21125sv6IMi
                      split-0.2.3.1@split-0.2.3.1-FWyXC6nhV0H3AfM8IzrEFk
                      time-1.6.0.1@time-1.6.0.1 transformers-0.5.2.0@transformers-0.5.2.0
orphans: Evolverbetert-0.1.0.0-LjkPE0Wdux1AmRTdZ477DX:MyRandom
         base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
         time-1.6.0.1@time-1.6.0.1:Data.Time.Calendar.Gregorian
         time-1.6.0.1@time-1.6.0.1:Data.Time.Format.Parse
         time-1.6.0.1@time-1.6.0.1:Data.Time.LocalTime.LocalTime
         transformers-0.5.2.0@transformers-0.5.2.0:Control.Monad.Trans.Error
family instance modules: MonadRandom-0.5.1@MonadRandom-0.5.1-IY6HiWu00vQLARukQW3KMH:Control.Monad.Trans.Random.Lazy
                         base-4.9.1.0:Control.Applicative base-4.9.1.0:Data.Complex
                         base-4.9.1.0:Data.Either base-4.9.1.0:Data.Functor.Const
                         base-4.9.1.0:Data.Functor.Identity base-4.9.1.0:Data.List.NonEmpty
                         base-4.9.1.0:Data.Monoid base-4.9.1.0:Data.Semigroup
                         base-4.9.1.0:Data.Type.Equality base-4.9.1.0:Data.Version
                         base-4.9.1.0:Data.Void base-4.9.1.0:GHC.Exts
                         base-4.9.1.0:GHC.Generics base-4.9.1.0:GHC.IO.Exception
                         base-4.9.1.0:GHC.TypeLits
                         containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Set.Base
                         primitive-0.6.1.0@primitive-0.6.1.0-6AbSTw9JXz141LE5p6LGH:Control.Monad.Primitive
import  -/  Misc 5e247794c40767da8222e1554752d855
  exports: f4a878085b3723ad555eff84168a33c3
  maybeCh 0b63fc197a9e955473d9ca1f0f3c527e
  repeatCollect cf36e10757917309bd901d7f4c43ad89
import  -/  MyRandom 2c9e0e34ad8f4e35881f68568938e944
  exports: 6f63f5dae70b349cec07a1da2c406764
  Rand 847c542c2048673c17b59f6c15f9875e
  getBool 73718dde559525e1fa0be2a347af9c6e
  getDouble cd7b7a2f8ae95f3b34f8129af6fdf86f
  getRange 2444f44377d337508103df656eee64ca
import  -/  Parameters 805e5c9324e39ebab77de2c8db6872ff
  exports: b177d197a10754c231783b93b82b16c3
  Prob 5d9d7d9508d9f35fc2161062ddbdfbd7
  maxThres 7a7fb86424f3ae51dace609569c4cbb1
  minThres 212bebbdcd626fa9eee533567162c31e
  nrGeneTypes caf991d25be122f8f562074a1af57c10
  pGenDel 9aa57a95c8172ecd2bb3f113e4e1b283
  pGenDup 8b9dbdcc6b1fafb8e4db6e1e0112bc71
  pGenThresCh bdbb15479354c216583dc285e7adbba4
  pTfbsDel 4e2fe23518a20663947e702010fb4973
  pTfbsDup 925ed6289516208f6d5cde59b6d9ff14
  pTfbsInnov c07a88f11fe74a4c78cd33f23d517d92
  pTfbsPrefCh cc152a6237749898f7973c15445ef2d8
  pTfbsWtCh ac8867566e4b9460fe9585219773b20e
import  -/  World f427dede5f8e9a66027474c9e5b56d66
  exports: dc44aebce0380b8ee1ca1b4781747b5f
  Agent 48c49cdaeb2ca52223388e7227989f82
  Agent 561f0ee05c96a3e82fb313cbd3ac868f
  CGene 1c27d2f464a52e23b3698249e7fb6845
  CTfbs 79c6d102143295c70a013a9aabcbde9e
  Chromosome 26f985ded27f6405ac3c4cf8321a73ca
  Gene 085fbf8f21afd3f23f2f5c4a694dec5c
  Gene 956fe8fc5b3c37969ff70e73d6bb8c66
  Locus 47a505fc69fd8abfe3f6b21e1ff0951f
  NoAgent 0fb67a697bccdfda7b99244ce0fb83ac
  Tfbs 1215733d790d1e86536a89023f971157
  Tfbs 8a4c84d67597f987ba4dbd3231b74193
  gSTFromGenome 49b0273a6f39fadf01cb482a8d22277e
  groupGeneTfbs c4e8ad3ccf488ce3649a310fb883c7c8
  reduceToTfbss 8d5655383a00cdebfdc16f5cea97f8c6
import  -/  base-4.9.1.0:Control.Monad a6784c5dab0d75c63dabec5a37843f98
import  -/  base-4.9.1.0:Data.Foldable 3e0b6967a1da89945d0e2d47266337a2
import  -/  base-4.9.1.0:Data.Functor 5ab1dc703df5b482e77efb697833ca3c
import  -/  base-4.9.1.0:Data.List 07ae2acca6538aa0800bd0a993ac6ac1
import  -/  base-4.9.1.0:Data.OldList 27987919d8da2f92e3f472ca81f730f8
import  -/  base-4.9.1.0:Data.Traversable 556020d7cf3c4a34a774600512918a37
import  -/  base-4.9.1.0:GHC.Base c4231c43c07e46080a26bf94094c7aa1
import  -/  base-4.9.1.0:GHC.List ab8c4e523e6c479c549d3bcd5fc4a439
import  -/  base-4.9.1.0:GHC.Num 00bfaa7b2f9d6084913c0697a8a49ec8
import  -/  base-4.9.1.0:GHC.Real 82e4e59051a13dba1da63e1e970a69e6
import  -/  base-4.9.1.0:Prelude 22dd289b8469a8fa8dc81cab7b237771
import  -/  ghc-prim-0.5.0.0:GHC.Classes 0bdf3d057a415ec1b84a7b1994efbe47
de5fe18a8a3823b8ee0910c0a67fcb6f
  $s$fApplicativeStateT ::
    GHC.Base.Applicative
      (Control.Monad.Trans.State.Strict.StateT
         s Data.Functor.Identity.Identity)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ s.
                  @ (Control.Monad.Trans.State.Strict.StateT
                       s Data.Functor.Identity.Identity)
                  (Mutations.$s$fApplicativeStateT1 @ s)
                  (Mutations.$s$fApplicativeStateT_$s$fApplicativeStateT_$cpure @ s)
                  (Mutations.$s$fApplicativeStateT_$s$fApplicativeStateT_$c<*> @ s)
                  (Control.Monad.Trans.State.Strict.$fApplicativeStateT_$c*>
                     @ Data.Functor.Identity.Identity
                     @ s
                     Mutations.$s$fApplicativeStateT_$dFunctor
                     Data.Functor.Identity.$fMonadIdentity)
                  (Control.Monad.Trans.State.Strict.$fApplicativeStateT_$c<*
                     @ Data.Functor.Identity.Identity
                     @ s
                     Mutations.$s$fApplicativeStateT_$dFunctor
                     Data.Functor.Identity.$fMonadIdentity) -}
55a7c93172a1f5a975c1aa3893d69117
  $s$fApplicativeStateT1 ::
    GHC.Base.Functor
      (Control.Monad.Trans.State.Strict.StateT
         s Data.Functor.Identity.Identity)
  {- Unfolding: (\ @ s ->
                 Control.Monad.Trans.State.Strict.$fFunctorStateT
                   @ Data.Functor.Identity.Identity
                   @ s
                   Data.Functor.Identity.$fFunctorIdentity) -}
3d0c4f3da9665a3183c2e2148045b170
  $s$fApplicativeStateT_$dFunctor ::
    GHC.Base.Functor Data.Functor.Identity.Identity
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Data.Functor.Identity.$fFunctorIdentity -}
71f8256f2ccbd8dfee6f7f00a85570c5
  $s$fApplicativeStateT_$s$fApplicativeStateT_$c<*> ::
    Control.Monad.Trans.State.Strict.StateT
      s Data.Functor.Identity.Identity (a -> b)
    -> Control.Monad.Trans.State.Strict.StateT
         s Data.Functor.Identity.Identity a
    -> Control.Monad.Trans.State.Strict.StateT
         s Data.Functor.Identity.Identity b
  {- Arity: 3, HasNoCafRefs,
     Strictness: <C(S),1*C1(U(1*C1(U),U))><C(S),1*C1(U(U,U))><L,U>m,
     Inline: INLINE (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ @ s
                   @ a
                   @ b
                   (ds :: Control.Monad.Trans.State.Strict.StateT
                            s Data.Functor.Identity.Identity (a -> b))
                   (ds1 :: Control.Monad.Trans.State.Strict.StateT
                             s Data.Functor.Identity.Identity a) ->
                 GHC.Base.$
                   @ 'GHC.Types.PtrRepLifted
                   @ (s -> Data.Functor.Identity.Identity (b, s))
                   @ (Control.Monad.Trans.State.Strict.StateT
                        s Data.Functor.Identity.Identity b)
                   (\ (tpl :: s -> Data.Functor.Identity.Identity (b, s)) -> tpl)
                     `cast`
                   (<s -> Data.Functor.Identity.Identity (b, s)>_R
                    ->_R Sym (Control.Monad.Trans.State.Strict.N:StateT[0]
                                  <s>_N <Data.Functor.Identity.Identity>_R <b>_N))
                   (\ (s1 :: s) ->
                    Data.Functor.Identity.$fMonadIdentity_$c>>=
                      @ (a -> b, s)
                      @ (b, s)
                      (ds
                         `cast`
                       (Control.Monad.Trans.State.Strict.N:StateT[0]
                            <s>_N <Data.Functor.Identity.Identity>_R <a -> b>_N)
                         s1)
                      (\ (ds2 :: (a -> b, s))[OneShot] ->
                       case ds2 of wild { (,) f s' ->
                       Data.Functor.Identity.$fMonadIdentity_$c>>=
                         @ (a, s)
                         @ (b, s)
                         (ds1
                            `cast`
                          (Control.Monad.Trans.State.Strict.N:StateT[0]
                               <s>_N <Data.Functor.Identity.Identity>_R <a>_N)
                            s')
                         (\ (ds3 :: (a, s))[OneShot] ->
                          case ds3 of wild1 { (,) x s'' ->
                          Data.Functor.Identity.$fApplicativeIdentity_$cpure
                            @ (b, s)
                            (f x, s'') }) }))) -}
d5563c7d2869fcd705f2768a93484740
  $s$fApplicativeStateT_$s$fApplicativeStateT_$cpure ::
    a
    -> Control.Monad.Trans.State.Strict.StateT
         s Data.Functor.Identity.Identity a
  {- Arity: 2, HasNoCafRefs, Strictness: <L,U><L,U>m,
     Inline: INLINE (sat-args=1),
     Unfolding: InlineRule (1, False, False)
                (\ @ s @ a (a1 :: a) ->
                 GHC.Base.$
                   @ 'GHC.Types.PtrRepLifted
                   @ (s -> Data.Functor.Identity.Identity (a, s))
                   @ (Control.Monad.Trans.State.Strict.StateT
                        s Data.Functor.Identity.Identity a)
                   (\ (tpl :: s -> Data.Functor.Identity.Identity (a, s)) -> tpl)
                     `cast`
                   (<s -> Data.Functor.Identity.Identity (a, s)>_R
                    ->_R Sym (Control.Monad.Trans.State.Strict.N:StateT[0]
                                  <s>_N <Data.Functor.Identity.Identity>_R <a>_N))
                   (\ (s1 :: s) ->
                    Data.Functor.Identity.$fApplicativeIdentity_$cpure
                      @ (a, s)
                      (a1, s1))) -}
36b9aa60191f939385d548a637432053
  $s$fMonadStateT ::
    GHC.Base.Monad
      (Control.Monad.Trans.State.Strict.StateT
         s Data.Functor.Identity.Identity)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ s.
                  @ (Control.Monad.Trans.State.Strict.StateT
                       s Data.Functor.Identity.Identity)
                  (Mutations.$s$fMonadStateT_$s$fMonadStateT_$cp1Monad @ s)
                  (Mutations.$s$fMonadStateT_$s$fMonadStateT_$c>>= @ s)
                  (Mutations.$s$fMonadStateT_$s$fMonadStateT_$c>> @ s)
                  (Control.Monad.Trans.State.Strict.$fMonadStateT_$creturn
                     @ Data.Functor.Identity.Identity
                     @ s
                     Data.Functor.Identity.$fMonadIdentity)
                  (Mutations.$s$fMonadStateT_$s$fMonadStateT_$cfail @ s) -}
26de9bf44639524afe88c4571aa1e04a
  $s$fMonadStateT_$s$fMonadStateT_$c>> ::
    Control.Monad.Trans.State.Strict.StateT
      s Data.Functor.Identity.Identity a
    -> Control.Monad.Trans.State.Strict.StateT
         s Data.Functor.Identity.Identity b
    -> Control.Monad.Trans.State.Strict.StateT
         s Data.Functor.Identity.Identity b
  {- Arity: 3, HasNoCafRefs,
     Strictness: <C(S),1*C1(U(A,U))><C(S),1*C1(U(U,U))><L,U>,
     Inline: INLINE (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ @ s
                   @ a
                   @ b
                   (m1 :: Control.Monad.Trans.State.Strict.StateT
                            s Data.Functor.Identity.Identity a)
                   (k :: Control.Monad.Trans.State.Strict.StateT
                           s Data.Functor.Identity.Identity b) ->
                 GHC.Base.$
                   @ 'GHC.Types.PtrRepLifted
                   @ (s -> Data.Functor.Identity.Identity (b, s))
                   @ (Control.Monad.Trans.State.Strict.StateT
                        s Data.Functor.Identity.Identity b)
                   (\ (tpl :: s -> Data.Functor.Identity.Identity (b, s)) -> tpl)
                     `cast`
                   (<s -> Data.Functor.Identity.Identity (b, s)>_R
                    ->_R Sym (Control.Monad.Trans.State.Strict.N:StateT[0]
                                  <s>_N <Data.Functor.Identity.Identity>_R <b>_N))
                   (\ (s1 :: s) ->
                    Data.Functor.Identity.$fMonadIdentity_$c>>=
                      @ (a, s)
                      @ (b, s)
                      (Control.Monad.Trans.State.Strict.runStateT
                         @ s
                         @ Data.Functor.Identity.Identity
                         @ a
                         m1
                         s1)
                      (\ (ds :: (a, s))[OneShot] ->
                       case ds of wild { (,) a1 s' ->
                       Control.Monad.Trans.State.Strict.runStateT
                         @ s
                         @ Data.Functor.Identity.Identity
                         @ b
                         k
                         s' }))) -}
c9e1d3d0689f2a3fa00516145dd306f2
  $s$fMonadStateT_$s$fMonadStateT_$c>>= ::
    Control.Monad.Trans.State.Strict.StateT
      s Data.Functor.Identity.Identity a
    -> (a
        -> Control.Monad.Trans.State.Strict.StateT
             s Data.Functor.Identity.Identity b)
    -> Control.Monad.Trans.State.Strict.StateT
         s Data.Functor.Identity.Identity b
  {- Arity: 3, HasNoCafRefs,
     Strictness: <C(S),1*C1(U(U,U))><C(C(S)),1*C1(C1(U(U,U)))><L,U>,
     Inline: INLINE (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ @ s
                   @ a
                   @ b
                   (m1 :: Control.Monad.Trans.State.Strict.StateT
                            s Data.Functor.Identity.Identity a)
                   (k :: a
                         -> Control.Monad.Trans.State.Strict.StateT
                              s Data.Functor.Identity.Identity b) ->
                 GHC.Base.$
                   @ 'GHC.Types.PtrRepLifted
                   @ (s -> Data.Functor.Identity.Identity (b, s))
                   @ (Control.Monad.Trans.State.Strict.StateT
                        s Data.Functor.Identity.Identity b)
                   (\ (tpl :: s -> Data.Functor.Identity.Identity (b, s)) -> tpl)
                     `cast`
                   (<s -> Data.Functor.Identity.Identity (b, s)>_R
                    ->_R Sym (Control.Monad.Trans.State.Strict.N:StateT[0]
                                  <s>_N <Data.Functor.Identity.Identity>_R <b>_N))
                   (\ (s1 :: s) ->
                    Data.Functor.Identity.$fMonadIdentity_$c>>=
                      @ (a, s)
                      @ (b, s)
                      (Control.Monad.Trans.State.Strict.runStateT
                         @ s
                         @ Data.Functor.Identity.Identity
                         @ a
                         m1
                         s1)
                      (\ (ds :: (a, s))[OneShot] ->
                       case ds of wild { (,) a1 s' ->
                       Control.Monad.Trans.State.Strict.runStateT
                         @ s
                         @ Data.Functor.Identity.Identity
                         @ b
                         (k a1)
                         s' }))) -}
af0c6650c98d853213ee3a720c589f17
  $s$fMonadStateT_$s$fMonadStateT_$cfail ::
    GHC.Base.String
    -> Control.Monad.Trans.State.Strict.StateT
         s Data.Functor.Identity.Identity a
  {- Arity: 2, Strictness: <B,U><B,A>x, Inline: INLINE (sat-args=1),
     Unfolding: InlineRule (1, False, False)
                (\ @ s @ a (str :: GHC.Base.String) ->
                 GHC.Base.$
                   @ 'GHC.Types.PtrRepLifted
                   @ (s -> Data.Functor.Identity.Identity (a, s))
                   @ (Control.Monad.Trans.State.Strict.StateT
                        s Data.Functor.Identity.Identity a)
                   (\ (tpl :: s -> Data.Functor.Identity.Identity (a, s)) -> tpl)
                     `cast`
                   (<s -> Data.Functor.Identity.Identity (a, s)>_R
                    ->_R Sym (Control.Monad.Trans.State.Strict.N:StateT[0]
                                  <s>_N <Data.Functor.Identity.Identity>_R <a>_N))
                   (\ (ds :: s) ->
                    Data.Functor.Identity.$fMonadIdentity_$s$dmfail @ (a, s) str)) -}
520f1f6a29e42c8277eb52679dd71bf1
  $s$fMonadStateT_$s$fMonadStateT_$cp1Monad ::
    GHC.Base.Applicative
      (Control.Monad.Trans.State.Strict.StateT
         s Data.Functor.Identity.Identity)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Mutations.$s$fApplicativeStateT -}
6d4cdd5fd7c28755fb0058300f480a5b
  $s^1 :: Parameters.Prob
  {- Strictness: x -}
cce1b1a914045c9895a0fbccec4688ad
  $s^2 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (0) -}
c2c56829f793074c2782bc2159e78966
  $seven1 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (2) -}
fb8144cb50c723011b792698ae3a6727
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Mutations.$trModule2
                   Mutations.$trModule1) -}
a3bf6728e29a68eb14ff23ad2f4b9ba0
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Mutations"#) -}
0c10faf4027203965e9c072929c66f1e
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   "Evolverbetert-0.1.0.0-LjkPE0Wdux1AmRTdZ477DX"#) -}
94aad5b36ba7ed41e894e45b68346cdc
  $w$s^ ::
    Parameters.Prob -> GHC.Integer.Type.Integer -> GHC.Prim.Double#
  {- Arity: 2, Strictness: <L,U(U)><S,U>, Inline: [0],
     Unfolding: (\ (w :: Parameters.Prob)
                   (w1 :: GHC.Integer.Type.Integer) ->
                 case GHC.Integer.Type.ltInteger#
                        w1
                        Mutations.$s^2 of wild { DEFAULT ->
                 case GHC.Prim.tagToEnum# @ GHC.Types.Bool wild of wild1 {
                   GHC.Types.False
                   -> case GHC.Integer.Type.eqInteger#
                             w1
                             Mutations.$s^2 of wild2 { DEFAULT ->
                      case GHC.Prim.tagToEnum# @ GHC.Types.Bool wild2 of wild3 {
                        GHC.Types.False
                        -> case w of ww { GHC.Types.D# ww1 -> Mutations.$wf ww1 w1 }
                        GHC.Types.True -> 1.0## } }
                   GHC.Types.True
                   -> case Mutations.$s^1 ret_ty GHC.Prim.Double# of {} } }) -}
5c94160390897141474350b84584a7f5
  $wf ::
    GHC.Prim.Double# -> GHC.Integer.Type.Integer -> GHC.Prim.Double#
  {- Arity: 2, Strictness: <L,U><S,U>, Inline: [0] -}
da979f0ffea138ad78d57f67712afa73
  dupChr :: World.Chromosome -> MyRandom.Rand World.Chromosome
621e32c35b67ad7b0d72632cf925a64e
  mutAg :: World.Agent -> MyRandom.Rand World.Agent
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (ds :: World.Agent) ->
                 {__scc {Evolverbetert-0.1.0.0-LjkPE0Wdux1AmRTdZ477DX:Mutations.mutAg} True True} case ds of wild {
                                                                                                    World.Agent genome gst
                                                                                                    -> let {
                                                                                                         m1 :: Control.Monad.Trans.State.Strict.StateT
                                                                                                                 System.Random.Mersenne.Pure64.Internal.PureMT
                                                                                                                 Data.Functor.Identity.Identity
                                                                                                                 [World.Chromosome]
                                                                                                         = Mutations.mutAg2
                                                                                                             genome
                                                                                                       } in
                                                                                                       (\ (s1 :: System.Random.Mersenne.Pure64.Internal.PureMT) ->
                                                                                                        case (m1
                                                                                                                `cast`
                                                                                                              (Control.Monad.Trans.State.Strict.N:StateT[0]
                                                                                                                   <System.Random.Mersenne.Pure64.Internal.PureMT>_N
                                                                                                                   <Data.Functor.Identity.Identity>_R
                                                                                                                   <[World.Chromosome]>_N)
                                                                                                                s1)
                                                                                                               `cast`
                                                                                                             (Data.Functor.Identity.N:Identity[0]
                                                                                                                  <([World.Chromosome],
                                                                                                                    System.Random.Mersenne.Pure64.Internal.PureMT)>_R) of wild1 { (,) a1 s' ->
                                                                                                        (World.Agent
                                                                                                           a1
                                                                                                           ({__scc {Evolverbetert-0.1.0.0-LjkPE0Wdux1AmRTdZ477DX:Mutations.mutAg.gst'} True True} World.gSTFromGenome
                                                                                                                                                                                                    a1),
                                                                                                         s')
                                                                                                          `cast`
                                                                                                        (Sym (Data.Functor.Identity.N:Identity[0]
                                                                                                                  <(World.Agent,
                                                                                                                    System.Random.Mersenne.Pure64.Internal.PureMT)>_R)) })
                                                                                                         `cast`
                                                                                                       (Sym (Control.Monad.Trans.State.Strict.N:StateT[0]
                                                                                                                 <System.Random.Mersenne.Pure64.Internal.PureMT>_N
                                                                                                                 <Data.Functor.Identity.Identity>_R
                                                                                                                 <World.Agent>_N))
                                                                                                    World.NoAgent
                                                                                                    -> Mutations.mutAg1
                                                                                                         `cast`
                                                                                                       (Trans
                                                                                                            (<System.Random.Mersenne.Pure64.Internal.PureMT>_R
                                                                                                             ->_R Sym (Data.Functor.Identity.N:Identity[0]
                                                                                                                           <(World.Agent,
                                                                                                                             System.Random.Mersenne.Pure64.Internal.PureMT)>_R))
                                                                                                            (Sym (Control.Monad.Trans.State.Strict.N:StateT[0]
                                                                                                                      <System.Random.Mersenne.Pure64.Internal.PureMT>_N
                                                                                                                      <Data.Functor.Identity.Identity>_R
                                                                                                                      <World.Agent>_N))) }) -}
b4e0ca8dba190dc52444f9edbcc4396a
  mutAg1 ::
    System.Random.Mersenne.Pure64.Internal.PureMT
    -> (World.Agent, System.Random.Mersenne.Pure64.Internal.PureMT)
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U>m,
     Unfolding: InlineRule (1, True, False)
                (\ (eta1 :: System.Random.Mersenne.Pure64.Internal.PureMT) ->
                 (World.NoAgent, eta1)) -}
5749ccf38897343788d01c528f2af2dc
  mutAg2 ::
    [World.Chromosome]
    -> Control.Monad.Trans.State.Strict.StateT
         System.Random.Mersenne.Pure64.Internal.PureMT
         Data.Functor.Identity.Identity
         [World.Chromosome]
  {- Unfolding: ({__scc {Evolverbetert-0.1.0.0-LjkPE0Wdux1AmRTdZ477DX:Mutations.mutAg} False True} Data.Traversable.$fTraversable[]_$cmapM
                                                                                                     @ (Control.Monad.Trans.State.Strict.StateT
                                                                                                          System.Random.Mersenne.Pure64.Internal.PureMT
                                                                                                          Data.Functor.Identity.Identity)
                                                                                                     @ World.Chromosome
                                                                                                     @ World.Chromosome
                                                                                                     (Mutations.$s$fMonadStateT
                                                                                                        @ System.Random.Mersenne.Pure64.Internal.PureMT)
                                                                                                     Mutations.dupChr) -}
"SPEC/Mutations $fApplicativeStateT @ Identity _" [ALWAYS] forall @ s
                                                                  ($dMonad :: GHC.Base.Monad
                                                                                Data.Functor.Identity.Identity)
                                                                  ($dFunctor :: GHC.Base.Functor
                                                                                  Data.Functor.Identity.Identity)
  Control.Monad.Trans.State.Strict.$fApplicativeStateT @ Data.Functor.Identity.Identity
                                                       @ s
                                                       $dFunctor
                                                       $dMonad
  = Mutations.$s$fApplicativeStateT @ s
"SPEC/Mutations $fApplicativeStateT_$c<*> @ Identity _" [ALWAYS] forall @ s
                                                                        ($dMonad :: GHC.Base.Monad
                                                                                      Data.Functor.Identity.Identity)
                                                                        ($dFunctor :: GHC.Base.Functor
                                                                                        Data.Functor.Identity.Identity)
  Control.Monad.Trans.State.Strict.$fApplicativeStateT_$c<*> @ Data.Functor.Identity.Identity
                                                             @ s
                                                             $dFunctor
                                                             $dMonad
  = Mutations.$s$fApplicativeStateT_$s$fApplicativeStateT_$c<*> @ s
"SPEC/Mutations $fApplicativeStateT_$cpure @ Identity _" [ALWAYS] forall @ s
                                                                         ($dMonad :: GHC.Base.Monad
                                                                                       Data.Functor.Identity.Identity)
                                                                         ($dFunctor :: GHC.Base.Functor
                                                                                         Data.Functor.Identity.Identity)
  Control.Monad.Trans.State.Strict.$fApplicativeStateT_$cpure @ Data.Functor.Identity.Identity
                                                              @ s
                                                              $dFunctor
                                                              $dMonad
  = Mutations.$s$fApplicativeStateT_$s$fApplicativeStateT_$cpure @ s
"SPEC/Mutations $fMonadStateT @ Identity _" [ALWAYS] forall @ s
                                                            ($dMonad :: GHC.Base.Monad
                                                                          Data.Functor.Identity.Identity)
  Control.Monad.Trans.State.Strict.$fMonadStateT @ Data.Functor.Identity.Identity
                                                 @ s
                                                 $dMonad
  = Mutations.$s$fMonadStateT @ s
"SPEC/Mutations $fMonadStateT_$c>> @ Identity _" [ALWAYS] forall @ s
                                                                 ($dMonad :: GHC.Base.Monad
                                                                               Data.Functor.Identity.Identity)
  Control.Monad.Trans.State.Strict.$fMonadStateT_$c>> @ Data.Functor.Identity.Identity
                                                      @ s
                                                      $dMonad
  = Mutations.$s$fMonadStateT_$s$fMonadStateT_$c>> @ s
"SPEC/Mutations $fMonadStateT_$c>>= @ Identity _" [ALWAYS] forall @ s
                                                                  ($dMonad :: GHC.Base.Monad
                                                                                Data.Functor.Identity.Identity)
  Control.Monad.Trans.State.Strict.$fMonadStateT_$c>>= @ Data.Functor.Identity.Identity
                                                       @ s
                                                       $dMonad
  = Mutations.$s$fMonadStateT_$s$fMonadStateT_$c>>= @ s
"SPEC/Mutations $fMonadStateT_$cfail @ Identity _" [ALWAYS] forall @ s
                                                                   ($dMonad :: GHC.Base.Monad
                                                                                 Data.Functor.Identity.Identity)
  Control.Monad.Trans.State.Strict.$fMonadStateT_$cfail @ Data.Functor.Identity.Identity
                                                        @ s
                                                        $dMonad
  = Mutations.$s$fMonadStateT_$s$fMonadStateT_$cfail @ s
"SPEC/Mutations $fMonadStateT_$cp1Monad @ Identity _" [ALWAYS] forall @ s
                                                                      ($dMonad :: GHC.Base.Monad
                                                                                    Data.Functor.Identity.Identity)
  Control.Monad.Trans.State.Strict.$fMonadStateT_$cp1Monad @ Data.Functor.Identity.Identity
                                                           @ s
                                                           $dMonad
  = Mutations.$s$fMonadStateT_$s$fMonadStateT_$cp1Monad @ s
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

