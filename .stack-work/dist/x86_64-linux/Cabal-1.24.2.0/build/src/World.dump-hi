
==================== FINAL INTERFACE ====================
2017-04-28 14:38:40.050887 UTC

interface Evolverbetert-0.1.0.0-JiawwqdleTNHNC9Qg9fPkT:World 8002
  interface hash: 7229f576eb8694d8d3b64bafb844c9ea
  ABI hash: dfd77106894c91a2dfa1fb78596cea33
  export-list hash: 875aa2b1f13df4fda2489f6c319043ff
  orphan hash: 6f03ae1f4fd3d294884511e14072c3c6
  flag hash: 60ede7202df718eda107a0d677bc46fc
  sig of: Nothing
  used TH splices: False
  where
exports:
  World.connected
  World.defaultGst
  World.devAg
  World.fitnessAgent
  World.fitnessGST
  World.gSTFromGenome
  World.getGene
  World.getTfbs
  World.goodRandomGenome
  World.groupGeneTfbs
  World.hammDist
  World.hammDistAg
  World.isGene
  World.isTfbs
  World.locusEffect
  World.randomAgent
  World.randomChromosome
  World.randomGenes
  World.randomGenome
  World.randomTfbss
  World.reduceToGenes
  World.reduceToTfbss
  World.sameGST
  World.takeWhileInclusive
  World.targetExpression
  World.targetGST
  World.updateAgent
  World.updateChrom
  World.updateGenome
  World.updateLoc
module dependencies: Misc MyRandom Parameters Types
package dependencies: MonadRandom-0.5.1@MonadRandom-0.5.1-IY6HiWu00vQLARukQW3KMH
                      array-0.5.1.1@array-0.5.1.1 base-4.9.1.0
                      containers-0.5.7.1@containers-0.5.7.1
                      deepseq-1.4.2.0@deepseq-1.4.2.0 ghc-prim-0.5.0.0
                      integer-gmp-1.0.0.1
                      mersenne-random-pure64-0.2.2.0@mersenne-random-pure64-0.2.2.0-560i5rQoI3i9IX3BgSFLBV
                      mtl-2.2.1@mtl-2.2.1-BLKBelFsPB3BoFeSWSOYj6
                      primitive-0.6.1.0@primitive-0.6.1.0-6AbSTw9JXz141LE5p6LGH
                      random-1.1@random-1.1-9tceXaeYIMZ4JrKq20Egog
                      random-shuffle-0.0.4@random-shuffle-0.0.4-97h14tPp7Ru21125sv6IMi
                      split-0.2.3.1@split-0.2.3.1-FWyXC6nhV0H3AfM8IzrEFk
                      time-1.6.0.1@time-1.6.0.1 transformers-0.5.2.0@transformers-0.5.2.0
orphans: Evolverbetert-0.1.0.0-JiawwqdleTNHNC9Qg9fPkT:MyRandom
         base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
         time-1.6.0.1@time-1.6.0.1:Data.Time.Calendar.Gregorian
         time-1.6.0.1@time-1.6.0.1:Data.Time.Format.Parse
         time-1.6.0.1@time-1.6.0.1:Data.Time.LocalTime.LocalTime
         transformers-0.5.2.0@transformers-0.5.2.0:Control.Monad.Trans.Error
family instance modules: MonadRandom-0.5.1@MonadRandom-0.5.1-IY6HiWu00vQLARukQW3KMH:Control.Monad.Trans.Random.Lazy
                         base-4.9.1.0:Control.Applicative base-4.9.1.0:Data.Complex
                         base-4.9.1.0:Data.Either base-4.9.1.0:Data.Functor.Const
                         base-4.9.1.0:Data.Functor.Identity base-4.9.1.0:Data.List.NonEmpty
                         base-4.9.1.0:Data.Monoid base-4.9.1.0:Data.Semigroup
                         base-4.9.1.0:Data.Type.Equality base-4.9.1.0:Data.Version
                         base-4.9.1.0:Data.Void base-4.9.1.0:GHC.Exts
                         base-4.9.1.0:GHC.Generics base-4.9.1.0:GHC.IO.Exception
                         base-4.9.1.0:GHC.TypeLits
                         containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Set.Base
                         primitive-0.6.1.0@primitive-0.6.1.0-6AbSTw9JXz141LE5p6LGH:Control.Monad.Primitive
import  -/  Misc 0bb0c75bf8c1507de7475068ae5a714e
  exports: 2e2317e17d14009b42df24905f8e3cf5
  valueResultPairs 5e7d641eb5231974b5d0f26e9c1b319c
import  -/  MyRandom 4f2e9849e92fd7720cbebccfe2801265
  exports: 9b2c6f35135fc9455c1a3dd162ebc359
  Rand 8ad6bc0a02980079a34b3d183be0e1cc
  getModifyRand 14c6a791540268febd70ac875872e46a
  getRange 4bed3b2f5ef49bfbe28dd1fa778bcf97
  randomBool c9155dfdf5860317f38b9d90f38c4150
import  -/  Parameters f0b6d02e7496adab47282d49bc269f44
  exports: 840d86f5bb30fe7f211c714f30c387f7
  devTime 3138758efe15eb148b79f0a965e6e100
  maxThres 9afe6a92e63b333e74e871dd72c8c317
  minThres cf6f0fc7343b7d217e1f8024a505f326
  nrEnv 8345559e80d2531135319c3308fbfd0b
  nrGeneTypes 8d60383bc8b496178ecfac64972cb69c
  nrGeneTypes' 8dd42f5a9d45378b888a53efbf75de72
  nrHouseHold 2fb11f80eab096177671126324812e2f
  nrOverlap 020d2d35097afaa2afd284a2b1a08f4d
  nrSpecific 3491fe8778e3293ee78ca63c14657239
  selectionPressure c4d9629fd29388c791e69055784ce3a6
import  -/  Types 344386ad26f015f50945c7403febc394
  exports: 1903460ec2f3fff4e3f5c7bd897ec01f
  Agent 989805efb3f727f1ff780e610d060a11
  Agent c366e34cef18e343b1b97128d4a7d6c2
  CGene a9775cd0f1a1e6dd0cd1c7f53da23029
  CTfbs b60a3d1277cb8492d319aa9229b026b8
  Chromosome a45a495818bb58e4eb217380cb6d210a
  Env 86d083c95cb440c346ac68b02f16b953
  GS a7b7de9d2c670fb8282c7ac71617ef72
  Gene 3e5e521b4c205f8f285d529a8c73ce1f
  Gene 855bc26dbd005a2f673e8ef7757be5ba
  GeneState 03b02abd1f9f0b17f85b54269576f890
  GeneStateTable bb3b2c0c1c94fb002ce6e46aadd8b1da
  Genome 3bce35ea30a7a3eb58af4c6cfab74479
  ID 859e5213a4e604522bdadd8473dc98b4
  ID 817eaa265a1866a0c3a20a6482f764fc
  Locus 07657b88e6375bd6d708a4d154921905
  NoAgent a73a1bd211a68ac21cb525c28ff0ada8
  Tfbs e68e61ea55ad4e78f6bb15dca3a9414d
  Tfbs 31a1ab223f703ab4c97341c9dd6d8d8e
  Weight 95aa6bc61f3ed402a00e2e8be584a9c3
  genSt cb48762210a4dea2f2cac95159bedeaf
  geneStateTable c25d8717abe1bae082eda7e9a6c438c4
  iD 9cd906499b939e18a41454f3e15e9d92
import  -/  array-0.5.1.1@array-0.5.1.1:Data.Array.IArray 606f8bb830eb2a88c29c91f27c77f304
import  -/  base-4.9.1.0:Control.Monad a6784c5dab0d75c63dabec5a37843f98
import  -/  base-4.9.1.0:Data.Foldable 3e0b6967a1da89945d0e2d47266337a2
import  -/  base-4.9.1.0:Data.Functor 5ab1dc703df5b482e77efb697833ca3c
import  -/  base-4.9.1.0:Data.List 07ae2acca6538aa0800bd0a993ac6ac1
import  -/  base-4.9.1.0:Data.Maybe d876c4ffe4b3c43755a781e8ad860d88
import  -/  base-4.9.1.0:Data.Traversable 556020d7cf3c4a34a774600512918a37
import  -/  base-4.9.1.0:GHC.Base c4231c43c07e46080a26bf94094c7aa1
import  -/  base-4.9.1.0:GHC.List ab8c4e523e6c479c549d3bcd5fc4a439
import  -/  base-4.9.1.0:GHC.Num 00bfaa7b2f9d6084913c0697a8a49ec8
import  -/  base-4.9.1.0:GHC.Real 82e4e59051a13dba1da63e1e970a69e6
import  -/  base-4.9.1.0:Prelude 22dd289b8469a8fa8dc81cab7b237771
import  -/  containers-0.5.7.1@containers-0.5.7.1:Data.Map 20d4ffbee41965d03d6a989425473dc4
import  -/  containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base d432f6875983131473086af8cb290590
import  -/  ghc-prim-0.5.0.0:GHC.Classes 0bdf3d057a415ec1b84a7b1994efbe47
import  -/  mersenne-random-pure64-0.2.2.0@mersenne-random-pure64-0.2.2.0-560i5rQoI3i9IX3BgSFLBV:System.Random.Mersenne.Pure64.Internal bb3ed118165b97070d684375c016de56
import  -/  mtl-2.2.1@mtl-2.2.1-BLKBelFsPB3BoFeSWSOYj6:Control.Monad.State 749dca8ca0e6625b32091d445bd92b01
import  -/  mtl-2.2.1@mtl-2.2.1-BLKBelFsPB3BoFeSWSOYj6:Control.Monad.State.Class 6d31234b0a911b56412061943d18b89e
import  -/  random-1.1@random-1.1-9tceXaeYIMZ4JrKq20Egog:System.Random b21db0c0ea43dc1ad218556cd0b064c7
import  -/  random-shuffle-0.0.4@random-shuffle-0.0.4-97h14tPp7Ru21125sv6IMi:System.Random.Shuffle cceab7056a27578a61621d120d955aea
import  -/  split-0.2.3.1@split-0.2.3.1-FWyXC6nhV0H3AfM8IzrEFk:Data.List.Split c60198a427bfd51d9fb4562c059ec1d2
d553a22adecede1a1f42e1a1c80e4380
  $sfromList :: [(Types.ID, a)] -> Data.Map.Base.Map Types.ID a
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ @ a (ds :: [(Types.ID, a)]) ->
                 case ds of wild {
                   [] -> Data.Map.Base.Tip @ Types.ID @ a
                   : ds1 ds2
                   -> case ds1 of wild1 { (,) kx x ->
                      case ds2 of wild2 {
                        []
                        -> case kx `cast` (Types.N:ID[0]) of nt { GHC.Types.I# ipv ->
                           Data.Map.Base.Bin
                             @ Types.ID
                             @ a
                             1#
                             nt `cast` (Sym (Types.N:ID[0]))
                             x
                             (Data.Map.Base.Tip @ Types.ID @ a)
                             (Data.Map.Base.Tip @ Types.ID @ a) }
                        : ipv ipv1
                        -> case ipv of wild3 { (,) ky ds3 ->
                           case kx `cast` (Types.N:ID[0]) of wild4 { GHC.Types.I# x1 ->
                           case ky `cast` (Types.N:ID[0]) of wild5 { GHC.Types.I# y ->
                           case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.>=# x1 y) of wild6 {
                             GHC.Types.False
                             -> World.$wpoly_go10
                                  @ a
                                  1#
                                  (Data.Map.Base.Bin
                                     @ Types.ID
                                     @ a
                                     1#
                                     (GHC.Types.I# x1) `cast` (Sym (Types.N:ID[0]))
                                     x
                                     (Data.Map.Base.Tip @ Types.ID @ a)
                                     (Data.Map.Base.Tip @ Types.ID @ a))
                                  wild2
                             GHC.Types.True
                             -> World.$sfromList1
                                  @ a
                                  (Data.Map.Base.Bin
                                     @ Types.ID
                                     @ a
                                     1#
                                     (GHC.Types.I# x1) `cast` (Sym (Types.N:ID[0]))
                                     x
                                     (Data.Map.Base.Tip @ Types.ID @ a)
                                     (Data.Map.Base.Tip @ Types.ID @ a))
                                  wild2 } } } } } } }) -}
49fb22b4dfca4e5526c18e2fb794b289
  $sfromList1 ::
    Data.Map.Base.Map Types.ID a1
    -> [(Types.ID, a1)] -> Data.Map.Base.Map Types.ID a1
  {- Arity: 2, Strictness: <S,1*U><S,1*U> -}
1188247a05a41a6274c7943b1351894c
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module World.$trModule2 World.$trModule1) -}
a1af868be48b852b153f349484b83343
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "World"#) -}
d810e24f8243a7249f8c0f3853877103
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   "Evolverbetert-0.1.0.0-JiawwqdleTNHNC9Qg9fPkT"#) -}
b07e89dc61b901406ae43eb1cad4bd9e
  $w$sgo1 ::
    (Types.ID -> a1 -> a1 -> a1)
    -> GHC.Prim.Int#
    -> a1
    -> Data.Map.Base.Map Types.ID a1
    -> Data.Map.Base.Map Types.ID a1
  {- Arity: 4, Strictness: <L,1*C1(C1(C1(U)))><L,U><L,U><S,1*U>,
     Inline: [0] -}
779b05bc32111d16bcb5164cc6ab3b25
  $w$sgo10 ::
    GHC.Prim.Int#
    -> a1
    -> Data.Map.Base.Map Types.ID a1
    -> Data.Map.Base.Map Types.ID a1
  {- Arity: 3, Strictness: <L,U><L,U><S,1*U>, Inline: [0] -}
2664d35faa3c99bc9fe949dc11f313f3
  $w$shammDist ::
    [(Types.ID, Types.GeneState)]
    -> [(Types.ID, Types.GeneState)] -> GHC.Prim.Int#
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><L,1*U>,
     Inline: [0] -}
463e6d3dc540b5c7be2618d84daa0a2d
  $w$shammDist1 ::
    [(GHC.Types.Int, GHC.Types.Int)]
    -> [(GHC.Types.Int, GHC.Types.Int)] -> GHC.Prim.Int#
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><L,1*U>,
     Inline: [0] -}
37cf26b22e69afad109b5eba02767937
  $wf :: GHC.Prim.Double# -> GHC.Prim.Int# -> GHC.Prim.Double#
  {- Arity: 2, HasNoCafRefs, Strictness: <L,U><S,U>, Inline: [0] -}
55c0b1356e88f51b834ca8b153e72dc5
  $wfitnessGST ::
    GHC.Prim.Int# -> Types.GeneStateTable -> GHC.Prim.Double#
  {- Arity: 2, Strictness: <S,U><S,1*U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#) (w :: Types.GeneStateTable) ->
                 case w of gst { DEFAULT ->
                 case World.$w$shammDist
                        (Data.Map.Base.toAscList1
                           @ Types.ID
                           @ Types.GeneState
                           (GHC.Types.[] @ (Types.ID, Types.GeneState))
                           (World.$wtargetGST ww))
                        (Data.Map.Base.toAscList1
                           @ Types.ID
                           @ Types.GeneState
                           (GHC.Types.[] @ (Types.ID, Types.GeneState))
                           gst) of ww1 { DEFAULT ->
                 World.$wf
                   (GHC.Prim.-##
                      1.0##
                      (GHC.Prim./## (GHC.Prim.int2Double# ww1) 20.0##))
                   10# } }) -}
75d34785a219141e38fa2eed49cdf663
  $wgo ::
    [Types.ID]
    -> [Types.GeneState]
    -> GHC.Prim.Int#
    -> [(Types.ID, Types.GeneState)]
  {- Arity: 3, HasNoCafRefs, Strictness: <S,1*U><L,1*U><L,1*U>,
     Inline: [0] -}
285159ab58648c00316646e006a6e846
  $wgo1 :: Types.Agent -> GHC.Prim.Int# -> [Types.Agent]
  {- Arity: 2, Strictness: <L,U><S,1*U>, Inline: [0] -}
44988a43f8c2800e678721ea188e0117
  $wgo2 ::
    [Control.Monad.Trans.State.Strict.StateT
       System.Random.Mersenne.Pure64.Internal.PureMT
       Data.Functor.Identity.Identity
       [Types.Locus]]
    -> System.Random.Mersenne.Pure64.Internal.PureMT
    -> (# [[Types.Locus]],
          System.Random.Mersenne.Pure64.Internal.PureMT #)
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><L,U>, Inline: [0] -}
4e73be9fb2ed691a5eace320dafe4075
  $wgoodRandomGenome ::
    System.Random.Mersenne.Pure64.Internal.PureMT
    -> (# Types.Genome,
          System.Random.Mersenne.Pure64.Internal.PureMT #)
  {- Arity: 1, Strictness: <L,U(U,U,U(U))>, Inline: [0] -}
19080689e384779528916a76774fb310
  $whammDist :: GHC.Classes.Eq a => [a] -> [a] -> GHC.Prim.Int#
  {- Arity: 3, HasNoCafRefs,
     Strictness: <L,U(A,C(C1(U)))><S,1*U><L,1*U>, Inline: [0] -}
8f136965d127213833cb5bd59c060582
  $whammDistAg :: Types.Env -> Types.Agent -> GHC.Prim.Int#
  {- Arity: 2, Strictness: <L,1*U(U)><S,1*U>, Inline: [0],
     Unfolding: (\ (w :: Types.Env) (w1 :: Types.Agent) ->
                 case w1 of wild {
                   Types.Agent ipv ipv1
                   -> World.$w$shammDist
                        (Data.Map.Base.toAscList1
                           @ Types.ID
                           @ Types.GeneState
                           (GHC.Types.[] @ (Types.ID, Types.GeneState))
                           (World.targetGST w))
                        (Data.Map.Base.toAscList @ Types.ID @ Types.GeneState ipv1)
                   Types.NoAgent -> 20# }) -}
58e730739867a9831922b17f3cbb3149
  $wloop ::
    GHC.Prim.Int#
    -> System.Random.Mersenne.Pure64.Internal.PureMT
    -> (# [Types.Thres],
          System.Random.Mersenne.Pure64.Internal.PureMT #)
  {- Arity: 2, HasNoCafRefs, Strictness: <S,U><L,U>, Inline: [0] -}
24c16e4972681658a08c9d17029f8446
  $wloop1 ::
    GHC.Prim.Int#
    -> System.Random.Mersenne.Pure64.Internal.PureMT
    -> (# [Types.Weight],
          System.Random.Mersenne.Pure64.Internal.PureMT #)
  {- Arity: 2, HasNoCafRefs, Strictness: <S,U><L,U>, Inline: [0] -}
7121ca4a2dc2a4fb59e39b7f61666c42
  $wpoly_go1 ::
    GHC.Prim.Int# -> Data.Map.Base.Map Types.ID a -> GHC.Base.Maybe a
  {- Arity: 2, HasNoCafRefs, Strictness: <L,U><S,1*U>, Inline: [0] -}
29e35f4c391d2b7731d750523a40a90b
  $wpoly_go10 ::
    GHC.Prim.Int#
    -> Data.Map.Base.Map Types.ID a
    -> [(Types.ID, a)]
    -> Data.Map.Base.Map Types.ID a
  {- Arity: 3, Strictness: <L,U><S,1*U><S,1*U>, Inline: [0] -}
f2c4627b639af7648c6f3e3ada3bb38c
  $wrandomAgent ::
    System.Random.Mersenne.Pure64.Internal.PureMT
    -> (# Types.Agent, System.Random.Mersenne.Pure64.Internal.PureMT #)
  {- Arity: 1, Strictness: <L,U(U,U,U(U))>, Inline: [0] -}
02384b3de05ad3429130582468325e9e
  $wrandomChromosome ::
    System.Random.Mersenne.Pure64.Internal.PureMT
    -> (# Types.Chromosome,
          System.Random.Mersenne.Pure64.Internal.PureMT #)
  {- Arity: 1, Strictness: <L,U(U,U,U(U))>, Inline: [0],
     Unfolding: (\ (w :: System.Random.Mersenne.Pure64.Internal.PureMT) ->
                 case World.$wgo2
                        World.randomChromosome2
                        (case w of wild1 { System.Random.Mersenne.Pure64.Internal.PureMT dt dt1 nxt ->
                         case GHC.Prim.tagToEnum#
                                @ GHC.Types.Bool
                                (GHC.Prim.<# dt1 311#) of wild2 {
                           GHC.Types.False
                           -> case nxt of dt2 { System.Random.Mersenne.Pure64.Internal.MTBlock dt3 ->
                              System.Random.Mersenne.Pure64.Internal.PureMT
                                dt3
                                0#
                                (System.Random.Mersenne.Pure64.MTBlock.nextBlock dt2) }
                           GHC.Types.True
                           -> System.Random.Mersenne.Pure64.Internal.PureMT
                                dt
                                (GHC.Prim.+# dt1 1#)
                                nxt } }) of ww { (#,#) ww1 ww2 ->
                 (# let {
                      a1 :: [Types.Locus] = World.randomChromosome_go ww1
                    } in
                    case GHC.List.$wlenAcc @ Types.Locus a1 0# of ww3 { DEFAULT ->
                    case System.Random.Shuffle.shuffle'1
                           @ System.Random.Mersenne.Pure64.Internal.PureMT
                           (System.Random.Shuffle.$wrseq'
                              @ System.Random.Mersenne.Pure64.Internal.PureMT
                              MyRandom.$fRandomGenPureMT
                              (GHC.Prim.-# ww3 1#)
                              w) of ww4 { (#,#) ww5 ww6 ->
                    System.Random.Shuffle.shuffle1
                      @ Types.Locus
                      (System.Random.Shuffle.shuffle_x
                         @ Types.Locus
                         (GHC.Base.map
                            @ Types.Locus
                            @ (System.Random.Shuffle.Tree Types.Locus)
                            (System.Random.Shuffle.$WLeaf @ Types.Locus)
                            a1))
                      ww5 } },
                    ww2 #) }) -}
924841d15797f87377fe0d1859db01de
  $wrandomGenes ::
    System.Random.Mersenne.Pure64.Internal.PureMT
    -> (# [Types.Locus],
          System.Random.Mersenne.Pure64.Internal.PureMT #)
  {- Arity: 1, Strictness: <L,U>, Inline: [0],
     Unfolding: (\ (w :: System.Random.Mersenne.Pure64.Internal.PureMT) ->
                 case World.$wloop 20# w of ww { (#,#) ww1 ww2 ->
                 (# case System.Random.Shuffle.shuffle'1
                           @ System.Random.Mersenne.Pure64.Internal.PureMT
                           (System.Random.Shuffle.$wrseq'
                              @ System.Random.Mersenne.Pure64.Internal.PureMT
                              MyRandom.$fRandomGenPureMT
                              19#
                              ww2) of ww3 { (#,#) ww4 ww5 ->
                    GHC.Base.map
                      @ Types.Gene
                      @ Types.Locus
                      Types.CGene
                      (System.Random.Shuffle.shuffle1
                         @ Types.Gene
                         (System.Random.Shuffle.shuffle_x
                            @ Types.Gene
                            (World.randomChromosome_go1
                               World.fitnessGST3 `cast` ([Sym (Types.N:ID[0])])_R
                               (System.Random.Shuffle.shuffle1
                                  @ Types.Thres
                                  (System.Random.Shuffle.shuffle_x
                                     @ Types.Thres
                                     (GHC.Base.map
                                        @ Types.Thres
                                        @ (System.Random.Shuffle.Tree Types.Thres)
                                        (System.Random.Shuffle.$WLeaf @ Types.Thres)
                                        ww1))
                                  ww4)))
                         ww4) },
                    case ww2 of wild1 { System.Random.Mersenne.Pure64.Internal.PureMT dt dt1 nxt ->
                    case GHC.Prim.tagToEnum#
                           @ GHC.Types.Bool
                           (GHC.Prim.<# dt1 311#) of wild2 {
                      GHC.Types.False
                      -> case nxt of dt2 { System.Random.Mersenne.Pure64.Internal.MTBlock dt3 ->
                         System.Random.Mersenne.Pure64.Internal.PureMT
                           dt3
                           0#
                           (System.Random.Mersenne.Pure64.MTBlock.nextBlock dt2) }
                      GHC.Types.True
                      -> System.Random.Mersenne.Pure64.Internal.PureMT
                           dt
                           (GHC.Prim.+# dt1 1#)
                           nxt } } #) }) -}
e31c86073c8d5b105a20c58a60ea2baf
  $wrandomTfbss ::
    System.Random.Mersenne.Pure64.Internal.PureMT
    -> (# [Types.Locus],
          System.Random.Mersenne.Pure64.Internal.PureMT #)
  {- Arity: 1, Strictness: <L,U>, Inline: [0],
     Unfolding: (\ (w :: System.Random.Mersenne.Pure64.Internal.PureMT) ->
                 case World.$wloop1 20# w of ww { (#,#) ww1 ww2 ->
                 (# case System.Random.Shuffle.shuffle'1
                           @ System.Random.Mersenne.Pure64.Internal.PureMT
                           (System.Random.Shuffle.$wrseq'
                              @ System.Random.Mersenne.Pure64.Internal.PureMT
                              MyRandom.$fRandomGenPureMT
                              19#
                              ww2) of ww3 { (#,#) ww4 ww5 ->
                    GHC.Base.map
                      @ Types.Tfbs
                      @ Types.Locus
                      Types.CTfbs
                      (System.Random.Shuffle.shuffle1
                         @ Types.Tfbs
                         (System.Random.Shuffle.shuffle_x
                            @ Types.Tfbs
                            (World.randomChromosome_go2
                               World.fitnessGST3 `cast` ([Sym (Types.N:ID[0])])_R
                               (System.Random.Shuffle.shuffle1
                                  @ Types.Weight
                                  (System.Random.Shuffle.shuffle_x
                                     @ Types.Weight
                                     (GHC.Base.map
                                        @ Types.Weight
                                        @ (System.Random.Shuffle.Tree Types.Weight)
                                        (System.Random.Shuffle.$WLeaf @ Types.Weight)
                                        ww1))
                                  ww4)))
                         ww4) },
                    case ww2 of wild1 { System.Random.Mersenne.Pure64.Internal.PureMT dt dt1 nxt ->
                    case GHC.Prim.tagToEnum#
                           @ GHC.Types.Bool
                           (GHC.Prim.<# dt1 311#) of wild2 {
                      GHC.Types.False
                      -> case nxt of dt2 { System.Random.Mersenne.Pure64.Internal.MTBlock dt3 ->
                         System.Random.Mersenne.Pure64.Internal.PureMT
                           dt3
                           0#
                           (System.Random.Mersenne.Pure64.MTBlock.nextBlock dt2) }
                      GHC.Types.True
                      -> System.Random.Mersenne.Pure64.Internal.PureMT
                           dt
                           (GHC.Prim.+# dt1 1#)
                           nxt } } #) }) -}
5d4afc86a41049596d245e82237117f1
  $wtakeWhileInclusive' ::
    (a -> GHC.Types.Bool) -> [a] -> [a] -> (# [a], [a] #)
  {- Arity: 3, HasNoCafRefs, Strictness: <L,C(U)><L,U><S,1*U>,
     Inline: [0] -}
202b70da5931bd02e1dfb0aa69ca04ea
  $wtargetExpression :: Types.Env -> GHC.Prim.Int# -> Types.GeneState
  {- Arity: 2, HasNoCafRefs, Strictness: <L,U(U)><S,U>, Inline: [0],
     Unfolding: (\ (w :: Types.Env) (ww :: GHC.Prim.Int#) ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.<# ww 8#) of wild {
                   GHC.Types.False
                   -> case w of wild1 { GHC.Types.I# y ->
                      case GHC.Classes.modInt#
                             (GHC.Prim.-# (GHC.Prim.-# ww 8#) y)
                             2# of ww2 {
                        DEFAULT -> GHC.Types.False `cast` (Sym (Types.N:GeneState[0]))
                        0# -> GHC.Types.True `cast` (Sym (Types.N:GeneState[0])) } }
                   GHC.Types.True
                   -> GHC.Types.True `cast` (Sym (Types.N:GeneState[0])) }) -}
6e7cd934732418f06e1f3f36d732c0f3
  $wtargetGST :: GHC.Prim.Int# -> Types.GeneStateTable
  {- Arity: 1, Strictness: <S,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#) ->
                 case ww of ds {
                   DEFAULT
                   -> letrec {
                        $wgo5 :: [Types.ID]
                                 -> GHC.Prim.Int# -> [(Types.ID, Types.GeneState)]
                          {- Arity: 2, Strictness: <S,1*U><L,1*U>, Inline: [0] -}
                        = \ (w :: [Types.ID]) (ww1 :: GHC.Prim.Int#) ->
                          case w of wild {
                            [] -> GHC.Types.[] @ (Types.ID, Types.GeneState)
                            : y ys
                            -> case ww1 of ds1 {
                                 DEFAULT
                                 -> GHC.Types.:
                                      @ (Types.ID, Types.GeneState)
                                      (y,
                                       case y `cast` (Types.N:ID[0]) of ww2 { GHC.Types.I# ww3 ->
                                       case GHC.Prim.tagToEnum#
                                              @ GHC.Types.Bool
                                              (GHC.Prim.<# ww3 8#) of wild1 {
                                         GHC.Types.False
                                         -> case GHC.Classes.modInt#
                                                   (GHC.Prim.-# (GHC.Prim.-# ww3 8#) ds)
                                                   2# of ww4 {
                                              DEFAULT
                                              -> GHC.Types.False `cast` (Sym (Types.N:GeneState[0]))
                                              0#
                                              -> GHC.Types.True
                                                   `cast`
                                                 (Sym (Types.N:GeneState[0])) }
                                         GHC.Types.True
                                         -> GHC.Types.True `cast` (Sym (Types.N:GeneState[0])) } })
                                      ($wgo5 ys (GHC.Prim.-# ds1 1#))
                                 1#
                                 -> GHC.Types.:
                                      @ (Types.ID, Types.GeneState)
                                      (y,
                                       case y `cast` (Types.N:ID[0]) of ww2 { GHC.Types.I# ww3 ->
                                       case GHC.Prim.tagToEnum#
                                              @ GHC.Types.Bool
                                              (GHC.Prim.<# ww3 8#) of wild1 {
                                         GHC.Types.False
                                         -> case GHC.Classes.modInt#
                                                   (GHC.Prim.-# (GHC.Prim.-# ww3 8#) ds)
                                                   2# of ww4 {
                                              DEFAULT
                                              -> GHC.Types.False `cast` (Sym (Types.N:GeneState[0]))
                                              0#
                                              -> GHC.Types.True
                                                   `cast`
                                                 (Sym (Types.N:GeneState[0])) }
                                         GHC.Types.True
                                         -> GHC.Types.True `cast` (Sym (Types.N:GeneState[0])) } })
                                      (GHC.Types.[] @ (Types.ID, Types.GeneState)) } }
                      } in
                      World.$sfromList
                        @ Types.GeneState
                        ($wgo5 World.defaultGst2 `cast` ([Sym (Types.N:ID[0])])_R 20#)
                   0# -> World.fitnessGST5
                   1# -> World.fitnessGST1 }) -}
852cec824779e0dff34435e1939631d0
  $wupdateLoc ::
    Types.Weight
    -> Types.GeneStateTable
    -> Types.Locus
    -> (# Types.Weight, Types.Locus #)
  {- Arity: 3, HasNoCafRefs, Strictness: <L,U(U)><L,1*U><S,1*U>,
     Inline: [0],
     Unfolding: (\ (w :: Types.Weight)
                   (w1 :: Types.GeneStateTable)
                   (w2 :: Types.Locus) ->
                 case w2 of wild {
                   Types.Transposon -> (# w, Types.Transposon #)
                   Types.CGene gen
                   -> case gen of wild1 { Types.Gene i t st ->
                      (# World.locusEffect1 `cast` (Sym (Types.N:Weight[0])),
                         Types.CGene
                           (Types.Gene
                              i
                              t
                              (case w `cast` (Types.N:Weight[0]) of wild2 { GHC.Types.I# i1 ->
                               case t `cast` (Types.N:Thres[0]) of wild3 { GHC.Types.I# i2 ->
                               case GHC.Integer.Type.ltInteger#
                                      (GHC.Integer.Type.smallInteger i1)
                                      (GHC.Integer.Type.smallInteger i2) of wild4 { DEFAULT ->
                               case GHC.Prim.tagToEnum# @ GHC.Types.Bool wild4 of wild5 {
                                 GHC.Types.False
                                 -> case GHC.Integer.Type.eqInteger#
                                           (GHC.Integer.Type.smallInteger i1)
                                           (GHC.Integer.Type.smallInteger i2) of wild6 { DEFAULT ->
                                    case GHC.Prim.tagToEnum# @ GHC.Types.Bool wild6 of wild7 {
                                      GHC.Types.False
                                      -> GHC.Types.True `cast` (Sym (Types.N:GeneState[0]))
                                      GHC.Types.True -> st } }
                                 GHC.Types.True
                                 -> GHC.Types.False
                                      `cast`
                                    (Sym (Types.N:GeneState[0])) } } } })) #) }
                   Types.CTfbs ds
                   -> case ds of wild1 { Types.Tfbs i w3 ->
                      case i `cast` (Types.N:ID[0]) of ww { GHC.Types.I# ww1 ->
                      case World.$wpoly_go1 @ Types.GeneState ww1 w1 of wild2 {
                        GHC.Base.Nothing -> (# w, wild #)
                        GHC.Base.Just a1
                        -> case a1 `cast` (Types.N:GeneState[0]) of wild3 {
                             GHC.Types.False -> (# w, wild #)
                             GHC.Types.True
                             -> (# (GHC.Num.$fNumInt_$c+
                                      w `cast` (Types.N:Weight[0])
                                      w3 `cast` (Types.N:Weight[0]))
                                     `cast`
                                   (Sym (Types.N:Weight[0])),
                                   wild #) } } } } }) -}
b1c193279054f30f5bdb7d0fdf7b2d51
  connected :: Types.Genome -> GHC.Types.Bool
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: InlineRule (0, True, True)
                World.connected1
                  `cast`
                (<[[Types.Locus]]>_R ->_R Data.Monoid.N:All[0]) -}
5ab4e0560cc3c36dc8b697a49a557fa4
  connected1 :: [[Types.Locus]] -> Data.Monoid.All
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: (\ (x :: [[Types.Locus]]) ->
                 World.connected_go1
                   (GHC.Base.map
                      @ [Types.Locus]
                      @ GHC.Types.Int
                      (GHC.List.length @ Types.Locus)
                      (World.groupGeneTfbs (World.connected_go x)))) -}
fcaf2d357ea36238c1690a90fd006709
  connected_go :: [[Types.Locus]] -> [Types.Locus]
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U> -}
61c631cb2a01e99f5bd83096823a07c3
  connected_go1 :: [GHC.Types.Int] -> Data.Monoid.All
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U> -}
6948a3e84f080d9e6a0c6fb74225ecb6
  defaultGst :: Types.GeneStateTable
  {- Unfolding: (World.$sfromList
                   @ Types.GeneState
                   World.defaultGst1) -}
1e5e15a64d868182d381ed3795399807
  defaultGst1 :: [(Types.ID, Types.GeneState)]
  {- Unfolding: (World.$wgo
                   World.defaultGst2 `cast` ([Sym (Types.N:ID[0])])_R
                   World.defaultGst_xs
                   20#) -}
d357189e0f3beb6b68cd91b77040b1dd
  defaultGst2 :: [GHC.Types.Int]
  {- Unfolding: (GHC.Enum.eftInt 0# 9223372036854775807#) -}
ca6ddbae2b82d2872dfab8226cb5d4f3
  defaultGst_xs :: [Types.GeneState]
  {- HasNoCafRefs -}
6cbbaed490580baab54525f63a3d89ac
  devAg :: Types.Agent -> Types.Agent
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ (x :: Types.Agent) ->
                 World.devAg_takeUntilSame (World.$wgo1 x 20#)) -}
425b646d8e27468c166448ec8f10cc4d
  devAg_takeUntilSame :: [Types.Agent] -> Types.Agent
  {- Arity: 1, Strictness: <S,1*U> -}
b89e09c1febccef006f4905a95588003
  fitnessAgent :: Types.Env -> Types.Agent -> GHC.Types.Double
  {- Arity: 2, Strictness: <L,1*U(U)><S,1*U>m,
     Unfolding: InlineRule (2, True, False)
                (\ (e :: Types.Env) (ds :: Types.Agent) ->
                 case ds of wild {
                   Types.Agent ds1 gst -> World.fitnessGST e gst
                   Types.NoAgent -> World.fitnessAgent1 }) -}
3ec67734f4afa68d988539ee09a46a15
  fitnessAgent1 :: GHC.Types.Double
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.D# 0.0##) -}
45cf7ad6e609e1734df4ad2b1c388b55
  fitnessGST :: Types.Env -> Types.GeneStateTable -> GHC.Types.Double
  {- Arity: 2, Strictness: <S(S),1*U(U)><S,1*U>m, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Types.Env) (w1 :: Types.GeneStateTable) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case World.$wfitnessGST ww1 w1 of ww2 { DEFAULT ->
                 GHC.Types.D# ww2 } }) -}
3524b99df8c60ab23ab0316b5fa28e2c
  fitnessGST1 :: Types.GeneStateTable
  {- Unfolding: (World.$sfromList
                   @ Types.GeneState
                   World.fitnessGST2) -}
288be07588e56b772b0ba2ddca841caf
  fitnessGST2 :: [(Types.ID, Types.GeneState)]
  {- Unfolding: (GHC.Base.map
                   @ Types.ID
                   @ (Types.ID, Types.GeneState)
                   World.fitnessGST4
                   World.fitnessGST3 `cast` ([Sym (Types.N:ID[0])])_R) -}
bd6a41d93730edcfcf0f2ee7f5221be8
  fitnessGST3 :: [GHC.Types.Int]
  {- Unfolding: (GHC.Enum.eftInt 0# 19#) -}
cd57f4008299654f03b71c45aacb170d
  fitnessGST4 :: Types.ID -> (Types.ID, Types.GeneState)
  {- Arity: 1, HasNoCafRefs,
     Unfolding: (\ (x :: Types.ID) ->
                 (x,
                  case x `cast` (Types.N:ID[0]) of ww { GHC.Types.I# ww1 ->
                  case GHC.Prim.tagToEnum#
                         @ GHC.Types.Bool
                         (GHC.Prim.<# ww1 8#) of wild {
                    GHC.Types.False
                    -> case GHC.Classes.modInt#
                              (GHC.Prim.-# (GHC.Prim.-# ww1 8#) 1#)
                              2# of ww2 {
                         DEFAULT -> GHC.Types.False `cast` (Sym (Types.N:GeneState[0]))
                         0# -> GHC.Types.True `cast` (Sym (Types.N:GeneState[0])) }
                    GHC.Types.True
                    -> GHC.Types.True `cast` (Sym (Types.N:GeneState[0])) } })) -}
c5c7a84b298ce7ba5cdce681a37fc561
  fitnessGST5 :: Types.GeneStateTable
  {- Unfolding: (World.$sfromList
                   @ Types.GeneState
                   World.fitnessGST6) -}
f821327a7a98b3858c9b295768eec5fc
  fitnessGST6 :: [(Types.ID, Types.GeneState)]
  {- Unfolding: (GHC.Base.map
                   @ Types.ID
                   @ (Types.ID, Types.GeneState)
                   World.fitnessGST7
                   World.fitnessGST3 `cast` ([Sym (Types.N:ID[0])])_R) -}
dfe8688c701b4c099fa77922b60fd62a
  fitnessGST7 :: Types.ID -> (Types.ID, Types.GeneState)
  {- Arity: 1, HasNoCafRefs,
     Unfolding: (\ (x :: Types.ID) ->
                 (x,
                  case x `cast` (Types.N:ID[0]) of ww { GHC.Types.I# ww1 ->
                  case GHC.Prim.tagToEnum#
                         @ GHC.Types.Bool
                         (GHC.Prim.<# ww1 8#) of wild {
                    GHC.Types.False
                    -> case GHC.Classes.modInt# (GHC.Prim.-# ww1 8#) 2# of ww2 {
                         DEFAULT -> GHC.Types.False `cast` (Sym (Types.N:GeneState[0]))
                         0# -> GHC.Types.True `cast` (Sym (Types.N:GeneState[0])) }
                    GHC.Types.True
                    -> GHC.Types.True `cast` (Sym (Types.N:GeneState[0])) } })) -}
5213aafe988646b864eb8bdc1e9e812a
  gSTFromGenome :: Types.Genome -> Types.GeneStateTable
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (genes :: Types.Genome) ->
                 World.gSTFromGenome_makeGst
                   (Data.Map.Base.Tip @ Types.ID @ Types.GeneState)
                   (World.reduceToGenes genes)) -}
8fc1dacdb4a6b19602fd3468eba50f4e
  gSTFromGenome_makeGst ::
    Types.GeneStateTable -> [Types.Gene] -> Types.GeneStateTable
  {- Arity: 2, Strictness: <S,1*U><S,1*U> -}
7d75bc565e8455d89faf903a27d5294d
  getGene :: Types.Locus -> GHC.Base.Maybe Types.Gene
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Types.Locus) ->
                 case ds of wild {
                   DEFAULT -> GHC.Base.Nothing @ Types.Gene
                   Types.CGene g -> GHC.Base.Just @ Types.Gene g }) -}
e78010c222eea0cb2d6b0c8d4f8fab7b
  getTfbs :: Types.Locus -> GHC.Base.Maybe Types.Tfbs
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Types.Locus) ->
                 case ds of wild {
                   DEFAULT -> GHC.Base.Nothing @ Types.Tfbs
                   Types.CTfbs t -> GHC.Base.Just @ Types.Tfbs t }) -}
8471b0cb406a600dbc3afa5dc1c54ea7
  goodRandomGenome :: MyRandom.Rand Types.Genome
  {- Arity: 1, Strictness: <L,U(U,U,U(U))>m,
     Unfolding: InlineRule (0, True, True)
                World.goodRandomGenome1
                  `cast`
                (Sym (Control.Monad.Trans.State.Strict.N:StateT[0]
                          <System.Random.Mersenne.Pure64.Internal.PureMT>_N
                          <Data.Functor.Identity.Identity>_R
                          <Types.Genome>_N)) -}
ee5bac417c1b669d6c5530c4987939d0
  goodRandomGenome1 ::
    System.Random.Mersenne.Pure64.Internal.PureMT
    -> Data.Functor.Identity.Identity
         (Types.Genome, System.Random.Mersenne.Pure64.Internal.PureMT)
  {- Arity: 1, Strictness: <L,U(U,U,U(U))>m, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: System.Random.Mersenne.Pure64.Internal.PureMT) ->
                 case World.$wgoodRandomGenome w of ww { (#,#) ww1 ww2 ->
                 (ww1, ww2)
                   `cast`
                 (Sym (Data.Functor.Identity.N:Identity[0]
                           <(Types.Genome,
                             System.Random.Mersenne.Pure64.Internal.PureMT)>_R)) }) -}
8b60ce0bec572956c6c83d096ad9212d
  groupGeneTfbs :: [Types.Locus] -> [[Types.Locus]]
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U> -}
9ab6c12898ec1cc0b71025e83b14d1cf
  hammDist :: GHC.Classes.Eq a => [a] -> [a] -> GHC.Types.Int
  {- Arity: 3, HasNoCafRefs,
     Strictness: <L,U(A,C(C1(U)))><S,1*U><L,1*U>m, Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ @ a (w :: GHC.Classes.Eq a) (w1 :: [a]) (w2 :: [a]) ->
                 case World.$whammDist @ a w w1 w2 of ww { DEFAULT ->
                 GHC.Types.I# ww }) -}
d3d06c25e1a228a746fb896f5bb9efab
  hammDistAg :: Types.Env -> Types.Agent -> GHC.Types.Int
  {- Arity: 2, Strictness: <L,1*U(U)><S,1*U>m, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Types.Env) (w1 :: Types.Agent) ->
                 case World.$whammDistAg w w1 of ww { DEFAULT ->
                 GHC.Types.I# ww }) -}
9d2bb177591ebab0f82692b15639cd64
  hammDist_$shammDist ::
    [(GHC.Types.Int, GHC.Types.Int)]
    -> [(GHC.Types.Int, GHC.Types.Int)] -> GHC.Types.Int
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><L,1*U>m,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: [(GHC.Types.Int, GHC.Types.Int)])
                   (w1 :: [(GHC.Types.Int, GHC.Types.Int)]) ->
                 case World.$w$shammDist1 w w1 of ww { DEFAULT ->
                 GHC.Types.I# ww }) -}
ddfa5c84313e8f681d5230317320d25b
  isGene :: Types.Locus -> GHC.Types.Bool
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Types.Locus) ->
                 case ds of wild {
                   DEFAULT -> GHC.Types.False Types.CGene ds1 -> GHC.Types.True }) -}
de0c975a1536483ce2a0d3dfe3096ef2
  isTfbs :: Types.Locus -> GHC.Types.Bool
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Types.Locus) ->
                 case ds of wild {
                   DEFAULT -> GHC.Types.False Types.CTfbs ds1 -> GHC.Types.True }) -}
03563e53fd2f4218402e8d9c5b62c14c
  locusEffect :: Types.Locus -> Types.GeneStateTable -> Types.Weight
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><L,1*U>,
     Unfolding: (\ (ds :: Types.Locus) (gst :: Types.GeneStateTable) ->
                 case ds of wild {
                   DEFAULT -> World.locusEffect1 `cast` (Sym (Types.N:Weight[0]))
                   Types.CTfbs ds1
                   -> case ds1 of wild1 { Types.Tfbs i w ->
                      case i `cast` (Types.N:ID[0]) of ww { GHC.Types.I# ww1 ->
                      case World.$wpoly_go1 @ Types.GeneState ww1 gst of wild2 {
                        GHC.Base.Nothing
                        -> World.locusEffect1 `cast` (Sym (Types.N:Weight[0]))
                        GHC.Base.Just a1
                        -> case a1 `cast` (Types.N:GeneState[0]) of wild3 {
                             GHC.Types.False
                             -> World.locusEffect1 `cast` (Sym (Types.N:Weight[0]))
                             GHC.Types.True -> w } } } } }) -}
a650a9937a88e1ffb6b2f90a5b4652ad
  locusEffect1 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 0#) -}
830145c038d7996793a095e9217ae97f
  randomAgent :: MyRandom.Rand Types.Agent
  {- Arity: 1, Strictness: <L,U(U,U,U(U))>m,
     Unfolding: InlineRule (0, True, True)
                World.randomAgent1
                  `cast`
                (Sym (Control.Monad.Trans.State.Strict.N:StateT[0]
                          <System.Random.Mersenne.Pure64.Internal.PureMT>_N
                          <Data.Functor.Identity.Identity>_R
                          <Types.Agent>_N)) -}
96d54b580b8de73c72ddab84f9ab172e
  randomAgent1 ::
    System.Random.Mersenne.Pure64.Internal.PureMT
    -> Data.Functor.Identity.Identity
         (Types.Agent, System.Random.Mersenne.Pure64.Internal.PureMT)
  {- Arity: 1, Strictness: <L,U(U,U,U(U))>m, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: System.Random.Mersenne.Pure64.Internal.PureMT) ->
                 case World.$wrandomAgent w of ww { (#,#) ww1 ww2 ->
                 (ww1, ww2)
                   `cast`
                 (Sym (Data.Functor.Identity.N:Identity[0]
                           <(Types.Agent,
                             System.Random.Mersenne.Pure64.Internal.PureMT)>_R)) }) -}
df498c4663bd2e985cc232295943d23c
  randomChromosome :: MyRandom.Rand Types.Chromosome
  {- Arity: 1, Strictness: <L,U(U,U,U(U))>m,
     Unfolding: InlineRule (0, True, True)
                World.randomChromosome1
                  `cast`
                (Sym (Control.Monad.Trans.State.Strict.N:StateT[0]
                          <System.Random.Mersenne.Pure64.Internal.PureMT>_N
                          <Data.Functor.Identity.Identity>_R
                          <Types.Chromosome>_N)) -}
fcd178e65d4fd8e36aa089a3f0534179
  randomChromosome1 ::
    System.Random.Mersenne.Pure64.Internal.PureMT
    -> Data.Functor.Identity.Identity
         (Types.Chromosome, System.Random.Mersenne.Pure64.Internal.PureMT)
  {- Arity: 1, Strictness: <L,U(U,U,U(U))>m, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: System.Random.Mersenne.Pure64.Internal.PureMT) ->
                 case World.$wrandomChromosome w of ww { (#,#) ww1 ww2 ->
                 (ww1, ww2)
                   `cast`
                 (Sym (Data.Functor.Identity.N:Identity[0]
                           <(Types.Chromosome,
                             System.Random.Mersenne.Pure64.Internal.PureMT)>_R)) }) -}
e99495eeed1cf8eba93c4914db43d25b
  randomChromosome2 ::
    [Control.Monad.Trans.State.Strict.StateT
       System.Random.Mersenne.Pure64.Internal.PureMT
       Data.Functor.Identity.Identity
       [Types.Locus]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Control.Monad.Trans.State.Strict.StateT
                        System.Random.Mersenne.Pure64.Internal.PureMT
                        Data.Functor.Identity.Identity
                        [Types.Locus])
                   World.randomChromosome6
                     `cast`
                   (Sym (Control.Monad.Trans.State.Strict.N:StateT[0]
                             <System.Random.Mersenne.Pure64.Internal.PureMT>_N
                             <Data.Functor.Identity.Identity>_R
                             <[Types.Locus]>_N))
                   World.randomChromosome3) -}
66b9a36e25a487682181eca7db42d4b1
  randomChromosome3 ::
    [Control.Monad.Trans.State.Strict.StateT
       System.Random.Mersenne.Pure64.Internal.PureMT
       Data.Functor.Identity.Identity
       [Types.Locus]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Control.Monad.Trans.State.Strict.StateT
                        System.Random.Mersenne.Pure64.Internal.PureMT
                        Data.Functor.Identity.Identity
                        [Types.Locus])
                   World.randomChromosome6
                     `cast`
                   (Sym (Control.Monad.Trans.State.Strict.N:StateT[0]
                             <System.Random.Mersenne.Pure64.Internal.PureMT>_N
                             <Data.Functor.Identity.Identity>_R
                             <[Types.Locus]>_N))
                   World.randomChromosome4) -}
d6b40fd7f37053886c4eb3b5c96477ea
  randomChromosome4 ::
    [Control.Monad.Trans.State.Strict.StateT
       System.Random.Mersenne.Pure64.Internal.PureMT
       Data.Functor.Identity.Identity
       [Types.Locus]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Control.Monad.Trans.State.Strict.StateT
                        System.Random.Mersenne.Pure64.Internal.PureMT
                        Data.Functor.Identity.Identity
                        [Types.Locus])
                   World.randomChromosome5
                     `cast`
                   (Sym (Control.Monad.Trans.State.Strict.N:StateT[0]
                             <System.Random.Mersenne.Pure64.Internal.PureMT>_N
                             <Data.Functor.Identity.Identity>_R
                             <[Types.Locus]>_N))
                   (GHC.Types.[]
                      @ (Control.Monad.Trans.State.Strict.StateT
                           System.Random.Mersenne.Pure64.Internal.PureMT
                           Data.Functor.Identity.Identity
                           [Types.Locus]))) -}
ebedcc489b7e356076d8dd6219a33560
  randomChromosome5 ::
    System.Random.Mersenne.Pure64.Internal.PureMT
    -> Data.Functor.Identity.Identity
         ([Types.Locus], System.Random.Mersenne.Pure64.Internal.PureMT)
  {- Arity: 1, Strictness: <L,U>m, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: System.Random.Mersenne.Pure64.Internal.PureMT) ->
                 case World.$wrandomGenes w of ww { (#,#) ww1 ww2 ->
                 (ww1, ww2)
                   `cast`
                 (Sym (Data.Functor.Identity.N:Identity[0]
                           <([Types.Locus],
                             System.Random.Mersenne.Pure64.Internal.PureMT)>_R)) }) -}
7d3500a3b826e7bc918ed9b7e2a60141
  randomChromosome6 ::
    System.Random.Mersenne.Pure64.Internal.PureMT
    -> Data.Functor.Identity.Identity
         ([Types.Locus], System.Random.Mersenne.Pure64.Internal.PureMT)
  {- Arity: 1, Strictness: <L,U>m, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: System.Random.Mersenne.Pure64.Internal.PureMT) ->
                 case World.$wrandomTfbss w of ww { (#,#) ww1 ww2 ->
                 (ww1, ww2)
                   `cast`
                 (Sym (Data.Functor.Identity.N:Identity[0]
                           <([Types.Locus],
                             System.Random.Mersenne.Pure64.Internal.PureMT)>_R)) }) -}
0624c4042c53b785bcf0c20ead4463c9
  randomChromosome_go :: [[Types.Locus]] -> [Types.Locus]
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U> -}
a226c938dd4d38ba1f3a596435120a73
  randomChromosome_go1 ::
    [Types.ID]
    -> [Types.Thres] -> [System.Random.Shuffle.Tree Types.Gene]
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><L,1*U> -}
348d3b1c72e2745c282b6e5c6ca35374
  randomChromosome_go2 ::
    [Types.ID]
    -> [Types.Weight] -> [System.Random.Shuffle.Tree Types.Tfbs]
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><L,1*U> -}
1a90e44295c45eba1800f7f50b79d6b5
  randomGenes :: MyRandom.Rand [Types.Locus]
  {- Arity: 1, Strictness: <L,U>m,
     Unfolding: InlineRule (0, True, True)
                World.randomChromosome5
                  `cast`
                (Sym (Control.Monad.Trans.State.Strict.N:StateT[0]
                          <System.Random.Mersenne.Pure64.Internal.PureMT>_N
                          <Data.Functor.Identity.Identity>_R
                          <[Types.Locus]>_N)) -}
ba25495249dc2958244171875b78c7d8
  randomGenome :: MyRandom.Rand Types.Genome
  {- Arity: 1, Strictness: <L,U(U,U,U(U))>m,
     Unfolding: InlineRule (0, True, True)
                World.randomGenome1
                  `cast`
                (Sym (Control.Monad.Trans.State.Strict.N:StateT[0]
                          <System.Random.Mersenne.Pure64.Internal.PureMT>_N
                          <Data.Functor.Identity.Identity>_R
                          <[Types.Chromosome]>_N)) -}
198c684fb87ee98bf05ce38eac69268f
  randomGenome1 ::
    System.Random.Mersenne.Pure64.Internal.PureMT
    -> Data.Functor.Identity.Identity
         ([Types.Chromosome], System.Random.Mersenne.Pure64.Internal.PureMT)
  {- Arity: 1, Strictness: <L,U(U,U,U(U))>m,
     Unfolding: InlineRule (1, True, False)
                (\ (s1 :: System.Random.Mersenne.Pure64.Internal.PureMT) ->
                 case (World.randomChromosome1 s1)
                        `cast`
                      (Data.Functor.Identity.N:Identity[0]
                           <(Types.Chromosome,
                             System.Random.Mersenne.Pure64.Internal.PureMT)>_R) of wild { (,) a1 s' ->
                 (GHC.Types.:
                    @ Types.Chromosome
                    a1
                    (GHC.Types.[] @ Types.Chromosome),
                  s')
                   `cast`
                 (Sym (Data.Functor.Identity.N:Identity[0]
                           <([Types.Chromosome],
                             System.Random.Mersenne.Pure64.Internal.PureMT)>_R)) }) -}
485b0dc9f7850a2b750c807165dc29b7
  randomTfbss :: MyRandom.Rand [Types.Locus]
  {- Arity: 1, Strictness: <L,U>m,
     Unfolding: InlineRule (0, True, True)
                World.randomChromosome6
                  `cast`
                (Sym (Control.Monad.Trans.State.Strict.N:StateT[0]
                          <System.Random.Mersenne.Pure64.Internal.PureMT>_N
                          <Data.Functor.Identity.Identity>_R
                          <[Types.Locus]>_N)) -}
ceed14f2a5d237d1f124b839ac4726f4
  reduceToGenes :: Types.Genome -> [Types.Gene]
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: (\ (x :: [[Types.Locus]]) ->
                 World.reduceToGenes_go x) -}
3e2615c12b5a9729c139bb5c9425ff7a
  reduceToGenes_go :: [[Types.Locus]] -> [Types.Gene]
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U> -}
fab1bb0558b00c320380288dd2f558ac
  reduceToTfbss :: Types.Genome -> [Types.Tfbs]
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: (\ (x :: [[Types.Locus]]) ->
                 World.reduceToTfbss_go x) -}
df9c08a845014907e3c647f648b2be50
  reduceToTfbss_go :: [[Types.Locus]] -> [Types.Tfbs]
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U> -}
4db440966435e025777d1eeab49b1257
  sameGST :: Types.Agent -> Types.Agent -> GHC.Types.Bool
  {- Arity: 2, Strictness: <S,1*U><L,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ds :: Types.Agent) (ds1 :: Types.Agent) ->
                 case ds of wild {
                   Types.Agent ipv ipv1
                   -> case ds1 of wild1 {
                        Types.Agent ipv2 ipv3
                        -> Data.Map.Base.$fEqMap_$c==
                             @ Types.ID
                             @ Types.GeneState
                             Types.$fEqID
                             Types.$fEqGeneState
                             ipv1
                             ipv3
                        Types.NoAgent -> GHC.Types.False }
                   Types.NoAgent -> GHC.Types.True }) -}
596388b3ec19b9bfaa5454497c30f141
  takeWhileInclusive :: (a -> GHC.Types.Bool) -> [a] -> ([a], [a])
  {- Arity: 2, HasNoCafRefs, Strictness: <L,C(U)><S,1*U>m,
     Unfolding: InlineRule (2, True, False)
                (\ @ a (f :: a -> GHC.Types.Bool) (ls :: [a]) ->
                 World.takeWhileInclusive_takeWhileInclusive'
                   @ a
                   f
                   (GHC.Types.[] @ a, ls)) -}
ea11ce10017a6ec66ca76429800d43fa
  takeWhileInclusive_takeWhileInclusive' ::
    (a -> GHC.Types.Bool) -> ([a], [a]) -> ([a], [a])
  {- Arity: 2, HasNoCafRefs, Strictness: <L,C(U)><S(LS),1*U(U,1*U)>m,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ @ a (w :: a -> GHC.Types.Bool) (w1 :: ([a], [a])) ->
                 case w1 of ww { (,) ww1 ww2 ->
                 case World.$wtakeWhileInclusive'
                        @ a
                        w
                        ww1
                        ww2 of ww3 { (#,#) ww4 ww5 ->
                 (ww4, ww5) } }) -}
4985b586f2fa6bef12e99b8318914a9a
  targetExpression :: Types.Env -> Types.ID -> Types.GeneState
  {- Arity: 2, HasNoCafRefs, Strictness: <L,U(U)><S(S),1*U(U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Types.Env) (w1 :: Types.ID) ->
                 case w1 `cast` (Types.N:ID[0]) of ww { GHC.Types.I# ww1 ->
                 World.$wtargetExpression w ww1 }) -}
1d667de1d4169fa522eed472f2a2f162
  targetGST :: Types.Env -> Types.GeneStateTable
  {- Arity: 1, Strictness: <S(S),1*U(U)>, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Types.Env) ->
                 case w of ww { GHC.Types.I# ww1 -> World.$wtargetGST ww1 }) -}
e9c5cf38aea39b92643631d5c5e1e109
  updateAgent :: Types.Agent -> Types.Agent
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (ds :: Types.Agent) ->
                 case ds of wild {
                   Types.Agent chroms gst
                   -> case gst of gst1 { DEFAULT ->
                      let {
                        newGenome :: Types.Genome
                        = GHC.Base.map
                            @ [Types.Locus]
                            @ [Types.Locus]
                            (World.updateChrom
                               World.locusEffect1 `cast` (Sym (Types.N:Weight[0]))
                               gst1)
                            chroms
                      } in
                      case World.gSTFromGenome_makeGst
                             (Data.Map.Base.Tip @ Types.ID @ Types.GeneState)
                             (World.reduceToGenes_go newGenome) of wild1 {
                        Data.Map.Base.Bin dt ds1 ds2 ds3 ds4
                        -> case dt of wild2 {
                             DEFAULT -> Types.NoAgent 20# -> Types.Agent newGenome wild1 }
                        Data.Map.Base.Tip -> Types.NoAgent } }
                   Types.NoAgent -> Types.NoAgent }) -}
10875b58c8fbc4e37b40e17c6293a010
  updateChrom ::
    Types.Weight
    -> Types.GeneStateTable -> Types.Chromosome -> Types.Chromosome
  {- Arity: 3, HasNoCafRefs, Strictness: <L,U(U)><L,U><S,1*U> -}
33b2586f334c293d5729a5c2f096fdeb
  updateGenome ::
    Types.GeneStateTable -> Types.Genome -> Types.Genome
  {- Arity: 2, HasNoCafRefs, Strictness: <L,U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Types.GeneStateTable) (eta :: [Types.Chromosome]) ->
                 GHC.Base.build
                   @ [Types.Locus]
                   (\ @ b1
                      (c :: [Types.Locus] -> b1 -> b1)[OneShot]
                      (n :: b1)[OneShot] ->
                    GHC.Base.foldr
                      @ [Types.Locus]
                      @ b1
                      (GHC.Base.mapFB
                         @ [Types.Locus]
                         @ b1
                         @ [Types.Locus]
                         c
                         (World.updateChrom
                            World.locusEffect1 `cast` (Sym (Types.N:Weight[0]))
                            x))
                      n
                      eta)) -}
c82d638a66d8f9561cea058e5140ead2
  updateLoc ::
    Types.Weight
    -> Types.GeneStateTable
    -> Types.Locus
    -> (Types.Weight, Types.Locus)
  {- Arity: 3, HasNoCafRefs, Strictness: <L,U(U)><L,1*U><S,1*U>m,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: Types.Weight)
                   (w1 :: Types.GeneStateTable)
                   (w2 :: Types.Locus) ->
                 case World.$wupdateLoc w w1 w2 of ww { (#,#) ww1 ww2 ->
                 (ww1, ww2) }) -}
"SPEC hammDist" [ALWAYS] forall ($dEq :: GHC.Classes.Eq
                                           (GHC.Types.Int, GHC.Types.Int))
  World.hammDist @ (GHC.Types.Int, GHC.Types.Int) $dEq
  = World.hammDist_$shammDist
"SPEC/World fromList @ ID _" [ALWAYS] forall @ a
                                             ($dOrd :: GHC.Classes.Ord Types.ID)
  Data.Map.Base.fromList @ Types.ID @ a $dOrd = World.$sfromList @ a
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

