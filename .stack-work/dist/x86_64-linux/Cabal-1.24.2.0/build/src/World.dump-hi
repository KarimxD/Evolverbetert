
==================== FINAL INTERFACE ====================
2017-04-28 16:31:33.868682 UTC

interface Evolverbetert-0.1.0.0-JVauai24MmC4VMIOpFCRwG:World 8002
  interface hash: 59a4143d4436cfd81379f24a72b1ef09
  ABI hash: 3e7e2a4072f3caa69daebccfb176ef08
  export-list hash: e67d5e73efc3ddbb195eae358efd5ab7
  orphan hash: 21b7f9155387bbb37f43bdb7fdd25b42
  flag hash: 60ede7202df718eda107a0d677bc46fc
  sig of: Nothing
  used TH splices: False
  where
exports:
  World.connected
  World.defaultGst
  World.devAg
  World.fitnessAgent
  World.fitnessGST
  World.gSTFromGenome
  World.getGene
  World.getTfbs
  World.goodRandomGenome
  World.groupGeneTfbs
  World.hammDist
  World.hammDistAg
  World.isGene
  World.isTfbs
  World.locusEffect
  World.randomAgent
  World.randomChromosome
  World.randomGenes
  World.randomGenome
  World.randomTfbss
  World.reduceToGenes
  World.reduceToTfbss
  World.sameGST
  World.takeWhileInclusive
  World.targetExpression
  World.targetGST
  World.updateAgent
  World.updateChrom
  World.updateGenome
  World.updateLoc
module dependencies: Misc MyRandom Parameters Types
package dependencies: MonadRandom-0.5.1@MonadRandom-0.5.1-IY6HiWu00vQLARukQW3KMH
                      array-0.5.1.1@array-0.5.1.1 base-4.9.1.0
                      containers-0.5.7.1@containers-0.5.7.1
                      deepseq-1.4.2.0@deepseq-1.4.2.0 ghc-prim-0.5.0.0
                      integer-gmp-1.0.0.1
                      mersenne-random-pure64-0.2.2.0@mersenne-random-pure64-0.2.2.0-560i5rQoI3i9IX3BgSFLBV
                      mtl-2.2.1@mtl-2.2.1-BLKBelFsPB3BoFeSWSOYj6
                      primitive-0.6.1.0@primitive-0.6.1.0-6AbSTw9JXz141LE5p6LGH
                      random-1.1@random-1.1-9tceXaeYIMZ4JrKq20Egog
                      random-shuffle-0.0.4@random-shuffle-0.0.4-97h14tPp7Ru21125sv6IMi
                      split-0.2.3.1@split-0.2.3.1-FWyXC6nhV0H3AfM8IzrEFk
                      time-1.6.0.1@time-1.6.0.1 transformers-0.5.2.0@transformers-0.5.2.0
orphans: Evolverbetert-0.1.0.0-JVauai24MmC4VMIOpFCRwG:MyRandom
         base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
         time-1.6.0.1@time-1.6.0.1:Data.Time.Calendar.Gregorian
         time-1.6.0.1@time-1.6.0.1:Data.Time.Format.Parse
         time-1.6.0.1@time-1.6.0.1:Data.Time.LocalTime.LocalTime
         transformers-0.5.2.0@transformers-0.5.2.0:Control.Monad.Trans.Error
family instance modules: MonadRandom-0.5.1@MonadRandom-0.5.1-IY6HiWu00vQLARukQW3KMH:Control.Monad.Trans.Random.Lazy
                         base-4.9.1.0:Control.Applicative base-4.9.1.0:Data.Complex
                         base-4.9.1.0:Data.Either base-4.9.1.0:Data.Functor.Const
                         base-4.9.1.0:Data.Functor.Identity base-4.9.1.0:Data.List.NonEmpty
                         base-4.9.1.0:Data.Monoid base-4.9.1.0:Data.Semigroup
                         base-4.9.1.0:Data.Type.Equality base-4.9.1.0:Data.Version
                         base-4.9.1.0:Data.Void base-4.9.1.0:GHC.Exts
                         base-4.9.1.0:GHC.Generics base-4.9.1.0:GHC.IO.Exception
                         base-4.9.1.0:GHC.TypeLits
                         containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Set.Base
                         primitive-0.6.1.0@primitive-0.6.1.0-6AbSTw9JXz141LE5p6LGH:Control.Monad.Primitive
import  -/  Misc 9c840ebf3f1e94a077cfa39ed226e971
  exports: 0296819ec2db101dc5332d4059075e1a
  valueResultPairs 613bcb76caeef1eb45c21b2aa4d5e02f
import  -/  MyRandom ac5c3d52b691d9aaae5b1bb647af66bd
  exports: dd9a89ae07df5f4335cfca7f1ea96343
  Rand 15dbc98a9547e867366d8bad46ff1e94
  getModifyRand 42b51d370ba582df43ed004a89b1cb45
  getRange 9711cfb1121bda13507439d09b30ac7c
  randomBool 8e72015f311299ed65f101edffcf8f37
import  -/  Parameters f6207debca8ae6a6a2f80b3a30b982b7
  exports: 019275192dc9600464829c891d28e48a
  devTime 707b87183b4972fe3ecd083e708c4d4d
  maxThres 015334934caa6ce4d5ec4045a3510839
  minThres dfd84a1c08f327dade4935e3628ceedd
  nrEnv dad657cc3cc1034efa1940e50fd3b271
  nrGeneTypes 0e174033f78111c9b1241f86aa65480e
  nrGeneTypes' 75ef947213dd4ce9a76f5d53638a5732
  nrHouseHold 66be3db94062b72bd043e3b7221eee88
  nrOverlap 850482e4511956f6d301a7f47189ea15
  nrSpecific 2557d767afa5ca142ce385dfbf5ca3aa
  selectionPressure 55064c0fc333290ac0674ffeeddd9905
import  -/  Types 1d3d1e1d433c54e7bfb57452891f64d7
  exports: f90e62a4294bef8d4adecbf5aeb850c0
  Agent a1955434041c0ddcdec14b68adc5a3f1
  Agent d84ba5f3c206a79fef889ed9cdb2a757
  CGene 680029b02a23350830aad4d9f0e2089c
  CTfbs 5916ad2c7072433425c96231e7b8b1a8
  Chromosome be9bd89ddc70313c7284e6f9911e9f7a
  Env 88a064ab5cc38cba53ed6c77954d36cb
  GS 57b8e15c603ed31446c18a568a6ef96e
  Gene 68ede29c9044f65efd71e0cd3c3e9014
  Gene 62671c5f4898221a36e080f2cfbaeb99
  GeneState 0624c050dd249dc6c3c731ed15bbb84e
  GeneStateTable b57ec13db02500ae63d5b8235621c662
  Genome 701a6b59afaf6ac71673981e36ee7744
  ID 0d673b2a916b10c9dd854ba8ee53f405
  ID 24834833634867f6607836b0def3fd48
  Locus d285aff914c3fb093dd4ccf9b68f4d3b
  NoAgent 6206322b95deab4ed7ee3e59b287efbd
  Tfbs 5bceda15efcd159a3b066bf330bd57ff
  Tfbs c93ffd2c1a99954afadcac7ff9ddcd6f
  Weight 8df82395b7d8e0c5f66b28a03088eed9
  genSt 6a480ff37dc80d75e5749f053284690a
  geneStateTable 5fb01753af7756874617d8ee409e09ce
  iD 3750683217ba78b108575c1c15b90b4d
import  -/  array-0.5.1.1@array-0.5.1.1:Data.Array.IArray 606f8bb830eb2a88c29c91f27c77f304
import  -/  base-4.9.1.0:Control.Monad a6784c5dab0d75c63dabec5a37843f98
import  -/  base-4.9.1.0:Data.Foldable 3e0b6967a1da89945d0e2d47266337a2
import  -/  base-4.9.1.0:Data.Functor 5ab1dc703df5b482e77efb697833ca3c
import  -/  base-4.9.1.0:Data.List 07ae2acca6538aa0800bd0a993ac6ac1
import  -/  base-4.9.1.0:Data.Maybe d876c4ffe4b3c43755a781e8ad860d88
import  -/  base-4.9.1.0:Data.Traversable 556020d7cf3c4a34a774600512918a37
import  -/  base-4.9.1.0:GHC.Base c4231c43c07e46080a26bf94094c7aa1
import  -/  base-4.9.1.0:GHC.List ab8c4e523e6c479c549d3bcd5fc4a439
import  -/  base-4.9.1.0:GHC.Num 00bfaa7b2f9d6084913c0697a8a49ec8
import  -/  base-4.9.1.0:GHC.Real 82e4e59051a13dba1da63e1e970a69e6
import  -/  base-4.9.1.0:Prelude 22dd289b8469a8fa8dc81cab7b237771
import  -/  containers-0.5.7.1@containers-0.5.7.1:Data.Map 20d4ffbee41965d03d6a989425473dc4
import  -/  containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base d432f6875983131473086af8cb290590
import  -/  ghc-prim-0.5.0.0:GHC.Classes 0bdf3d057a415ec1b84a7b1994efbe47
import  -/  mersenne-random-pure64-0.2.2.0@mersenne-random-pure64-0.2.2.0-560i5rQoI3i9IX3BgSFLBV:System.Random.Mersenne.Pure64.Internal bb3ed118165b97070d684375c016de56
import  -/  mtl-2.2.1@mtl-2.2.1-BLKBelFsPB3BoFeSWSOYj6:Control.Monad.State 749dca8ca0e6625b32091d445bd92b01
import  -/  mtl-2.2.1@mtl-2.2.1-BLKBelFsPB3BoFeSWSOYj6:Control.Monad.State.Class 6d31234b0a911b56412061943d18b89e
import  -/  random-1.1@random-1.1-9tceXaeYIMZ4JrKq20Egog:System.Random b21db0c0ea43dc1ad218556cd0b064c7
import  -/  random-shuffle-0.0.4@random-shuffle-0.0.4-97h14tPp7Ru21125sv6IMi:System.Random.Shuffle cceab7056a27578a61621d120d955aea
import  -/  split-0.2.3.1@split-0.2.3.1-FWyXC6nhV0H3AfM8IzrEFk:Data.List.Split c60198a427bfd51d9fb4562c059ec1d2
afd3dadc5eaaa4aec7ebbd54398d97f0
  $sfromList :: [(Types.ID, a)] -> Data.Map.Base.Map Types.ID a
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ @ a (ds :: [(Types.ID, a)]) ->
                 case ds of wild {
                   [] -> Data.Map.Base.Tip @ Types.ID @ a
                   : ds1 ds2
                   -> case ds1 of wild1 { (,) kx x ->
                      case ds2 of wild2 {
                        []
                        -> case kx `cast` (Types.N:ID[0]) of nt { GHC.Types.I# ipv ->
                           Data.Map.Base.Bin
                             @ Types.ID
                             @ a
                             1#
                             nt `cast` (Sym (Types.N:ID[0]))
                             x
                             (Data.Map.Base.Tip @ Types.ID @ a)
                             (Data.Map.Base.Tip @ Types.ID @ a) }
                        : ipv ipv1
                        -> case ipv of wild3 { (,) ky ds3 ->
                           case kx `cast` (Types.N:ID[0]) of wild4 { GHC.Types.I# x1 ->
                           case ky `cast` (Types.N:ID[0]) of wild5 { GHC.Types.I# y ->
                           case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.>=# x1 y) of wild6 {
                             GHC.Types.False
                             -> World.$wpoly_go10
                                  @ a
                                  1#
                                  (Data.Map.Base.Bin
                                     @ Types.ID
                                     @ a
                                     1#
                                     (GHC.Types.I# x1) `cast` (Sym (Types.N:ID[0]))
                                     x
                                     (Data.Map.Base.Tip @ Types.ID @ a)
                                     (Data.Map.Base.Tip @ Types.ID @ a))
                                  wild2
                             GHC.Types.True
                             -> World.$sfromList1
                                  @ a
                                  (Data.Map.Base.Bin
                                     @ Types.ID
                                     @ a
                                     1#
                                     (GHC.Types.I# x1) `cast` (Sym (Types.N:ID[0]))
                                     x
                                     (Data.Map.Base.Tip @ Types.ID @ a)
                                     (Data.Map.Base.Tip @ Types.ID @ a))
                                  wild2 } } } } } } }) -}
a013c3be46a013e4701d5a212c26958e
  $sfromList1 ::
    Data.Map.Base.Map Types.ID a1
    -> [(Types.ID, a1)] -> Data.Map.Base.Map Types.ID a1
  {- Arity: 2, Strictness: <S,1*U><S,1*U> -}
7a9df43720118500dee643aed17ea6d2
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module World.$trModule2 World.$trModule1) -}
969932f8899e0780334eed6b56ebeb3f
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "World"#) -}
9dca1046d43964b397cfb9239a452bcb
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   "Evolverbetert-0.1.0.0-JVauai24MmC4VMIOpFCRwG"#) -}
8f04e66f996a23b28aa04d92bc530365
  $w$sgo1 ::
    (Types.ID -> a1 -> a1 -> a1)
    -> GHC.Prim.Int#
    -> a1
    -> Data.Map.Base.Map Types.ID a1
    -> Data.Map.Base.Map Types.ID a1
  {- Arity: 4, Strictness: <L,1*C1(C1(C1(U)))><L,U><L,U><S,1*U>,
     Inline: [0] -}
d8a4e701589de9de0d4c5d293c49ed30
  $w$sgo10 ::
    GHC.Prim.Int#
    -> a1
    -> Data.Map.Base.Map Types.ID a1
    -> Data.Map.Base.Map Types.ID a1
  {- Arity: 3, Strictness: <L,U><L,U><S,1*U>, Inline: [0] -}
1497857d094f0eddc2ca79fcc9adfe84
  $w$shammDist ::
    [(Types.ID, Types.GeneState)]
    -> [(Types.ID, Types.GeneState)] -> GHC.Prim.Int#
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><L,1*U>,
     Inline: [0] -}
fe9d7b615b9cc2ae7be44e80c35dddfc
  $w$shammDist1 ::
    [(GHC.Types.Int, GHC.Types.Int)]
    -> [(GHC.Types.Int, GHC.Types.Int)] -> GHC.Prim.Int#
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><L,1*U>,
     Inline: [0] -}
fc01054396067cae6b59462f949a2e62
  $wf :: GHC.Prim.Double# -> GHC.Prim.Int# -> GHC.Prim.Double#
  {- Arity: 2, HasNoCafRefs, Strictness: <L,U><S,U>, Inline: [0] -}
2b59e7eca1eac2ebaa0d076773855bc4
  $wfitnessGST ::
    GHC.Prim.Int# -> Types.GeneStateTable -> GHC.Prim.Double#
  {- Arity: 2, Strictness: <S,U><S,1*U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#) (w :: Types.GeneStateTable) ->
                 case w of gst { DEFAULT ->
                 case World.$w$shammDist
                        (Data.Map.Base.toAscList1
                           @ Types.ID
                           @ Types.GeneState
                           (GHC.Types.[] @ (Types.ID, Types.GeneState))
                           (World.$wtargetGST ww))
                        (Data.Map.Base.toAscList1
                           @ Types.ID
                           @ Types.GeneState
                           (GHC.Types.[] @ (Types.ID, Types.GeneState))
                           gst) of ww1 { DEFAULT ->
                 World.$wf
                   (GHC.Prim.-##
                      1.0##
                      (GHC.Prim./## (GHC.Prim.int2Double# ww1) 20.0##))
                   10# } }) -}
038c757ae14258c5789b11f7022a4bb9
  $wgo ::
    [Types.ID]
    -> [Types.GeneState]
    -> GHC.Prim.Int#
    -> [(Types.ID, Types.GeneState)]
  {- Arity: 3, HasNoCafRefs, Strictness: <S,1*U><L,1*U><L,1*U>,
     Inline: [0] -}
87d47da02a2377e99c4922b5a9aeab81
  $wgo1 :: Types.Agent -> GHC.Prim.Int# -> [Types.Agent]
  {- Arity: 2, Strictness: <L,U><S,1*U>, Inline: [0] -}
554489c5608da52f3f4c145862922e6f
  $wgo2 ::
    [Control.Monad.Trans.State.Strict.StateT
       System.Random.Mersenne.Pure64.Internal.PureMT
       Data.Functor.Identity.Identity
       [Types.Locus]]
    -> System.Random.Mersenne.Pure64.Internal.PureMT
    -> (# [[Types.Locus]],
          System.Random.Mersenne.Pure64.Internal.PureMT #)
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><L,U>, Inline: [0] -}
4c5f4c787f1ee1fdb12ebaa0cc56e36d
  $wgoodRandomGenome ::
    System.Random.Mersenne.Pure64.Internal.PureMT
    -> (# Types.Genome,
          System.Random.Mersenne.Pure64.Internal.PureMT #)
  {- Arity: 1, Strictness: <L,U(U,U,U(U))>, Inline: [0] -}
7cb39ef238aa9370fb8633e9bb890ee6
  $whammDist :: GHC.Classes.Eq a => [a] -> [a] -> GHC.Prim.Int#
  {- Arity: 3, HasNoCafRefs,
     Strictness: <L,U(A,C(C1(U)))><S,1*U><L,1*U>, Inline: [0] -}
6342e91da306690d1ad1f583fbaa0786
  $whammDistAg :: Types.Env -> Types.Agent -> GHC.Prim.Int#
  {- Arity: 2, Strictness: <L,1*U(U)><S,1*U>, Inline: [0],
     Unfolding: (\ (w :: Types.Env) (w1 :: Types.Agent) ->
                 case w1 of wild {
                   Types.Agent ipv ipv1
                   -> World.$w$shammDist
                        (Data.Map.Base.toAscList1
                           @ Types.ID
                           @ Types.GeneState
                           (GHC.Types.[] @ (Types.ID, Types.GeneState))
                           (World.targetGST w))
                        (Data.Map.Base.toAscList @ Types.ID @ Types.GeneState ipv1)
                   Types.NoAgent -> 20# }) -}
923df229be99e4927850f958d04dda92
  $wloop ::
    GHC.Prim.Int#
    -> System.Random.Mersenne.Pure64.Internal.PureMT
    -> (# [Types.Thres],
          System.Random.Mersenne.Pure64.Internal.PureMT #)
  {- Arity: 2, HasNoCafRefs, Strictness: <S,U><L,U>, Inline: [0] -}
a6a60b77f25135264bce1be1c40afea8
  $wloop1 ::
    GHC.Prim.Int#
    -> System.Random.Mersenne.Pure64.Internal.PureMT
    -> (# [Types.Weight],
          System.Random.Mersenne.Pure64.Internal.PureMT #)
  {- Arity: 2, HasNoCafRefs, Strictness: <S,U><L,U>, Inline: [0] -}
655051d32af5b2c0e45675203cddd132
  $wpoly_go1 ::
    GHC.Prim.Int# -> Data.Map.Base.Map Types.ID a -> GHC.Base.Maybe a
  {- Arity: 2, HasNoCafRefs, Strictness: <L,U><S,1*U>, Inline: [0] -}
6258ea3a6fdfbae80aab9016cdd8f122
  $wpoly_go10 ::
    GHC.Prim.Int#
    -> Data.Map.Base.Map Types.ID a
    -> [(Types.ID, a)]
    -> Data.Map.Base.Map Types.ID a
  {- Arity: 3, Strictness: <L,U><S,1*U><S,1*U>, Inline: [0] -}
06e22d843d23e2add2b0a1b90158ad53
  $wrandomAgent ::
    System.Random.Mersenne.Pure64.Internal.PureMT
    -> (# Types.Agent, System.Random.Mersenne.Pure64.Internal.PureMT #)
  {- Arity: 1, Strictness: <L,U(U,U,U(U))>, Inline: [0] -}
1d9fc7797865c58ce6ebb2abbf804438
  $wrandomChromosome ::
    System.Random.Mersenne.Pure64.Internal.PureMT
    -> (# Types.Chromosome,
          System.Random.Mersenne.Pure64.Internal.PureMT #)
  {- Arity: 1, Strictness: <L,U(U,U,U(U))>, Inline: [0],
     Unfolding: (\ (w :: System.Random.Mersenne.Pure64.Internal.PureMT) ->
                 case World.$wgo2
                        World.randomChromosome2
                        (case w of wild1 { System.Random.Mersenne.Pure64.Internal.PureMT dt dt1 nxt ->
                         case GHC.Prim.tagToEnum#
                                @ GHC.Types.Bool
                                (GHC.Prim.<# dt1 311#) of wild2 {
                           GHC.Types.False
                           -> case nxt of dt2 { System.Random.Mersenne.Pure64.Internal.MTBlock dt3 ->
                              System.Random.Mersenne.Pure64.Internal.PureMT
                                dt3
                                0#
                                (System.Random.Mersenne.Pure64.MTBlock.nextBlock dt2) }
                           GHC.Types.True
                           -> System.Random.Mersenne.Pure64.Internal.PureMT
                                dt
                                (GHC.Prim.+# dt1 1#)
                                nxt } }) of ww { (#,#) ww1 ww2 ->
                 (# let {
                      a1 :: [Types.Locus] = World.randomChromosome_go ww1
                    } in
                    case GHC.List.$wlenAcc @ Types.Locus a1 0# of ww3 { DEFAULT ->
                    case System.Random.Shuffle.shuffle'1
                           @ System.Random.Mersenne.Pure64.Internal.PureMT
                           (System.Random.Shuffle.$wrseq'
                              @ System.Random.Mersenne.Pure64.Internal.PureMT
                              MyRandom.$fRandomGenPureMT
                              (GHC.Prim.-# ww3 1#)
                              w) of ww4 { (#,#) ww5 ww6 ->
                    System.Random.Shuffle.shuffle1
                      @ Types.Locus
                      (System.Random.Shuffle.shuffle_x
                         @ Types.Locus
                         (GHC.Base.map
                            @ Types.Locus
                            @ (System.Random.Shuffle.Tree Types.Locus)
                            (System.Random.Shuffle.$WLeaf @ Types.Locus)
                            a1))
                      ww5 } },
                    ww2 #) }) -}
36b61a80a976100f93b2236ef407fec9
  $wrandomGenes ::
    System.Random.Mersenne.Pure64.Internal.PureMT
    -> (# [Types.Locus],
          System.Random.Mersenne.Pure64.Internal.PureMT #)
  {- Arity: 1, Strictness: <L,U>, Inline: [0],
     Unfolding: (\ (w :: System.Random.Mersenne.Pure64.Internal.PureMT) ->
                 case World.$wloop 20# w of ww { (#,#) ww1 ww2 ->
                 (# case System.Random.Shuffle.shuffle'1
                           @ System.Random.Mersenne.Pure64.Internal.PureMT
                           (System.Random.Shuffle.$wrseq'
                              @ System.Random.Mersenne.Pure64.Internal.PureMT
                              MyRandom.$fRandomGenPureMT
                              19#
                              ww2) of ww3 { (#,#) ww4 ww5 ->
                    GHC.Base.map
                      @ Types.Gene
                      @ Types.Locus
                      Types.CGene
                      (System.Random.Shuffle.shuffle1
                         @ Types.Gene
                         (System.Random.Shuffle.shuffle_x
                            @ Types.Gene
                            (World.randomChromosome_go1
                               World.fitnessGST3 `cast` ([Sym (Types.N:ID[0])])_R
                               (System.Random.Shuffle.shuffle1
                                  @ Types.Thres
                                  (System.Random.Shuffle.shuffle_x
                                     @ Types.Thres
                                     (GHC.Base.map
                                        @ Types.Thres
                                        @ (System.Random.Shuffle.Tree Types.Thres)
                                        (System.Random.Shuffle.$WLeaf @ Types.Thres)
                                        ww1))
                                  ww4)))
                         ww4) },
                    case ww2 of wild1 { System.Random.Mersenne.Pure64.Internal.PureMT dt dt1 nxt ->
                    case GHC.Prim.tagToEnum#
                           @ GHC.Types.Bool
                           (GHC.Prim.<# dt1 311#) of wild2 {
                      GHC.Types.False
                      -> case nxt of dt2 { System.Random.Mersenne.Pure64.Internal.MTBlock dt3 ->
                         System.Random.Mersenne.Pure64.Internal.PureMT
                           dt3
                           0#
                           (System.Random.Mersenne.Pure64.MTBlock.nextBlock dt2) }
                      GHC.Types.True
                      -> System.Random.Mersenne.Pure64.Internal.PureMT
                           dt
                           (GHC.Prim.+# dt1 1#)
                           nxt } } #) }) -}
fc231e91a17144cba3deb35d99ae23dd
  $wrandomTfbss ::
    System.Random.Mersenne.Pure64.Internal.PureMT
    -> (# [Types.Locus],
          System.Random.Mersenne.Pure64.Internal.PureMT #)
  {- Arity: 1, Strictness: <L,U>, Inline: [0],
     Unfolding: (\ (w :: System.Random.Mersenne.Pure64.Internal.PureMT) ->
                 case World.$wloop1 20# w of ww { (#,#) ww1 ww2 ->
                 (# case System.Random.Shuffle.shuffle'1
                           @ System.Random.Mersenne.Pure64.Internal.PureMT
                           (System.Random.Shuffle.$wrseq'
                              @ System.Random.Mersenne.Pure64.Internal.PureMT
                              MyRandom.$fRandomGenPureMT
                              19#
                              ww2) of ww3 { (#,#) ww4 ww5 ->
                    GHC.Base.map
                      @ Types.Tfbs
                      @ Types.Locus
                      Types.CTfbs
                      (System.Random.Shuffle.shuffle1
                         @ Types.Tfbs
                         (System.Random.Shuffle.shuffle_x
                            @ Types.Tfbs
                            (World.randomChromosome_go2
                               World.fitnessGST3 `cast` ([Sym (Types.N:ID[0])])_R
                               (System.Random.Shuffle.shuffle1
                                  @ Types.Weight
                                  (System.Random.Shuffle.shuffle_x
                                     @ Types.Weight
                                     (GHC.Base.map
                                        @ Types.Weight
                                        @ (System.Random.Shuffle.Tree Types.Weight)
                                        (System.Random.Shuffle.$WLeaf @ Types.Weight)
                                        ww1))
                                  ww4)))
                         ww4) },
                    case ww2 of wild1 { System.Random.Mersenne.Pure64.Internal.PureMT dt dt1 nxt ->
                    case GHC.Prim.tagToEnum#
                           @ GHC.Types.Bool
                           (GHC.Prim.<# dt1 311#) of wild2 {
                      GHC.Types.False
                      -> case nxt of dt2 { System.Random.Mersenne.Pure64.Internal.MTBlock dt3 ->
                         System.Random.Mersenne.Pure64.Internal.PureMT
                           dt3
                           0#
                           (System.Random.Mersenne.Pure64.MTBlock.nextBlock dt2) }
                      GHC.Types.True
                      -> System.Random.Mersenne.Pure64.Internal.PureMT
                           dt
                           (GHC.Prim.+# dt1 1#)
                           nxt } } #) }) -}
02fe98f437d5cd1a1bb153ad9d001699
  $wtakeWhileInclusive' ::
    (a -> GHC.Types.Bool) -> [a] -> [a] -> (# [a], [a] #)
  {- Arity: 3, HasNoCafRefs, Strictness: <L,C(U)><L,U><S,1*U>,
     Inline: [0] -}
242b78d7db748ff9b98260f79f1e29d8
  $wtargetExpression :: Types.Env -> GHC.Prim.Int# -> Types.GeneState
  {- Arity: 2, HasNoCafRefs, Strictness: <L,U(U)><S,U>, Inline: [0],
     Unfolding: (\ (w :: Types.Env) (ww :: GHC.Prim.Int#) ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.<# ww 8#) of wild {
                   GHC.Types.False
                   -> case w of wild1 { GHC.Types.I# y ->
                      case GHC.Classes.modInt#
                             (GHC.Prim.-# (GHC.Prim.-# ww 8#) y)
                             2# of ww2 {
                        DEFAULT -> GHC.Types.False `cast` (Sym (Types.N:GeneState[0]))
                        0# -> GHC.Types.True `cast` (Sym (Types.N:GeneState[0])) } }
                   GHC.Types.True
                   -> GHC.Types.True `cast` (Sym (Types.N:GeneState[0])) }) -}
0ca67096ddef4bca836b8de67d2c9a56
  $wtargetGST :: GHC.Prim.Int# -> Types.GeneStateTable
  {- Arity: 1, Strictness: <S,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#) ->
                 case ww of ds {
                   DEFAULT
                   -> letrec {
                        $wgo5 :: [Types.ID]
                                 -> GHC.Prim.Int# -> [(Types.ID, Types.GeneState)]
                          {- Arity: 2, Strictness: <S,1*U><L,1*U>, Inline: [0] -}
                        = \ (w :: [Types.ID]) (ww1 :: GHC.Prim.Int#) ->
                          case w of wild {
                            [] -> GHC.Types.[] @ (Types.ID, Types.GeneState)
                            : y ys
                            -> case ww1 of ds1 {
                                 DEFAULT
                                 -> GHC.Types.:
                                      @ (Types.ID, Types.GeneState)
                                      (y,
                                       case y `cast` (Types.N:ID[0]) of ww2 { GHC.Types.I# ww3 ->
                                       case GHC.Prim.tagToEnum#
                                              @ GHC.Types.Bool
                                              (GHC.Prim.<# ww3 8#) of wild1 {
                                         GHC.Types.False
                                         -> case GHC.Classes.modInt#
                                                   (GHC.Prim.-# (GHC.Prim.-# ww3 8#) ds)
                                                   2# of ww4 {
                                              DEFAULT
                                              -> GHC.Types.False `cast` (Sym (Types.N:GeneState[0]))
                                              0#
                                              -> GHC.Types.True
                                                   `cast`
                                                 (Sym (Types.N:GeneState[0])) }
                                         GHC.Types.True
                                         -> GHC.Types.True `cast` (Sym (Types.N:GeneState[0])) } })
                                      ($wgo5 ys (GHC.Prim.-# ds1 1#))
                                 1#
                                 -> GHC.Types.:
                                      @ (Types.ID, Types.GeneState)
                                      (y,
                                       case y `cast` (Types.N:ID[0]) of ww2 { GHC.Types.I# ww3 ->
                                       case GHC.Prim.tagToEnum#
                                              @ GHC.Types.Bool
                                              (GHC.Prim.<# ww3 8#) of wild1 {
                                         GHC.Types.False
                                         -> case GHC.Classes.modInt#
                                                   (GHC.Prim.-# (GHC.Prim.-# ww3 8#) ds)
                                                   2# of ww4 {
                                              DEFAULT
                                              -> GHC.Types.False `cast` (Sym (Types.N:GeneState[0]))
                                              0#
                                              -> GHC.Types.True
                                                   `cast`
                                                 (Sym (Types.N:GeneState[0])) }
                                         GHC.Types.True
                                         -> GHC.Types.True `cast` (Sym (Types.N:GeneState[0])) } })
                                      (GHC.Types.[] @ (Types.ID, Types.GeneState)) } }
                      } in
                      World.$sfromList
                        @ Types.GeneState
                        ($wgo5 World.defaultGst2 `cast` ([Sym (Types.N:ID[0])])_R 20#)
                   0# -> World.fitnessGST5
                   1# -> World.fitnessGST1 }) -}
a4c011ad41a11921055991bc0240d071
  $wupdateLoc ::
    Types.Weight
    -> Types.GeneStateTable
    -> Types.Locus
    -> (# Types.Weight, Types.Locus #)
  {- Arity: 3, HasNoCafRefs, Strictness: <L,U(U)><L,1*U><S,1*U>,
     Inline: [0],
     Unfolding: (\ (w :: Types.Weight)
                   (w1 :: Types.GeneStateTable)
                   (w2 :: Types.Locus) ->
                 case w2 of wild {
                   Types.Transposon -> (# w, Types.Transposon #)
                   Types.CGene gen
                   -> case gen of wild1 { Types.Gene i t st ->
                      (# World.locusEffect1 `cast` (Sym (Types.N:Weight[0])),
                         Types.CGene
                           (Types.Gene
                              i
                              t
                              (case w `cast` (Types.N:Weight[0]) of wild2 { GHC.Types.I# i1 ->
                               case t `cast` (Types.N:Thres[0]) of wild3 { GHC.Types.I# i2 ->
                               case GHC.Integer.Type.ltInteger#
                                      (GHC.Integer.Type.smallInteger i1)
                                      (GHC.Integer.Type.smallInteger i2) of wild4 { DEFAULT ->
                               case GHC.Prim.tagToEnum# @ GHC.Types.Bool wild4 of wild5 {
                                 GHC.Types.False
                                 -> case GHC.Integer.Type.eqInteger#
                                           (GHC.Integer.Type.smallInteger i1)
                                           (GHC.Integer.Type.smallInteger i2) of wild6 { DEFAULT ->
                                    case GHC.Prim.tagToEnum# @ GHC.Types.Bool wild6 of wild7 {
                                      GHC.Types.False
                                      -> GHC.Types.True `cast` (Sym (Types.N:GeneState[0]))
                                      GHC.Types.True -> st } }
                                 GHC.Types.True
                                 -> GHC.Types.False
                                      `cast`
                                    (Sym (Types.N:GeneState[0])) } } } })) #) }
                   Types.CTfbs ds
                   -> case ds of wild1 { Types.Tfbs i w3 ->
                      case i `cast` (Types.N:ID[0]) of ww { GHC.Types.I# ww1 ->
                      case World.$wpoly_go1 @ Types.GeneState ww1 w1 of wild2 {
                        GHC.Base.Nothing -> (# w, wild #)
                        GHC.Base.Just a1
                        -> case a1 `cast` (Types.N:GeneState[0]) of wild3 {
                             GHC.Types.False -> (# w, wild #)
                             GHC.Types.True
                             -> (# (GHC.Num.$fNumInt_$c+
                                      w `cast` (Types.N:Weight[0])
                                      w3 `cast` (Types.N:Weight[0]))
                                     `cast`
                                   (Sym (Types.N:Weight[0])),
                                   wild #) } } } } }) -}
2f1b1873a7323c3a0abff364c9d4b7ee
  connected :: Types.Genome -> GHC.Types.Bool
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: InlineRule (0, True, True)
                World.connected1
                  `cast`
                (<[[Types.Locus]]>_R ->_R Data.Monoid.N:All[0]) -}
96501d932675d0388ab81e9fe830382e
  connected1 :: [[Types.Locus]] -> Data.Monoid.All
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: (\ (x :: [[Types.Locus]]) ->
                 World.connected_go1
                   (GHC.Base.map
                      @ [Types.Locus]
                      @ GHC.Types.Int
                      (GHC.List.length @ Types.Locus)
                      (World.groupGeneTfbs (World.connected_go x)))) -}
a4a1b113176aab3569ce706a53cdcb94
  connected_go :: [[Types.Locus]] -> [Types.Locus]
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U> -}
e61c4ba5ff671cfc8cc042fe1953f83c
  connected_go1 :: [GHC.Types.Int] -> Data.Monoid.All
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U> -}
ee6757ec50987f027152d881ab04619f
  defaultGst :: Types.GeneStateTable
  {- Unfolding: (World.$sfromList
                   @ Types.GeneState
                   World.defaultGst1) -}
16652d3af909a7b9bc178214bacbbd92
  defaultGst1 :: [(Types.ID, Types.GeneState)]
  {- Unfolding: (World.$wgo
                   World.defaultGst2 `cast` ([Sym (Types.N:ID[0])])_R
                   World.defaultGst_xs
                   20#) -}
e63d61c22be89d805a4ea9eef6dced5f
  defaultGst2 :: [GHC.Types.Int]
  {- Unfolding: (GHC.Enum.eftInt 0# 9223372036854775807#) -}
df37497cc9e5a529875b715d699e807f
  defaultGst_xs :: [Types.GeneState]
  {- HasNoCafRefs -}
4b6b0c9d94d22f75c8e796d1a68b213e
  devAg :: Types.Agent -> Types.Agent
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ (x :: Types.Agent) ->
                 World.devAg_takeUntilSame (World.$wgo1 x 20#)) -}
13912bc4552dd73f51996ed1fd26588a
  devAg_takeUntilSame :: [Types.Agent] -> Types.Agent
  {- Arity: 1, Strictness: <S,1*U> -}
058741f30c7dee0a8ab3d52aecef8af9
  fitnessAgent :: Types.Env -> Types.Agent -> GHC.Types.Double
  {- Arity: 2, Strictness: <L,1*U(U)><S,1*U>m,
     Unfolding: InlineRule (2, True, False)
                (\ (e :: Types.Env) (ds :: Types.Agent) ->
                 case ds of wild {
                   Types.Agent ds1 gst -> World.fitnessGST e gst
                   Types.NoAgent -> World.fitnessAgent1 }) -}
e76faaadc5f19e740acd69db723480da
  fitnessAgent1 :: GHC.Types.Double
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.D# 0.0##) -}
5fb1341a64409b623468744d10828477
  fitnessGST :: Types.Env -> Types.GeneStateTable -> GHC.Types.Double
  {- Arity: 2, Strictness: <S(S),1*U(U)><S,1*U>m, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Types.Env) (w1 :: Types.GeneStateTable) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case World.$wfitnessGST ww1 w1 of ww2 { DEFAULT ->
                 GHC.Types.D# ww2 } }) -}
0c0349a17424173be78e38c12222771b
  fitnessGST1 :: Types.GeneStateTable
  {- Unfolding: (World.$sfromList
                   @ Types.GeneState
                   World.fitnessGST2) -}
b3dc0f0a58d683a21815a97554630bbb
  fitnessGST2 :: [(Types.ID, Types.GeneState)]
  {- Unfolding: (GHC.Base.map
                   @ Types.ID
                   @ (Types.ID, Types.GeneState)
                   World.fitnessGST4
                   World.fitnessGST3 `cast` ([Sym (Types.N:ID[0])])_R) -}
fa1c1ec709a130aa8df179387a3688d6
  fitnessGST3 :: [GHC.Types.Int]
  {- Unfolding: (GHC.Enum.eftInt 0# 19#) -}
0c216f553060d1affd700321a310c282
  fitnessGST4 :: Types.ID -> (Types.ID, Types.GeneState)
  {- Arity: 1, HasNoCafRefs,
     Unfolding: (\ (x :: Types.ID) ->
                 (x,
                  case x `cast` (Types.N:ID[0]) of ww { GHC.Types.I# ww1 ->
                  case GHC.Prim.tagToEnum#
                         @ GHC.Types.Bool
                         (GHC.Prim.<# ww1 8#) of wild {
                    GHC.Types.False
                    -> case GHC.Classes.modInt#
                              (GHC.Prim.-# (GHC.Prim.-# ww1 8#) 1#)
                              2# of ww2 {
                         DEFAULT -> GHC.Types.False `cast` (Sym (Types.N:GeneState[0]))
                         0# -> GHC.Types.True `cast` (Sym (Types.N:GeneState[0])) }
                    GHC.Types.True
                    -> GHC.Types.True `cast` (Sym (Types.N:GeneState[0])) } })) -}
e7181bbd56afa98f6e819df98648415e
  fitnessGST5 :: Types.GeneStateTable
  {- Unfolding: (World.$sfromList
                   @ Types.GeneState
                   World.fitnessGST6) -}
b9b500452e77c1dd7108f8a99dce17da
  fitnessGST6 :: [(Types.ID, Types.GeneState)]
  {- Unfolding: (GHC.Base.map
                   @ Types.ID
                   @ (Types.ID, Types.GeneState)
                   World.fitnessGST7
                   World.fitnessGST3 `cast` ([Sym (Types.N:ID[0])])_R) -}
522d606ca8eba49ea87fb32a5948e2fd
  fitnessGST7 :: Types.ID -> (Types.ID, Types.GeneState)
  {- Arity: 1, HasNoCafRefs,
     Unfolding: (\ (x :: Types.ID) ->
                 (x,
                  case x `cast` (Types.N:ID[0]) of ww { GHC.Types.I# ww1 ->
                  case GHC.Prim.tagToEnum#
                         @ GHC.Types.Bool
                         (GHC.Prim.<# ww1 8#) of wild {
                    GHC.Types.False
                    -> case GHC.Classes.modInt# (GHC.Prim.-# ww1 8#) 2# of ww2 {
                         DEFAULT -> GHC.Types.False `cast` (Sym (Types.N:GeneState[0]))
                         0# -> GHC.Types.True `cast` (Sym (Types.N:GeneState[0])) }
                    GHC.Types.True
                    -> GHC.Types.True `cast` (Sym (Types.N:GeneState[0])) } })) -}
733a75bbb4e9e111a659144805a69954
  gSTFromGenome :: Types.Genome -> Types.GeneStateTable
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (genes :: Types.Genome) ->
                 World.gSTFromGenome_makeGst
                   (Data.Map.Base.Tip @ Types.ID @ Types.GeneState)
                   (World.reduceToGenes genes)) -}
4afe29f8dbf5a18c441d9cdf1c095a8c
  gSTFromGenome_makeGst ::
    Types.GeneStateTable -> [Types.Gene] -> Types.GeneStateTable
  {- Arity: 2, Strictness: <S,1*U><S,1*U> -}
86927a1dff2e91aed37d79233aa40fc5
  getGene :: Types.Locus -> GHC.Base.Maybe Types.Gene
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Types.Locus) ->
                 case ds of wild {
                   DEFAULT -> GHC.Base.Nothing @ Types.Gene
                   Types.CGene g -> GHC.Base.Just @ Types.Gene g }) -}
9e8b26fea13efcfc5c13f0495b88f82e
  getTfbs :: Types.Locus -> GHC.Base.Maybe Types.Tfbs
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Types.Locus) ->
                 case ds of wild {
                   DEFAULT -> GHC.Base.Nothing @ Types.Tfbs
                   Types.CTfbs t -> GHC.Base.Just @ Types.Tfbs t }) -}
8ebba4a69b5ee1b1951bf49fbabcf87c
  goodRandomGenome :: MyRandom.Rand Types.Genome
  {- Arity: 1, Strictness: <L,U(U,U,U(U))>m,
     Unfolding: InlineRule (0, True, True)
                World.goodRandomGenome1
                  `cast`
                (Sym (Control.Monad.Trans.State.Strict.N:StateT[0]
                          <System.Random.Mersenne.Pure64.Internal.PureMT>_N
                          <Data.Functor.Identity.Identity>_R
                          <Types.Genome>_N)) -}
34027b28dd4a53e9f3d4832f173b07b2
  goodRandomGenome1 ::
    System.Random.Mersenne.Pure64.Internal.PureMT
    -> Data.Functor.Identity.Identity
         (Types.Genome, System.Random.Mersenne.Pure64.Internal.PureMT)
  {- Arity: 1, Strictness: <L,U(U,U,U(U))>m, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: System.Random.Mersenne.Pure64.Internal.PureMT) ->
                 case World.$wgoodRandomGenome w of ww { (#,#) ww1 ww2 ->
                 (ww1, ww2)
                   `cast`
                 (Sym (Data.Functor.Identity.N:Identity[0]
                           <(Types.Genome,
                             System.Random.Mersenne.Pure64.Internal.PureMT)>_R)) }) -}
549341764583244ff800560b165b91f0
  groupGeneTfbs :: [Types.Locus] -> [[Types.Locus]]
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U> -}
cb87ab8ef265d2cfc329e487dad60e37
  hammDist :: GHC.Classes.Eq a => [a] -> [a] -> GHC.Types.Int
  {- Arity: 3, HasNoCafRefs,
     Strictness: <L,U(A,C(C1(U)))><S,1*U><L,1*U>m, Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ @ a (w :: GHC.Classes.Eq a) (w1 :: [a]) (w2 :: [a]) ->
                 case World.$whammDist @ a w w1 w2 of ww { DEFAULT ->
                 GHC.Types.I# ww }) -}
837f653cab505cf95809969d328ed51c
  hammDistAg :: Types.Env -> Types.Agent -> GHC.Types.Int
  {- Arity: 2, Strictness: <L,1*U(U)><S,1*U>m, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Types.Env) (w1 :: Types.Agent) ->
                 case World.$whammDistAg w w1 of ww { DEFAULT ->
                 GHC.Types.I# ww }) -}
b1025f2df31049738c154febef56490c
  hammDist_$shammDist ::
    [(GHC.Types.Int, GHC.Types.Int)]
    -> [(GHC.Types.Int, GHC.Types.Int)] -> GHC.Types.Int
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><L,1*U>m,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: [(GHC.Types.Int, GHC.Types.Int)])
                   (w1 :: [(GHC.Types.Int, GHC.Types.Int)]) ->
                 case World.$w$shammDist1 w w1 of ww { DEFAULT ->
                 GHC.Types.I# ww }) -}
825e35f63cf70318652ae11f937a1551
  isGene :: Types.Locus -> GHC.Types.Bool
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Types.Locus) ->
                 case ds of wild {
                   DEFAULT -> GHC.Types.False Types.CGene ds1 -> GHC.Types.True }) -}
f0e9a125aae02d553b04f029ff9c678d
  isTfbs :: Types.Locus -> GHC.Types.Bool
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Types.Locus) ->
                 case ds of wild {
                   DEFAULT -> GHC.Types.False Types.CTfbs ds1 -> GHC.Types.True }) -}
c8f0611ccc5c58cd685fe4758fb7322e
  locusEffect :: Types.Locus -> Types.GeneStateTable -> Types.Weight
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><L,1*U>,
     Unfolding: (\ (ds :: Types.Locus) (gst :: Types.GeneStateTable) ->
                 case ds of wild {
                   DEFAULT -> World.locusEffect1 `cast` (Sym (Types.N:Weight[0]))
                   Types.CTfbs ds1
                   -> case ds1 of wild1 { Types.Tfbs i w ->
                      case i `cast` (Types.N:ID[0]) of ww { GHC.Types.I# ww1 ->
                      case World.$wpoly_go1 @ Types.GeneState ww1 gst of wild2 {
                        GHC.Base.Nothing
                        -> World.locusEffect1 `cast` (Sym (Types.N:Weight[0]))
                        GHC.Base.Just a1
                        -> case a1 `cast` (Types.N:GeneState[0]) of wild3 {
                             GHC.Types.False
                             -> World.locusEffect1 `cast` (Sym (Types.N:Weight[0]))
                             GHC.Types.True -> w } } } } }) -}
c0ab7a40f4158e841479d3f2c3d8880e
  locusEffect1 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 0#) -}
e241046c885b7ecf8f999258e0d8619e
  randomAgent :: MyRandom.Rand Types.Agent
  {- Arity: 1, Strictness: <L,U(U,U,U(U))>m,
     Unfolding: InlineRule (0, True, True)
                World.randomAgent1
                  `cast`
                (Sym (Control.Monad.Trans.State.Strict.N:StateT[0]
                          <System.Random.Mersenne.Pure64.Internal.PureMT>_N
                          <Data.Functor.Identity.Identity>_R
                          <Types.Agent>_N)) -}
f2eed956906eee977550c755936f47ba
  randomAgent1 ::
    System.Random.Mersenne.Pure64.Internal.PureMT
    -> Data.Functor.Identity.Identity
         (Types.Agent, System.Random.Mersenne.Pure64.Internal.PureMT)
  {- Arity: 1, Strictness: <L,U(U,U,U(U))>m, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: System.Random.Mersenne.Pure64.Internal.PureMT) ->
                 case World.$wrandomAgent w of ww { (#,#) ww1 ww2 ->
                 (ww1, ww2)
                   `cast`
                 (Sym (Data.Functor.Identity.N:Identity[0]
                           <(Types.Agent,
                             System.Random.Mersenne.Pure64.Internal.PureMT)>_R)) }) -}
5d4f637aec83daeab268d1344c5a9988
  randomChromosome :: MyRandom.Rand Types.Chromosome
  {- Arity: 1, Strictness: <L,U(U,U,U(U))>m,
     Unfolding: InlineRule (0, True, True)
                World.randomChromosome1
                  `cast`
                (Sym (Control.Monad.Trans.State.Strict.N:StateT[0]
                          <System.Random.Mersenne.Pure64.Internal.PureMT>_N
                          <Data.Functor.Identity.Identity>_R
                          <Types.Chromosome>_N)) -}
53f43fb567c1d2b85f563e620bef41c8
  randomChromosome1 ::
    System.Random.Mersenne.Pure64.Internal.PureMT
    -> Data.Functor.Identity.Identity
         (Types.Chromosome, System.Random.Mersenne.Pure64.Internal.PureMT)
  {- Arity: 1, Strictness: <L,U(U,U,U(U))>m, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: System.Random.Mersenne.Pure64.Internal.PureMT) ->
                 case World.$wrandomChromosome w of ww { (#,#) ww1 ww2 ->
                 (ww1, ww2)
                   `cast`
                 (Sym (Data.Functor.Identity.N:Identity[0]
                           <(Types.Chromosome,
                             System.Random.Mersenne.Pure64.Internal.PureMT)>_R)) }) -}
bb805524735256c3651dc4e7766c67ac
  randomChromosome2 ::
    [Control.Monad.Trans.State.Strict.StateT
       System.Random.Mersenne.Pure64.Internal.PureMT
       Data.Functor.Identity.Identity
       [Types.Locus]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Control.Monad.Trans.State.Strict.StateT
                        System.Random.Mersenne.Pure64.Internal.PureMT
                        Data.Functor.Identity.Identity
                        [Types.Locus])
                   World.randomChromosome6
                     `cast`
                   (Sym (Control.Monad.Trans.State.Strict.N:StateT[0]
                             <System.Random.Mersenne.Pure64.Internal.PureMT>_N
                             <Data.Functor.Identity.Identity>_R
                             <[Types.Locus]>_N))
                   World.randomChromosome3) -}
7432aa0fc8d2eec8ae8b32d33ba96061
  randomChromosome3 ::
    [Control.Monad.Trans.State.Strict.StateT
       System.Random.Mersenne.Pure64.Internal.PureMT
       Data.Functor.Identity.Identity
       [Types.Locus]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Control.Monad.Trans.State.Strict.StateT
                        System.Random.Mersenne.Pure64.Internal.PureMT
                        Data.Functor.Identity.Identity
                        [Types.Locus])
                   World.randomChromosome6
                     `cast`
                   (Sym (Control.Monad.Trans.State.Strict.N:StateT[0]
                             <System.Random.Mersenne.Pure64.Internal.PureMT>_N
                             <Data.Functor.Identity.Identity>_R
                             <[Types.Locus]>_N))
                   World.randomChromosome4) -}
3a90520d06f5a03121224612a9bea974
  randomChromosome4 ::
    [Control.Monad.Trans.State.Strict.StateT
       System.Random.Mersenne.Pure64.Internal.PureMT
       Data.Functor.Identity.Identity
       [Types.Locus]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Control.Monad.Trans.State.Strict.StateT
                        System.Random.Mersenne.Pure64.Internal.PureMT
                        Data.Functor.Identity.Identity
                        [Types.Locus])
                   World.randomChromosome5
                     `cast`
                   (Sym (Control.Monad.Trans.State.Strict.N:StateT[0]
                             <System.Random.Mersenne.Pure64.Internal.PureMT>_N
                             <Data.Functor.Identity.Identity>_R
                             <[Types.Locus]>_N))
                   (GHC.Types.[]
                      @ (Control.Monad.Trans.State.Strict.StateT
                           System.Random.Mersenne.Pure64.Internal.PureMT
                           Data.Functor.Identity.Identity
                           [Types.Locus]))) -}
bafc8405f7c1f3659000d701ce6cca97
  randomChromosome5 ::
    System.Random.Mersenne.Pure64.Internal.PureMT
    -> Data.Functor.Identity.Identity
         ([Types.Locus], System.Random.Mersenne.Pure64.Internal.PureMT)
  {- Arity: 1, Strictness: <L,U>m, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: System.Random.Mersenne.Pure64.Internal.PureMT) ->
                 case World.$wrandomGenes w of ww { (#,#) ww1 ww2 ->
                 (ww1, ww2)
                   `cast`
                 (Sym (Data.Functor.Identity.N:Identity[0]
                           <([Types.Locus],
                             System.Random.Mersenne.Pure64.Internal.PureMT)>_R)) }) -}
6676aab22f0f6a4952610ff2e8a46f9a
  randomChromosome6 ::
    System.Random.Mersenne.Pure64.Internal.PureMT
    -> Data.Functor.Identity.Identity
         ([Types.Locus], System.Random.Mersenne.Pure64.Internal.PureMT)
  {- Arity: 1, Strictness: <L,U>m, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: System.Random.Mersenne.Pure64.Internal.PureMT) ->
                 case World.$wrandomTfbss w of ww { (#,#) ww1 ww2 ->
                 (ww1, ww2)
                   `cast`
                 (Sym (Data.Functor.Identity.N:Identity[0]
                           <([Types.Locus],
                             System.Random.Mersenne.Pure64.Internal.PureMT)>_R)) }) -}
2083cda3956508d64ef0c9273482b737
  randomChromosome_go :: [[Types.Locus]] -> [Types.Locus]
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U> -}
aa943776154960ea0598524a8318282a
  randomChromosome_go1 ::
    [Types.ID]
    -> [Types.Thres] -> [System.Random.Shuffle.Tree Types.Gene]
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><L,1*U> -}
9806aae286ec12be5a62c9379d256f01
  randomChromosome_go2 ::
    [Types.ID]
    -> [Types.Weight] -> [System.Random.Shuffle.Tree Types.Tfbs]
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><L,1*U> -}
1f7deff40545cb868abb5c472d83672a
  randomGenes :: MyRandom.Rand [Types.Locus]
  {- Arity: 1, Strictness: <L,U>m,
     Unfolding: InlineRule (0, True, True)
                World.randomChromosome5
                  `cast`
                (Sym (Control.Monad.Trans.State.Strict.N:StateT[0]
                          <System.Random.Mersenne.Pure64.Internal.PureMT>_N
                          <Data.Functor.Identity.Identity>_R
                          <[Types.Locus]>_N)) -}
9ddd0a2cddb32a0d788c0ee60551c0a0
  randomGenome :: MyRandom.Rand Types.Genome
  {- Arity: 1, Strictness: <L,U(U,U,U(U))>m,
     Unfolding: InlineRule (0, True, True)
                World.randomGenome1
                  `cast`
                (Sym (Control.Monad.Trans.State.Strict.N:StateT[0]
                          <System.Random.Mersenne.Pure64.Internal.PureMT>_N
                          <Data.Functor.Identity.Identity>_R
                          <[Types.Chromosome]>_N)) -}
74f763136d6ab4f1597d8f4c8222bc1e
  randomGenome1 ::
    System.Random.Mersenne.Pure64.Internal.PureMT
    -> Data.Functor.Identity.Identity
         ([Types.Chromosome], System.Random.Mersenne.Pure64.Internal.PureMT)
  {- Arity: 1, Strictness: <L,U(U,U,U(U))>m,
     Unfolding: InlineRule (1, True, False)
                (\ (s1 :: System.Random.Mersenne.Pure64.Internal.PureMT) ->
                 case (World.randomChromosome1 s1)
                        `cast`
                      (Data.Functor.Identity.N:Identity[0]
                           <(Types.Chromosome,
                             System.Random.Mersenne.Pure64.Internal.PureMT)>_R) of wild { (,) a1 s' ->
                 (GHC.Types.:
                    @ Types.Chromosome
                    a1
                    (GHC.Types.[] @ Types.Chromosome),
                  s')
                   `cast`
                 (Sym (Data.Functor.Identity.N:Identity[0]
                           <([Types.Chromosome],
                             System.Random.Mersenne.Pure64.Internal.PureMT)>_R)) }) -}
c628ee5f575b57e34f12b7f437eeaf0f
  randomTfbss :: MyRandom.Rand [Types.Locus]
  {- Arity: 1, Strictness: <L,U>m,
     Unfolding: InlineRule (0, True, True)
                World.randomChromosome6
                  `cast`
                (Sym (Control.Monad.Trans.State.Strict.N:StateT[0]
                          <System.Random.Mersenne.Pure64.Internal.PureMT>_N
                          <Data.Functor.Identity.Identity>_R
                          <[Types.Locus]>_N)) -}
6f67f1d24f1fa4558303601aec22313a
  reduceToGenes :: Types.Genome -> [Types.Gene]
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: (\ (x :: [[Types.Locus]]) ->
                 World.reduceToGenes_go x) -}
18ffd86dc9f522094d92265b39ae4124
  reduceToGenes_go :: [[Types.Locus]] -> [Types.Gene]
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U> -}
41222c07f689bc60298b001c062aedb5
  reduceToTfbss :: Types.Genome -> [Types.Tfbs]
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: (\ (x :: [[Types.Locus]]) ->
                 World.reduceToTfbss_go x) -}
a0430360a9ae5f037e99497b0a93830f
  reduceToTfbss_go :: [[Types.Locus]] -> [Types.Tfbs]
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U> -}
c16092732cb7fc6c4953ad6786171b44
  sameGST :: Types.Agent -> Types.Agent -> GHC.Types.Bool
  {- Arity: 2, Strictness: <S,1*U><L,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ds :: Types.Agent) (ds1 :: Types.Agent) ->
                 case ds of wild {
                   Types.Agent ipv ipv1
                   -> case ds1 of wild1 {
                        Types.Agent ipv2 ipv3
                        -> Data.Map.Base.$fEqMap_$c==
                             @ Types.ID
                             @ Types.GeneState
                             Types.$fEqID
                             Types.$fEqGeneState
                             ipv1
                             ipv3
                        Types.NoAgent -> GHC.Types.False }
                   Types.NoAgent -> GHC.Types.True }) -}
4f80c503ee5a3ccda6bd35be5c59406a
  takeWhileInclusive :: (a -> GHC.Types.Bool) -> [a] -> ([a], [a])
  {- Arity: 2, HasNoCafRefs, Strictness: <L,C(U)><S,1*U>m,
     Unfolding: InlineRule (2, True, False)
                (\ @ a (f :: a -> GHC.Types.Bool) (ls :: [a]) ->
                 World.takeWhileInclusive_takeWhileInclusive'
                   @ a
                   f
                   (GHC.Types.[] @ a, ls)) -}
85b2a7e06cfa3339b9eb0f7b0bd7a06e
  takeWhileInclusive_takeWhileInclusive' ::
    (a -> GHC.Types.Bool) -> ([a], [a]) -> ([a], [a])
  {- Arity: 2, HasNoCafRefs, Strictness: <L,C(U)><S(LS),1*U(U,1*U)>m,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ @ a (w :: a -> GHC.Types.Bool) (w1 :: ([a], [a])) ->
                 case w1 of ww { (,) ww1 ww2 ->
                 case World.$wtakeWhileInclusive'
                        @ a
                        w
                        ww1
                        ww2 of ww3 { (#,#) ww4 ww5 ->
                 (ww4, ww5) } }) -}
2c31300cb724aa584deb7536eebb5d90
  targetExpression :: Types.Env -> Types.ID -> Types.GeneState
  {- Arity: 2, HasNoCafRefs, Strictness: <L,U(U)><S(S),1*U(U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Types.Env) (w1 :: Types.ID) ->
                 case w1 `cast` (Types.N:ID[0]) of ww { GHC.Types.I# ww1 ->
                 World.$wtargetExpression w ww1 }) -}
09a36c70b6a7db8d297f2f3602a525be
  targetGST :: Types.Env -> Types.GeneStateTable
  {- Arity: 1, Strictness: <S(S),1*U(U)>, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Types.Env) ->
                 case w of ww { GHC.Types.I# ww1 -> World.$wtargetGST ww1 }) -}
8c2093fab4615cfadeb15c1d72d150c5
  updateAgent :: Types.Agent -> Types.Agent
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (ds :: Types.Agent) ->
                 case ds of wild {
                   Types.Agent chroms gst
                   -> case gst of gst1 { DEFAULT ->
                      let {
                        newGenome :: Types.Genome
                        = GHC.Base.map
                            @ [Types.Locus]
                            @ [Types.Locus]
                            (World.updateChrom
                               World.locusEffect1 `cast` (Sym (Types.N:Weight[0]))
                               gst1)
                            chroms
                      } in
                      case World.gSTFromGenome_makeGst
                             (Data.Map.Base.Tip @ Types.ID @ Types.GeneState)
                             (World.reduceToGenes_go newGenome) of wild1 {
                        Data.Map.Base.Bin dt ds1 ds2 ds3 ds4
                        -> case dt of wild2 {
                             DEFAULT -> Types.NoAgent 20# -> Types.Agent newGenome wild1 }
                        Data.Map.Base.Tip -> Types.NoAgent } }
                   Types.NoAgent -> Types.NoAgent }) -}
49b7794871c4e8def034b5120b3c4f1c
  updateChrom ::
    Types.Weight
    -> Types.GeneStateTable -> Types.Chromosome -> Types.Chromosome
  {- Arity: 3, HasNoCafRefs, Strictness: <L,U(U)><L,U><S,1*U> -}
7a897ada34cd2b2387a3ab085b6e9a44
  updateGenome ::
    Types.GeneStateTable -> Types.Genome -> Types.Genome
  {- Arity: 2, HasNoCafRefs, Strictness: <L,U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Types.GeneStateTable) (eta :: [Types.Chromosome]) ->
                 GHC.Base.build
                   @ [Types.Locus]
                   (\ @ b1
                      (c :: [Types.Locus] -> b1 -> b1)[OneShot]
                      (n :: b1)[OneShot] ->
                    GHC.Base.foldr
                      @ [Types.Locus]
                      @ b1
                      (GHC.Base.mapFB
                         @ [Types.Locus]
                         @ b1
                         @ [Types.Locus]
                         c
                         (World.updateChrom
                            World.locusEffect1 `cast` (Sym (Types.N:Weight[0]))
                            x))
                      n
                      eta)) -}
7710fb7041a05eb11cc90b158dc7a15c
  updateLoc ::
    Types.Weight
    -> Types.GeneStateTable
    -> Types.Locus
    -> (Types.Weight, Types.Locus)
  {- Arity: 3, HasNoCafRefs, Strictness: <L,U(U)><L,1*U><S,1*U>m,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: Types.Weight)
                   (w1 :: Types.GeneStateTable)
                   (w2 :: Types.Locus) ->
                 case World.$wupdateLoc w w1 w2 of ww { (#,#) ww1 ww2 ->
                 (ww1, ww2) }) -}
"SPEC hammDist" [ALWAYS] forall ($dEq :: GHC.Classes.Eq
                                           (GHC.Types.Int, GHC.Types.Int))
  World.hammDist @ (GHC.Types.Int, GHC.Types.Int) $dEq
  = World.hammDist_$shammDist
"SPEC/World fromList @ ID _" [ALWAYS] forall @ a
                                             ($dOrd :: GHC.Classes.Ord Types.ID)
  Data.Map.Base.fromList @ Types.ID @ a $dOrd = World.$sfromList @ a
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

