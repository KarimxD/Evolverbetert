
==================== FINAL INTERFACE ====================
2017-05-01 15:14:52.591839 UTC

interface Evolverbetert-0.1.0.0-oxgjcqyO3h9h1Y3DYcTQF:World 8002
  interface hash: b3d9c031aea5dddce6ba36c9007d2092
  ABI hash: fae719142ff1d0cc47926353810ce652
  export-list hash: 1e87020408db611578f66aeb540278f6
  orphan hash: 5027707dc8e07f81ff2478a3574ff37d
  flag hash: 60ede7202df718eda107a0d677bc46fc
  sig of: Nothing
  used TH splices: False
  where
exports:
  World.connected
  World.defaultGst
  World.devAg
  World.fitnessAgent
  World.fitnessGST
  World.gSTFromGenome
  World.getGene
  World.getTfbs
  World.goodRandomGenome
  World.groupGeneTfbs
  World.hammDist
  World.hammDistAg
  World.isGene
  World.isTfbs
  World.locusEffect
  World.randomAgent
  World.randomChromosome
  World.randomGenes
  World.randomGenome
  World.randomTfbss
  World.reduceToGenes
  World.reduceToTfbss
  World.sameGST
  World.takeWhileInclusive
  World.targetExpression
  World.targetGST
  World.updateAgent
  World.updateChrom
  World.updateGenome
  World.updateLoc
module dependencies: Misc MyRandom Parameters Types
package dependencies: MonadRandom-0.5.1@MonadRandom-0.5.1-IY6HiWu00vQLARukQW3KMH
                      array-0.5.1.1@array-0.5.1.1 base-4.9.1.0
                      containers-0.5.7.1@containers-0.5.7.1
                      deepseq-1.4.2.0@deepseq-1.4.2.0 ghc-prim-0.5.0.0
                      integer-gmp-1.0.0.1
                      mersenne-random-pure64-0.2.2.0@mersenne-random-pure64-0.2.2.0-560i5rQoI3i9IX3BgSFLBV
                      mtl-2.2.1@mtl-2.2.1-BLKBelFsPB3BoFeSWSOYj6
                      primitive-0.6.1.0@primitive-0.6.1.0-6AbSTw9JXz141LE5p6LGH
                      random-1.1@random-1.1-9tceXaeYIMZ4JrKq20Egog
                      random-shuffle-0.0.4@random-shuffle-0.0.4-97h14tPp7Ru21125sv6IMi
                      split-0.2.3.1@split-0.2.3.1-FWyXC6nhV0H3AfM8IzrEFk
                      time-1.6.0.1@time-1.6.0.1 transformers-0.5.2.0@transformers-0.5.2.0
orphans: Evolverbetert-0.1.0.0-oxgjcqyO3h9h1Y3DYcTQF:MyRandom
         base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
         time-1.6.0.1@time-1.6.0.1:Data.Time.Calendar.Gregorian
         time-1.6.0.1@time-1.6.0.1:Data.Time.Format.Parse
         time-1.6.0.1@time-1.6.0.1:Data.Time.LocalTime.LocalTime
         transformers-0.5.2.0@transformers-0.5.2.0:Control.Monad.Trans.Error
family instance modules: MonadRandom-0.5.1@MonadRandom-0.5.1-IY6HiWu00vQLARukQW3KMH:Control.Monad.Trans.Random.Lazy
                         base-4.9.1.0:Control.Applicative base-4.9.1.0:Data.Complex
                         base-4.9.1.0:Data.Either base-4.9.1.0:Data.Functor.Const
                         base-4.9.1.0:Data.Functor.Identity base-4.9.1.0:Data.List.NonEmpty
                         base-4.9.1.0:Data.Monoid base-4.9.1.0:Data.Semigroup
                         base-4.9.1.0:Data.Type.Equality base-4.9.1.0:Data.Version
                         base-4.9.1.0:Data.Void base-4.9.1.0:GHC.Exts
                         base-4.9.1.0:GHC.Generics base-4.9.1.0:GHC.IO.Exception
                         base-4.9.1.0:GHC.TypeLits
                         containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Set.Base
                         primitive-0.6.1.0@primitive-0.6.1.0-6AbSTw9JXz141LE5p6LGH:Control.Monad.Primitive
import  -/  Misc 26966a5460f11b18001e088f70cf76ac
  exports: 28ae6ccada868e7efb3c96f7ae6d68f9
  valueResultPairs b19265c427d602f9d915a91047adc7f5
import  -/  MyRandom 6dee9bd9efb866e95f63ee556ef06dbe
  exports: ac39067651296e54e6af2d56bdaa576b
  Rand 06a931c974819790dbc40b2dccffa196
  getModifyRand cf23ec2a849e468b2e7d745f0c23c4b7
  getRange bc5d1e4299975812df90bffc86867575
  randomBool 52aeb483b9ac6df85ca12466cb3a5ca3
import  -/  Parameters 60ff55bcb82c2c83af83a8d2acb246b2
  exports: fea0ab185fab0b15ba191f9d3ea960f0
  devTime 657802903748fd53021df5e74eba0193
  maxThres 070125156499cd32e01cfe8969701866
  minThres 1a19d768572f7ec4c8adf7fe42721496
  nrEnv 69d3caeacd6bc6b4fcd08c69259eb1f7
  nrGeneTypes a1c77a0f3df6e651d9a15658687e819f
  nrGeneTypes' e011fbf7decacd58a182c66cc18ab0b2
  nrHouseHold bd80b4c7afa4a5cccf4fdb20e6abc46b
  nrOverlap 6ada1aad63892f064ca87768cba3aa2e
  nrSpecific 83829b96d179c6f27272888987fad966
  selectionPressure af1f06d252a7013bb9d17f1c4cbd2a14
import  -/  Types 553fe5882bac7964d9e18ed5fc1899e3
  exports: f2d3892cae9faa75e4d9e5ce4ff3401f
  Agent 60b09a4470e22147e56c42e0035f87fe
  Agent 4db872eec646ad15f031961699453d7d
  CGene ea527b21dbbed4eaf4515b5bd6300e17
  CTfbs 6f551280d2a6113da1a228f358db5137
  Chromosome 24cfb6cfcc1852ed37afecdf0ad745c4
  Env 3acf42e6b3ff031d4328eeca7f593f33
  GS f27014f9fcd601a90b5d2335c8847a52
  Gene f6a3f11ab63a627039089add273149ba
  Gene db7e187ff2495a3aa6d4abf4d6c779bf
  GeneState 385bd618b8cbce3dec65b0dc93936685
  GeneStateTable 9e77d0240feb1db03b5609bb787daa5d
  Genome 31e3370e16839f7422c62e17856b87c5
  ID 7e0b9a9dfd2784dbee8f381e1c0e5170
  ID 16d6e25ed95d1e87249ca076165ebe74
  Locus 657e65e0e08e728d8f24c605538f3349
  NoAgent 339da968cef368d0f2975264de06a36a
  Tfbs 66713721bbe5cab4288d866c04987130
  Tfbs 9347ef28f2413ea8f008f31ac5268aa5
  Weight fec0f96660f082d9ff826ee5f52d2dd5
  genSt acd5da5347b2efa3f84961488063815d
  geneStateTable 6b9ce6667cb6ef0ceb4e5feb484a2261
  iD 557b1d3b6ce43a73a2b61631b48875c9
import  -/  array-0.5.1.1@array-0.5.1.1:Data.Array.IArray 606f8bb830eb2a88c29c91f27c77f304
import  -/  base-4.9.1.0:Control.Monad a6784c5dab0d75c63dabec5a37843f98
import  -/  base-4.9.1.0:Data.Foldable 3e0b6967a1da89945d0e2d47266337a2
import  -/  base-4.9.1.0:Data.Functor 5ab1dc703df5b482e77efb697833ca3c
import  -/  base-4.9.1.0:Data.List 07ae2acca6538aa0800bd0a993ac6ac1
import  -/  base-4.9.1.0:Data.Maybe d876c4ffe4b3c43755a781e8ad860d88
import  -/  base-4.9.1.0:Data.Traversable 556020d7cf3c4a34a774600512918a37
import  -/  base-4.9.1.0:GHC.Base c4231c43c07e46080a26bf94094c7aa1
import  -/  base-4.9.1.0:GHC.List ab8c4e523e6c479c549d3bcd5fc4a439
import  -/  base-4.9.1.0:GHC.Num 00bfaa7b2f9d6084913c0697a8a49ec8
import  -/  base-4.9.1.0:GHC.Real 82e4e59051a13dba1da63e1e970a69e6
import  -/  base-4.9.1.0:Prelude 22dd289b8469a8fa8dc81cab7b237771
import  -/  containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base d432f6875983131473086af8cb290590
import  -/  containers-0.5.7.1@containers-0.5.7.1:Data.Map.Strict 9d0c0962e53270a0a3fb5cb63723a381
import  -/  ghc-prim-0.5.0.0:GHC.Classes 0bdf3d057a415ec1b84a7b1994efbe47
import  -/  mersenne-random-pure64-0.2.2.0@mersenne-random-pure64-0.2.2.0-560i5rQoI3i9IX3BgSFLBV:System.Random.Mersenne.Pure64.Internal bb3ed118165b97070d684375c016de56
import  -/  mtl-2.2.1@mtl-2.2.1-BLKBelFsPB3BoFeSWSOYj6:Control.Monad.State 749dca8ca0e6625b32091d445bd92b01
import  -/  mtl-2.2.1@mtl-2.2.1-BLKBelFsPB3BoFeSWSOYj6:Control.Monad.State.Class 6d31234b0a911b56412061943d18b89e
import  -/  random-1.1@random-1.1-9tceXaeYIMZ4JrKq20Egog:System.Random b21db0c0ea43dc1ad218556cd0b064c7
import  -/  random-shuffle-0.0.4@random-shuffle-0.0.4-97h14tPp7Ru21125sv6IMi:System.Random.Shuffle cceab7056a27578a61621d120d955aea
import  -/  split-0.2.3.1@split-0.2.3.1-FWyXC6nhV0H3AfM8IzrEFk:Data.List.Split c60198a427bfd51d9fb4562c059ec1d2
d7a3b43088b8c89ce8daf9ebddc11f3e
  $sfromList :: [(Types.ID, a)] -> Data.Map.Base.Map Types.ID a
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ @ a (ds :: [(Types.ID, a)]) ->
                 case ds of wild {
                   [] -> Data.Map.Base.Tip @ Types.ID @ a
                   : ds1 ds2
                   -> case ds1 of wild1 { (,) kx x ->
                      case ds2 of wild2 {
                        []
                        -> case x of x1 { DEFAULT ->
                           case kx `cast` (Types.N:ID[0]) of nt { GHC.Types.I# ipv ->
                           Data.Map.Base.Bin
                             @ Types.ID
                             @ a
                             1#
                             nt `cast` (Sym (Types.N:ID[0]))
                             x1
                             (Data.Map.Base.Tip @ Types.ID @ a)
                             (Data.Map.Base.Tip @ Types.ID @ a) } }
                        : ipv ipv1
                        -> case ipv of wild3 { (,) ky ds3 ->
                           case kx `cast` (Types.N:ID[0]) of wild4 { GHC.Types.I# x1 ->
                           case ky `cast` (Types.N:ID[0]) of wild5 { GHC.Types.I# y ->
                           case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.>=# x1 y) of wild6 {
                             GHC.Types.False
                             -> case x of x0 { DEFAULT ->
                                World.$wpoly_go4
                                  @ a
                                  1#
                                  (Data.Map.Base.Bin
                                     @ Types.ID
                                     @ a
                                     1#
                                     (GHC.Types.I# x1) `cast` (Sym (Types.N:ID[0]))
                                     x0
                                     (Data.Map.Base.Tip @ Types.ID @ a)
                                     (Data.Map.Base.Tip @ Types.ID @ a))
                                  wild2 }
                             GHC.Types.True
                             -> case x of x0 { DEFAULT ->
                                World.$sfromList1
                                  @ a
                                  (Data.Map.Base.Bin
                                     @ Types.ID
                                     @ a
                                     1#
                                     (GHC.Types.I# x1) `cast` (Sym (Types.N:ID[0]))
                                     x0
                                     (Data.Map.Base.Tip @ Types.ID @ a)
                                     (Data.Map.Base.Tip @ Types.ID @ a))
                                  wild2 } } } } } } } }) -}
214407be3f74a81e63bf359af17fb6d1
  $sfromList1 ::
    Data.Map.Base.Map Types.ID a1
    -> [(Types.ID, a1)] -> Data.Map.Base.Map Types.ID a1
  {- Arity: 2, Strictness: <S,1*U><S,1*U> -}
05f8cd1a6e70362cc523bacb0b242408
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module World.$trModule2 World.$trModule1) -}
3d9bb22e41afa1cb415b4d1ae3443d24
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "World"#) -}
56b951381ff72b506c39ed6c62686810
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   "Evolverbetert-0.1.0.0-oxgjcqyO3h9h1Y3DYcTQF"#) -}
74227817c7dcf2c442b7cab83bc9b95c
  $w$sgo1 ::
    (Types.ID -> a1 -> a1 -> a1)
    -> GHC.Prim.Int#
    -> a1
    -> Data.Map.Base.Map Types.ID a1
    -> Data.Map.Base.Map Types.ID a1
  {- Arity: 4, Strictness: <L,1*C1(C1(C1(U)))><L,U><L,U><S,1*U>,
     Inline: [0] -}
39cae9ccb50186b423ebd86c4bd26df6
  $w$sgo4 ::
    GHC.Prim.Int#
    -> a1
    -> Data.Map.Base.Map Types.ID a1
    -> Data.Map.Base.Map Types.ID a1
  {- Arity: 3, Strictness: <L,U><S,1*U><S,1*U>, Inline: [0] -}
ac137bb8557d6fc1ee2f56e2a8d66b47
  $w$shammDist ::
    [(Types.ID, Types.GeneState)]
    -> [(Types.ID, Types.GeneState)] -> GHC.Prim.Int#
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><L,1*U>,
     Inline: [0] -}
5b50cdee02559d0822da4dd267f15a6b
  $wf :: GHC.Prim.Double# -> GHC.Prim.Int# -> GHC.Prim.Double#
  {- Arity: 2, HasNoCafRefs, Strictness: <L,U><S,U>, Inline: [0] -}
f6fc0a4c59f3216d67de7ba9f9e967c3
  $wfitnessGST ::
    GHC.Prim.Int# -> Types.GeneStateTable -> GHC.Prim.Double#
  {- Arity: 2, Strictness: <S,U><L,1*U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#) (w :: Types.GeneStateTable) ->
                 case World.$w$shammDist
                        (Data.Map.Base.toAscList1
                           @ Types.ID
                           @ Types.GeneState
                           (GHC.Types.[] @ (Types.ID, Types.GeneState))
                           (World.$wtargetGST ww))
                        (Data.Map.Base.toAscList
                           @ Types.ID
                           @ Types.GeneState
                           w) of ww1 { DEFAULT ->
                 World.$wf
                   (GHC.Prim.-##
                      1.0##
                      (GHC.Prim./## (GHC.Prim.int2Double# ww1) 20.0##))
                   10# }) -}
6b3b402c484b9a84e6286ea35176ca22
  $wgo ::
    [Types.ID]
    -> [Types.GeneState]
    -> GHC.Prim.Int#
    -> [(Types.ID, Types.GeneState)]
  {- Arity: 3, HasNoCafRefs, Strictness: <S,1*U><L,1*U><L,1*U>,
     Inline: [0] -}
eae937bd5fa33bef2767ba2001ca9c5d
  $wgo1 :: Types.Agent -> GHC.Prim.Int# -> [Types.Agent]
  {- Arity: 2, Strictness: <L,U><S,1*U>, Inline: [0] -}
6b0c8dddba90375c1e57c4dfee16a022
  $wgo2 ::
    [Control.Monad.Trans.State.Strict.StateT
       System.Random.Mersenne.Pure64.Internal.PureMT
       Data.Functor.Identity.Identity
       [Types.Locus]]
    -> System.Random.Mersenne.Pure64.Internal.PureMT
    -> (# [[Types.Locus]],
          System.Random.Mersenne.Pure64.Internal.PureMT #)
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><L,U>, Inline: [0] -}
954c207ee1aa8e1f73423ce58e70d5f9
  $wgoodRandomGenome ::
    System.Random.Mersenne.Pure64.Internal.PureMT
    -> (# Types.Genome,
          System.Random.Mersenne.Pure64.Internal.PureMT #)
  {- Arity: 1, Strictness: <L,U(U,U,U(U))>, Inline: [0] -}
7830d945789609a5ec540d272b8b4a40
  $whammDist :: GHC.Classes.Eq a => [a] -> [a] -> GHC.Prim.Int#
  {- Arity: 3, HasNoCafRefs,
     Strictness: <L,U(A,C(C1(U)))><S,1*U><L,1*U>, Inline: [0] -}
9475decdc479d9c368ce8e9df33676e7
  $whammDistAg :: Types.Env -> Types.Agent -> GHC.Prim.Int#
  {- Arity: 2, Strictness: <L,1*U(U)><S,1*U>, Inline: [0],
     Unfolding: (\ (w :: Types.Env) (w1 :: Types.Agent) ->
                 case w1 of wild {
                   Types.Agent ipv ipv1
                   -> World.$w$shammDist
                        (Data.Map.Base.toAscList1
                           @ Types.ID
                           @ Types.GeneState
                           (GHC.Types.[] @ (Types.ID, Types.GeneState))
                           (World.targetGST w))
                        (Data.Map.Base.toAscList @ Types.ID @ Types.GeneState ipv1)
                   Types.NoAgent -> 20# }) -}
92fb3b85f90e87060035316b6d208651
  $wloop ::
    GHC.Prim.Int#
    -> System.Random.Mersenne.Pure64.Internal.PureMT
    -> (# [Types.Thres],
          System.Random.Mersenne.Pure64.Internal.PureMT #)
  {- Arity: 2, Strictness: <S,U><L,U>, Inline: [0] -}
979f046d475c8805050433483812b46f
  $wloop1 ::
    GHC.Prim.Int#
    -> System.Random.Mersenne.Pure64.Internal.PureMT
    -> (# [Types.Weight],
          System.Random.Mersenne.Pure64.Internal.PureMT #)
  {- Arity: 2, HasNoCafRefs, Strictness: <S,U><L,U>, Inline: [0] -}
33367cc4b9298efa5325b93a02098f86
  $wpoly_go10 ::
    GHC.Prim.Int# -> Data.Map.Base.Map Types.ID a -> GHC.Base.Maybe a
  {- Arity: 2, HasNoCafRefs, Strictness: <L,U><S,1*U>, Inline: [0] -}
e560bfc73f768dc001ade66dbcce0991
  $wpoly_go4 ::
    GHC.Prim.Int#
    -> Data.Map.Base.Map Types.ID a
    -> [(Types.ID, a)]
    -> Data.Map.Base.Map Types.ID a
  {- Arity: 3, Strictness: <L,U><S,1*U><S,1*U>, Inline: [0] -}
dc24afab6b1b79100d992c44ea52731f
  $wrandomAgent ::
    System.Random.Mersenne.Pure64.Internal.PureMT
    -> (# Types.Agent, System.Random.Mersenne.Pure64.Internal.PureMT #)
  {- Arity: 1, Strictness: <L,U(U,U,U(U))>, Inline: [0] -}
9187687787234c526b01f52ac659db2e
  $wrandomChromosome ::
    System.Random.Mersenne.Pure64.Internal.PureMT
    -> (# Types.Chromosome,
          System.Random.Mersenne.Pure64.Internal.PureMT #)
  {- Arity: 1, Strictness: <L,U(U,U,U(U))>, Inline: [0],
     Unfolding: (\ (w :: System.Random.Mersenne.Pure64.Internal.PureMT) ->
                 case World.$wgo2
                        World.randomChromosome2
                        (case w of wild { System.Random.Mersenne.Pure64.Internal.PureMT dt dt1 nxt ->
                         case GHC.Prim.tagToEnum#
                                @ GHC.Types.Bool
                                (GHC.Prim.<# dt1 311#) of wild1 {
                           GHC.Types.False
                           -> case nxt of dt2 { System.Random.Mersenne.Pure64.Internal.MTBlock dt3 ->
                              System.Random.Mersenne.Pure64.Internal.PureMT
                                dt3
                                0#
                                (System.Random.Mersenne.Pure64.MTBlock.nextBlock dt2) }
                           GHC.Types.True
                           -> System.Random.Mersenne.Pure64.Internal.PureMT
                                dt
                                (GHC.Prim.+# dt1 1#)
                                nxt } }) of ww { (#,#) ww1 ww2 ->
                 (# let {
                      a1 :: [Types.Locus] = World.randomChromosome_go ww1
                    } in
                    case GHC.List.$wlenAcc @ Types.Locus a1 0# of ww3 { DEFAULT ->
                    case System.Random.Shuffle.shuffle'1
                           @ System.Random.Mersenne.Pure64.Internal.PureMT
                           (System.Random.Shuffle.$wrseq'
                              @ System.Random.Mersenne.Pure64.Internal.PureMT
                              MyRandom.$fRandomGenPureMT
                              (GHC.Prim.-# ww3 1#)
                              w) of ww4 { (#,#) ww5 ww6 ->
                    System.Random.Shuffle.shuffle1
                      @ Types.Locus
                      (System.Random.Shuffle.shuffle_x
                         @ Types.Locus
                         (GHC.Base.map
                            @ Types.Locus
                            @ (System.Random.Shuffle.Tree Types.Locus)
                            (System.Random.Shuffle.$WLeaf @ Types.Locus)
                            a1))
                      ww5 } },
                    ww2 #) }) -}
2dcd755771f6ba552ce0b7b324e32b78
  $wrandomGenes ::
    System.Random.Mersenne.Pure64.Internal.PureMT
    -> (# [Types.Locus],
          System.Random.Mersenne.Pure64.Internal.PureMT #)
  {- Arity: 1, Strictness: <L,U>, Inline: [0],
     Unfolding: (\ (w :: System.Random.Mersenne.Pure64.Internal.PureMT) ->
                 case World.$wloop 20# w of ww { (#,#) ww1 ww2 ->
                 (# case System.Random.Shuffle.shuffle'1
                           @ System.Random.Mersenne.Pure64.Internal.PureMT
                           (System.Random.Shuffle.$wrseq'
                              @ System.Random.Mersenne.Pure64.Internal.PureMT
                              MyRandom.$fRandomGenPureMT
                              19#
                              ww2) of ww3 { (#,#) ww4 ww5 ->
                    GHC.Base.map
                      @ Types.Gene
                      @ Types.Locus
                      Types.CGene
                      (System.Random.Shuffle.shuffle1
                         @ Types.Gene
                         (System.Random.Shuffle.shuffle_x
                            @ Types.Gene
                            (World.randomChromosome_go1
                               World.fitnessGST3 `cast` ([Sym (Types.N:ID[0])])_R
                               (System.Random.Shuffle.shuffle1
                                  @ Types.Thres
                                  (System.Random.Shuffle.shuffle_x
                                     @ Types.Thres
                                     (GHC.Base.map
                                        @ Types.Thres
                                        @ (System.Random.Shuffle.Tree Types.Thres)
                                        (System.Random.Shuffle.$WLeaf @ Types.Thres)
                                        ww1))
                                  ww4)))
                         ww4) },
                    case ww2 of wild { System.Random.Mersenne.Pure64.Internal.PureMT dt dt1 nxt ->
                    case GHC.Prim.tagToEnum#
                           @ GHC.Types.Bool
                           (GHC.Prim.<# dt1 311#) of wild1 {
                      GHC.Types.False
                      -> case nxt of dt2 { System.Random.Mersenne.Pure64.Internal.MTBlock dt3 ->
                         System.Random.Mersenne.Pure64.Internal.PureMT
                           dt3
                           0#
                           (System.Random.Mersenne.Pure64.MTBlock.nextBlock dt2) }
                      GHC.Types.True
                      -> System.Random.Mersenne.Pure64.Internal.PureMT
                           dt
                           (GHC.Prim.+# dt1 1#)
                           nxt } } #) }) -}
cde46ca2e174d35a686fc19a097bddea
  $wrandomTfbss ::
    System.Random.Mersenne.Pure64.Internal.PureMT
    -> (# [Types.Locus],
          System.Random.Mersenne.Pure64.Internal.PureMT #)
  {- Arity: 1, Strictness: <L,U>, Inline: [0],
     Unfolding: (\ (w :: System.Random.Mersenne.Pure64.Internal.PureMT) ->
                 case World.$wloop1 20# w of ww { (#,#) ww1 ww2 ->
                 (# case System.Random.Shuffle.shuffle'1
                           @ System.Random.Mersenne.Pure64.Internal.PureMT
                           (System.Random.Shuffle.$wrseq'
                              @ System.Random.Mersenne.Pure64.Internal.PureMT
                              MyRandom.$fRandomGenPureMT
                              19#
                              ww2) of ww3 { (#,#) ww4 ww5 ->
                    GHC.Base.map
                      @ Types.Tfbs
                      @ Types.Locus
                      Types.CTfbs
                      (System.Random.Shuffle.shuffle1
                         @ Types.Tfbs
                         (System.Random.Shuffle.shuffle_x
                            @ Types.Tfbs
                            (World.randomChromosome_go2
                               World.fitnessGST3 `cast` ([Sym (Types.N:ID[0])])_R
                               (System.Random.Shuffle.shuffle1
                                  @ Types.Weight
                                  (System.Random.Shuffle.shuffle_x
                                     @ Types.Weight
                                     (GHC.Base.map
                                        @ Types.Weight
                                        @ (System.Random.Shuffle.Tree Types.Weight)
                                        (System.Random.Shuffle.$WLeaf @ Types.Weight)
                                        ww1))
                                  ww4)))
                         ww4) },
                    case ww2 of wild { System.Random.Mersenne.Pure64.Internal.PureMT dt dt1 nxt ->
                    case GHC.Prim.tagToEnum#
                           @ GHC.Types.Bool
                           (GHC.Prim.<# dt1 311#) of wild1 {
                      GHC.Types.False
                      -> case nxt of dt2 { System.Random.Mersenne.Pure64.Internal.MTBlock dt3 ->
                         System.Random.Mersenne.Pure64.Internal.PureMT
                           dt3
                           0#
                           (System.Random.Mersenne.Pure64.MTBlock.nextBlock dt2) }
                      GHC.Types.True
                      -> System.Random.Mersenne.Pure64.Internal.PureMT
                           dt
                           (GHC.Prim.+# dt1 1#)
                           nxt } } #) }) -}
d6a736dc2be323321618f127be346607
  $wtakeWhileInclusive' ::
    (a -> GHC.Types.Bool) -> [a] -> [a] -> (# [a], [a] #)
  {- Arity: 3, HasNoCafRefs, Strictness: <L,C(U)><L,U><S,1*U>,
     Inline: [0] -}
7ab1e5fe0cbeb641a6724a55b2370312
  $wtargetExpression :: Types.Env -> GHC.Prim.Int# -> Types.GeneState
  {- Arity: 2, HasNoCafRefs, Strictness: <L,U(U)><S,U>, Inline: [0],
     Unfolding: (\ (w :: Types.Env) (ww :: GHC.Prim.Int#) ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.<# ww 8#) of wild {
                   GHC.Types.False
                   -> case w of wild1 { GHC.Types.I# y ->
                      case GHC.Classes.modInt#
                             (GHC.Prim.-# (GHC.Prim.-# ww 8#) y)
                             2# of ww2 {
                        DEFAULT -> GHC.Types.False `cast` (Sym (Types.N:GeneState[0]))
                        0# -> GHC.Types.True `cast` (Sym (Types.N:GeneState[0])) } }
                   GHC.Types.True
                   -> GHC.Types.True `cast` (Sym (Types.N:GeneState[0])) }) -}
13ade227f3f6bc7232ee4a182b2967de
  $wtargetGST :: GHC.Prim.Int# -> Types.GeneStateTable
  {- Arity: 1, Strictness: <S,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#) ->
                 case ww of ds {
                   DEFAULT
                   -> letrec {
                        $wgo5 :: [Types.ID]
                                 -> GHC.Prim.Int# -> [(Types.ID, Types.GeneState)]
                          {- Arity: 2, Strictness: <S,1*U><L,1*U>, Inline: [0] -}
                        = \ (w :: [Types.ID]) (ww1 :: GHC.Prim.Int#) ->
                          case w of wild {
                            [] -> GHC.Types.[] @ (Types.ID, Types.GeneState)
                            : y ys
                            -> case ww1 of ds1 {
                                 DEFAULT
                                 -> GHC.Types.:
                                      @ (Types.ID, Types.GeneState)
                                      (y,
                                       case y `cast` (Types.N:ID[0]) of ww2 { GHC.Types.I# ww3 ->
                                       case GHC.Prim.tagToEnum#
                                              @ GHC.Types.Bool
                                              (GHC.Prim.<# ww3 8#) of wild1 {
                                         GHC.Types.False
                                         -> case GHC.Classes.modInt#
                                                   (GHC.Prim.-# (GHC.Prim.-# ww3 8#) ds)
                                                   2# of ww4 {
                                              DEFAULT
                                              -> GHC.Types.False `cast` (Sym (Types.N:GeneState[0]))
                                              0#
                                              -> GHC.Types.True
                                                   `cast`
                                                 (Sym (Types.N:GeneState[0])) }
                                         GHC.Types.True
                                         -> GHC.Types.True `cast` (Sym (Types.N:GeneState[0])) } })
                                      ($wgo5 ys (GHC.Prim.-# ds1 1#))
                                 1#
                                 -> GHC.Types.:
                                      @ (Types.ID, Types.GeneState)
                                      (y,
                                       case y `cast` (Types.N:ID[0]) of ww2 { GHC.Types.I# ww3 ->
                                       case GHC.Prim.tagToEnum#
                                              @ GHC.Types.Bool
                                              (GHC.Prim.<# ww3 8#) of wild1 {
                                         GHC.Types.False
                                         -> case GHC.Classes.modInt#
                                                   (GHC.Prim.-# (GHC.Prim.-# ww3 8#) ds)
                                                   2# of ww4 {
                                              DEFAULT
                                              -> GHC.Types.False `cast` (Sym (Types.N:GeneState[0]))
                                              0#
                                              -> GHC.Types.True
                                                   `cast`
                                                 (Sym (Types.N:GeneState[0])) }
                                         GHC.Types.True
                                         -> GHC.Types.True `cast` (Sym (Types.N:GeneState[0])) } })
                                      (GHC.Types.[] @ (Types.ID, Types.GeneState)) } }
                      } in
                      World.$sfromList
                        @ Types.GeneState
                        ($wgo5 World.defaultGst2 `cast` ([Sym (Types.N:ID[0])])_R 20#)
                   0# -> World.fitnessGST5
                   1# -> World.fitnessGST1 }) -}
5eafa275741c181150d77ae2ffb286fa
  $wupdateLoc ::
    Types.Weight
    -> Types.GeneStateTable
    -> Types.Locus
    -> (# Types.Weight, Types.Locus #)
  {- Arity: 3, HasNoCafRefs, Strictness: <L,U(U)><L,1*U><S,1*U>,
     Inline: [0],
     Unfolding: (\ (w :: Types.Weight)
                   (w1 :: Types.GeneStateTable)
                   (w2 :: Types.Locus) ->
                 case w2 of wild {
                   Types.Transposon -> (# w, Types.Transposon #)
                   Types.CGene gen
                   -> case gen of wild1 { Types.Gene i t st ->
                      (# World.locusEffect1 `cast` (Sym (Types.N:Weight[0])),
                         Types.CGene
                           (Types.Gene
                              i
                              t
                              (case w `cast` (Types.N:Weight[0]) of wild2 { GHC.Types.I# i1 ->
                               case t `cast` (Types.N:Thres[0]) of wild3 { GHC.Types.I# i2 ->
                               case GHC.Integer.Type.ltInteger#
                                      (GHC.Integer.Type.smallInteger i1)
                                      (GHC.Integer.Type.smallInteger i2) of wild4 { DEFAULT ->
                               case GHC.Prim.tagToEnum# @ GHC.Types.Bool wild4 of wild5 {
                                 GHC.Types.False
                                 -> case GHC.Integer.Type.eqInteger#
                                           (GHC.Integer.Type.smallInteger i1)
                                           (GHC.Integer.Type.smallInteger i2) of wild6 { DEFAULT ->
                                    case GHC.Prim.tagToEnum# @ GHC.Types.Bool wild6 of wild7 {
                                      GHC.Types.False
                                      -> GHC.Types.True `cast` (Sym (Types.N:GeneState[0]))
                                      GHC.Types.True -> st } }
                                 GHC.Types.True
                                 -> GHC.Types.False
                                      `cast`
                                    (Sym (Types.N:GeneState[0])) } } } })) #) }
                   Types.CTfbs ds
                   -> case ds of wild1 { Types.Tfbs i w3 ->
                      case i `cast` (Types.N:ID[0]) of ww { GHC.Types.I# ww1 ->
                      case World.$wpoly_go10 @ Types.GeneState ww1 w1 of wild2 {
                        GHC.Base.Nothing -> (# w, wild #)
                        GHC.Base.Just a1
                        -> case a1 `cast` (Types.N:GeneState[0]) of wild3 {
                             GHC.Types.False -> (# w, wild #)
                             GHC.Types.True
                             -> (# (GHC.Num.$fNumInt_$c+
                                      w `cast` (Types.N:Weight[0])
                                      w3 `cast` (Types.N:Weight[0]))
                                     `cast`
                                   (Sym (Types.N:Weight[0])),
                                   wild #) } } } } }) -}
923052493fba4ed7e04db7bd80a09ba2
  connected :: Types.Genome -> GHC.Types.Bool
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: InlineRule (0, True, True)
                World.connected1
                  `cast`
                (<[[Types.Locus]]>_R ->_R Data.Monoid.N:All[0]) -}
07422a77542079b68d622b8534fdfb0a
  connected1 :: [[Types.Locus]] -> Data.Monoid.All
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: (\ (x :: [[Types.Locus]]) ->
                 World.connected_go1
                   (GHC.Base.map
                      @ [Types.Locus]
                      @ GHC.Types.Int
                      (GHC.List.length @ Types.Locus)
                      (World.groupGeneTfbs (World.connected_go x)))) -}
eb8c5c7c395ca67abc9f18750051e0aa
  connected_go :: [[Types.Locus]] -> [Types.Locus]
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U> -}
174de7be6210dd1d93a122a9afe4fa10
  connected_go1 :: [GHC.Types.Int] -> Data.Monoid.All
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U> -}
b24ba51d05b2fd455fa26d548df348af
  defaultGst :: Types.GeneStateTable
  {- Unfolding: (World.$sfromList
                   @ Types.GeneState
                   World.defaultGst1) -}
676b5ed37117337ee9ec86927bc93812
  defaultGst1 :: [(Types.ID, Types.GeneState)]
  {- Unfolding: (World.$wgo
                   World.defaultGst2 `cast` ([Sym (Types.N:ID[0])])_R
                   World.defaultGst_xs
                   20#) -}
f699b4c294bb9975c3e82bb686c6d805
  defaultGst2 :: [GHC.Types.Int]
  {- Unfolding: (GHC.Enum.eftInt 0# 9223372036854775807#) -}
ef401eef3a524025e33931587a7b5b4e
  defaultGst_xs :: [Types.GeneState]
  {- HasNoCafRefs -}
3c7d87a83b367dd757a782d7b119c6bd
  devAg :: Types.Agent -> Types.Agent
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ (x :: Types.Agent) ->
                 World.devAg_takeUntilSame (World.$wgo1 x 20#)) -}
eaf85311d7795c0c54ea25f256e96b85
  devAg_takeUntilSame :: [Types.Agent] -> Types.Agent
  {- Arity: 1, Strictness: <S,1*U> -}
45c7feb2545c88cffbb51258423943f8
  fitnessAgent :: Types.Env -> Types.Agent -> GHC.Types.Double
  {- Arity: 2, Strictness: <L,1*U(U)><S,1*U>m,
     Unfolding: InlineRule (2, True, False)
                (\ (e :: Types.Env) (ds :: Types.Agent) ->
                 case ds of wild {
                   Types.Agent ds1 gst -> World.fitnessGST e gst
                   Types.NoAgent -> World.fitnessAgent1 }) -}
a7edefbf9b6de369206872699b1afa1a
  fitnessAgent1 :: GHC.Types.Double
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.D# 0.0##) -}
7c17f00934a58930540995477180b314
  fitnessGST :: Types.Env -> Types.GeneStateTable -> GHC.Types.Double
  {- Arity: 2, Strictness: <S(S),1*U(U)><L,1*U>m, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Types.Env) (w1 :: Types.GeneStateTable) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case World.$wfitnessGST ww1 w1 of ww2 { DEFAULT ->
                 GHC.Types.D# ww2 } }) -}
2182d40ea81c1d96fbbffacd1560ef36
  fitnessGST1 :: Types.GeneStateTable
  {- Unfolding: (World.$sfromList
                   @ Types.GeneState
                   World.fitnessGST2) -}
3534e01fd6a21784d4ba2aa1c4a2668e
  fitnessGST2 :: [(Types.ID, Types.GeneState)]
  {- Unfolding: (GHC.Base.map
                   @ Types.ID
                   @ (Types.ID, Types.GeneState)
                   World.fitnessGST4
                   World.fitnessGST3 `cast` ([Sym (Types.N:ID[0])])_R) -}
8f8d618e11b138f575955ea35888d682
  fitnessGST3 :: [GHC.Types.Int]
  {- Unfolding: (GHC.Enum.eftInt 0# 19#) -}
59310ce213520d74d2ab39dff9f1dc0d
  fitnessGST4 :: Types.ID -> (Types.ID, Types.GeneState)
  {- Arity: 1, HasNoCafRefs,
     Unfolding: (\ (x :: Types.ID) ->
                 (x,
                  case x `cast` (Types.N:ID[0]) of ww { GHC.Types.I# ww1 ->
                  case GHC.Prim.tagToEnum#
                         @ GHC.Types.Bool
                         (GHC.Prim.<# ww1 8#) of wild {
                    GHC.Types.False
                    -> case GHC.Classes.modInt#
                              (GHC.Prim.-# (GHC.Prim.-# ww1 8#) 1#)
                              2# of ww2 {
                         DEFAULT -> GHC.Types.False `cast` (Sym (Types.N:GeneState[0]))
                         0# -> GHC.Types.True `cast` (Sym (Types.N:GeneState[0])) }
                    GHC.Types.True
                    -> GHC.Types.True `cast` (Sym (Types.N:GeneState[0])) } })) -}
4efbdb74838f53aef0f7a237e0651dfe
  fitnessGST5 :: Types.GeneStateTable
  {- Unfolding: (World.$sfromList
                   @ Types.GeneState
                   World.fitnessGST6) -}
629bee87e62d1e3ec8a5ccc6af9c23c0
  fitnessGST6 :: [(Types.ID, Types.GeneState)]
  {- Unfolding: (GHC.Base.map
                   @ Types.ID
                   @ (Types.ID, Types.GeneState)
                   World.fitnessGST7
                   World.fitnessGST3 `cast` ([Sym (Types.N:ID[0])])_R) -}
cf6955f9e5237e299dd689969e52a882
  fitnessGST7 :: Types.ID -> (Types.ID, Types.GeneState)
  {- Arity: 1, HasNoCafRefs,
     Unfolding: (\ (x :: Types.ID) ->
                 (x,
                  case x `cast` (Types.N:ID[0]) of ww { GHC.Types.I# ww1 ->
                  case GHC.Prim.tagToEnum#
                         @ GHC.Types.Bool
                         (GHC.Prim.<# ww1 8#) of wild {
                    GHC.Types.False
                    -> case GHC.Classes.modInt# (GHC.Prim.-# ww1 8#) 2# of ww2 {
                         DEFAULT -> GHC.Types.False `cast` (Sym (Types.N:GeneState[0]))
                         0# -> GHC.Types.True `cast` (Sym (Types.N:GeneState[0])) }
                    GHC.Types.True
                    -> GHC.Types.True `cast` (Sym (Types.N:GeneState[0])) } })) -}
6e4d0dddfad141c74fcff0aea3d82327
  gSTFromGenome :: Types.Genome -> Types.GeneStateTable
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (x :: Types.Genome) ->
                 World.gSTFromGenome_go1
                   (World.gSTFromGenome_go x)
                   (Data.Map.Base.Tip @ Types.ID @ Types.GeneState)) -}
64c4eeb42ded35a674833d8f1f2d9753
  gSTFromGenome_go :: [[Types.Locus]] -> [Types.Gene]
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U> -}
4d3dbc624a31fde563acda7236d72442
  gSTFromGenome_go1 ::
    [Types.Gene]
    -> Data.Map.Base.Map Types.ID Types.GeneState
    -> Data.Map.Base.Map Types.ID Types.GeneState
  {- Arity: 2, Strictness: <S,1*U><S,1*U> -}
17f2956682781a662723272509d87bc8
  getGene :: Types.Locus -> GHC.Base.Maybe Types.Gene
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Types.Locus) ->
                 case ds of wild {
                   DEFAULT -> GHC.Base.Nothing @ Types.Gene
                   Types.CGene g -> GHC.Base.Just @ Types.Gene g }) -}
58cfb3e135c98b58fb00984713e8fdc9
  getTfbs :: Types.Locus -> GHC.Base.Maybe Types.Tfbs
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Types.Locus) ->
                 case ds of wild {
                   DEFAULT -> GHC.Base.Nothing @ Types.Tfbs
                   Types.CTfbs t -> GHC.Base.Just @ Types.Tfbs t }) -}
441c3481f89d8dff597c5e3e36c3ad0d
  goodRandomGenome :: MyRandom.Rand Types.Genome
  {- Arity: 1, Strictness: <L,U(U,U,U(U))>m,
     Unfolding: InlineRule (0, True, True)
                World.goodRandomGenome1
                  `cast`
                (Sym (Control.Monad.Trans.State.Strict.N:StateT[0]
                          <System.Random.Mersenne.Pure64.Internal.PureMT>_N
                          <Data.Functor.Identity.Identity>_R
                          <Types.Genome>_N)) -}
92dbb366727f715fac2eee1eca27a24f
  goodRandomGenome1 ::
    System.Random.Mersenne.Pure64.Internal.PureMT
    -> Data.Functor.Identity.Identity
         (Types.Genome, System.Random.Mersenne.Pure64.Internal.PureMT)
  {- Arity: 1, Strictness: <L,U(U,U,U(U))>m, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: System.Random.Mersenne.Pure64.Internal.PureMT) ->
                 case World.$wgoodRandomGenome w of ww { (#,#) ww1 ww2 ->
                 (ww1, ww2)
                   `cast`
                 (Sym (Data.Functor.Identity.N:Identity[0]
                           <(Types.Genome,
                             System.Random.Mersenne.Pure64.Internal.PureMT)>_R)) }) -}
575727ede210e68aa4837b31459ad867
  groupGeneTfbs :: [Types.Locus] -> [[Types.Locus]]
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U> -}
b486491740f24bebbdf3fd98380cdef8
  hammDist :: GHC.Classes.Eq a => [a] -> [a] -> GHC.Types.Int
  {- Arity: 3, HasNoCafRefs,
     Strictness: <L,U(A,C(C1(U)))><S,1*U><L,1*U>m, Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ @ a (w :: GHC.Classes.Eq a) (w1 :: [a]) (w2 :: [a]) ->
                 case World.$whammDist @ a w w1 w2 of ww { DEFAULT ->
                 GHC.Types.I# ww }) -}
7067b2060c4834b04013305ad5363662
  hammDistAg :: Types.Env -> Types.Agent -> GHC.Types.Int
  {- Arity: 2, Strictness: <L,1*U(U)><S,1*U>m, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Types.Env) (w1 :: Types.Agent) ->
                 case World.$whammDistAg w w1 of ww { DEFAULT ->
                 GHC.Types.I# ww }) -}
1ee697371a5a4ef46b9da4eb21606cc4
  isGene :: Types.Locus -> GHC.Types.Bool
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Types.Locus) ->
                 case ds of wild {
                   DEFAULT -> GHC.Types.False Types.CGene ds1 -> GHC.Types.True }) -}
547a592536186814cb54493c3996f828
  isTfbs :: Types.Locus -> GHC.Types.Bool
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Types.Locus) ->
                 case ds of wild {
                   DEFAULT -> GHC.Types.False Types.CTfbs ds1 -> GHC.Types.True }) -}
6da0fcc60e1309a78e269943aac83488
  locusEffect :: Types.Locus -> Types.GeneStateTable -> Types.Weight
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><L,1*U>,
     Unfolding: (\ (ds :: Types.Locus) (gst :: Types.GeneStateTable) ->
                 case ds of wild {
                   DEFAULT -> World.locusEffect1 `cast` (Sym (Types.N:Weight[0]))
                   Types.CTfbs ds1
                   -> case ds1 of wild1 { Types.Tfbs i w ->
                      case i `cast` (Types.N:ID[0]) of ww { GHC.Types.I# ww1 ->
                      case World.$wpoly_go10 @ Types.GeneState ww1 gst of wild2 {
                        GHC.Base.Nothing
                        -> World.locusEffect1 `cast` (Sym (Types.N:Weight[0]))
                        GHC.Base.Just a1
                        -> case a1 `cast` (Types.N:GeneState[0]) of wild3 {
                             GHC.Types.False
                             -> World.locusEffect1 `cast` (Sym (Types.N:Weight[0]))
                             GHC.Types.True -> w } } } } }) -}
078c56cd7a19d4abcfdf0f19406a7329
  locusEffect1 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 0#) -}
821e646829c609c27331e0d347fee160
  randomAgent :: MyRandom.Rand Types.Agent
  {- Arity: 1, Strictness: <L,U(U,U,U(U))>m,
     Unfolding: InlineRule (0, True, True)
                World.randomAgent1
                  `cast`
                (Sym (Control.Monad.Trans.State.Strict.N:StateT[0]
                          <System.Random.Mersenne.Pure64.Internal.PureMT>_N
                          <Data.Functor.Identity.Identity>_R
                          <Types.Agent>_N)) -}
bec1e981ac7d62458d5751737686beea
  randomAgent1 ::
    System.Random.Mersenne.Pure64.Internal.PureMT
    -> Data.Functor.Identity.Identity
         (Types.Agent, System.Random.Mersenne.Pure64.Internal.PureMT)
  {- Arity: 1, Strictness: <L,U(U,U,U(U))>m, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: System.Random.Mersenne.Pure64.Internal.PureMT) ->
                 case World.$wrandomAgent w of ww { (#,#) ww1 ww2 ->
                 (ww1, ww2)
                   `cast`
                 (Sym (Data.Functor.Identity.N:Identity[0]
                           <(Types.Agent,
                             System.Random.Mersenne.Pure64.Internal.PureMT)>_R)) }) -}
9722c0ee3098a659bb7c40d45eb963cb
  randomChromosome :: MyRandom.Rand Types.Chromosome
  {- Arity: 1, Strictness: <L,U(U,U,U(U))>m,
     Unfolding: InlineRule (0, True, True)
                World.randomChromosome1
                  `cast`
                (Sym (Control.Monad.Trans.State.Strict.N:StateT[0]
                          <System.Random.Mersenne.Pure64.Internal.PureMT>_N
                          <Data.Functor.Identity.Identity>_R
                          <Types.Chromosome>_N)) -}
ccc6aa829eec15addfb982517406c57f
  randomChromosome1 ::
    System.Random.Mersenne.Pure64.Internal.PureMT
    -> Data.Functor.Identity.Identity
         (Types.Chromosome, System.Random.Mersenne.Pure64.Internal.PureMT)
  {- Arity: 1, Strictness: <L,U(U,U,U(U))>m, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: System.Random.Mersenne.Pure64.Internal.PureMT) ->
                 case World.$wrandomChromosome w of ww { (#,#) ww1 ww2 ->
                 (ww1, ww2)
                   `cast`
                 (Sym (Data.Functor.Identity.N:Identity[0]
                           <(Types.Chromosome,
                             System.Random.Mersenne.Pure64.Internal.PureMT)>_R)) }) -}
616b7526ca01c7e42fc883c47121cb00
  randomChromosome2 ::
    [Control.Monad.Trans.State.Strict.StateT
       System.Random.Mersenne.Pure64.Internal.PureMT
       Data.Functor.Identity.Identity
       [Types.Locus]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Control.Monad.Trans.State.Strict.StateT
                        System.Random.Mersenne.Pure64.Internal.PureMT
                        Data.Functor.Identity.Identity
                        [Types.Locus])
                   World.randomChromosome6
                     `cast`
                   (Sym (Control.Monad.Trans.State.Strict.N:StateT[0]
                             <System.Random.Mersenne.Pure64.Internal.PureMT>_N
                             <Data.Functor.Identity.Identity>_R
                             <[Types.Locus]>_N))
                   World.randomChromosome3) -}
5ccb0f0bff8d6456280a3a2930791f63
  randomChromosome3 ::
    [Control.Monad.Trans.State.Strict.StateT
       System.Random.Mersenne.Pure64.Internal.PureMT
       Data.Functor.Identity.Identity
       [Types.Locus]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Control.Monad.Trans.State.Strict.StateT
                        System.Random.Mersenne.Pure64.Internal.PureMT
                        Data.Functor.Identity.Identity
                        [Types.Locus])
                   World.randomChromosome6
                     `cast`
                   (Sym (Control.Monad.Trans.State.Strict.N:StateT[0]
                             <System.Random.Mersenne.Pure64.Internal.PureMT>_N
                             <Data.Functor.Identity.Identity>_R
                             <[Types.Locus]>_N))
                   World.randomChromosome4) -}
1cb98f6972b204ab5b26862ebfaff04e
  randomChromosome4 ::
    [Control.Monad.Trans.State.Strict.StateT
       System.Random.Mersenne.Pure64.Internal.PureMT
       Data.Functor.Identity.Identity
       [Types.Locus]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Control.Monad.Trans.State.Strict.StateT
                        System.Random.Mersenne.Pure64.Internal.PureMT
                        Data.Functor.Identity.Identity
                        [Types.Locus])
                   World.randomChromosome5
                     `cast`
                   (Sym (Control.Monad.Trans.State.Strict.N:StateT[0]
                             <System.Random.Mersenne.Pure64.Internal.PureMT>_N
                             <Data.Functor.Identity.Identity>_R
                             <[Types.Locus]>_N))
                   (GHC.Types.[]
                      @ (Control.Monad.Trans.State.Strict.StateT
                           System.Random.Mersenne.Pure64.Internal.PureMT
                           Data.Functor.Identity.Identity
                           [Types.Locus]))) -}
dda4d42dfb189ae5f5fbcf1e67c8dde8
  randomChromosome5 ::
    System.Random.Mersenne.Pure64.Internal.PureMT
    -> Data.Functor.Identity.Identity
         ([Types.Locus], System.Random.Mersenne.Pure64.Internal.PureMT)
  {- Arity: 1, Strictness: <L,U>m, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: System.Random.Mersenne.Pure64.Internal.PureMT) ->
                 case World.$wrandomGenes w of ww { (#,#) ww1 ww2 ->
                 (ww1, ww2)
                   `cast`
                 (Sym (Data.Functor.Identity.N:Identity[0]
                           <([Types.Locus],
                             System.Random.Mersenne.Pure64.Internal.PureMT)>_R)) }) -}
df4a3d8ced3ae2c3e46e80c36b598a02
  randomChromosome6 ::
    System.Random.Mersenne.Pure64.Internal.PureMT
    -> Data.Functor.Identity.Identity
         ([Types.Locus], System.Random.Mersenne.Pure64.Internal.PureMT)
  {- Arity: 1, Strictness: <L,U>m, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: System.Random.Mersenne.Pure64.Internal.PureMT) ->
                 case World.$wrandomTfbss w of ww { (#,#) ww1 ww2 ->
                 (ww1, ww2)
                   `cast`
                 (Sym (Data.Functor.Identity.N:Identity[0]
                           <([Types.Locus],
                             System.Random.Mersenne.Pure64.Internal.PureMT)>_R)) }) -}
936f9813818e44646e673f6fbf399a71
  randomChromosome_go :: [[Types.Locus]] -> [Types.Locus]
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U> -}
2a2aea75559069ee367de240d491a21a
  randomChromosome_go1 ::
    [Types.ID]
    -> [Types.Thres] -> [System.Random.Shuffle.Tree Types.Gene]
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><L,1*U> -}
8f2c7cc1e4772dd6f93d6d38454b8909
  randomChromosome_go2 ::
    [Types.ID]
    -> [Types.Weight] -> [System.Random.Shuffle.Tree Types.Tfbs]
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><L,1*U> -}
50ff4f0d193e4a8e96cc7aa3254f6b2d
  randomGenes :: MyRandom.Rand [Types.Locus]
  {- Arity: 1, Strictness: <L,U>m,
     Unfolding: InlineRule (0, True, True)
                World.randomChromosome5
                  `cast`
                (Sym (Control.Monad.Trans.State.Strict.N:StateT[0]
                          <System.Random.Mersenne.Pure64.Internal.PureMT>_N
                          <Data.Functor.Identity.Identity>_R
                          <[Types.Locus]>_N)) -}
4a171eb2869f309f59a9f56cf894a32b
  randomGenome :: MyRandom.Rand Types.Genome
  {- Arity: 1, Strictness: <L,U(U,U,U(U))>m,
     Unfolding: InlineRule (0, True, True)
                World.randomGenome1
                  `cast`
                (Sym (Control.Monad.Trans.State.Strict.N:StateT[0]
                          <System.Random.Mersenne.Pure64.Internal.PureMT>_N
                          <Data.Functor.Identity.Identity>_R
                          <[Types.Chromosome]>_N)) -}
17c3aa62c907bf714ba6e261d0c96bce
  randomGenome1 ::
    System.Random.Mersenne.Pure64.Internal.PureMT
    -> Data.Functor.Identity.Identity
         ([Types.Chromosome], System.Random.Mersenne.Pure64.Internal.PureMT)
  {- Arity: 1, Strictness: <L,U(U,U,U(U))>m,
     Unfolding: InlineRule (1, True, False)
                (\ (s1 :: System.Random.Mersenne.Pure64.Internal.PureMT) ->
                 case (World.randomChromosome1 s1)
                        `cast`
                      (Data.Functor.Identity.N:Identity[0]
                           <(Types.Chromosome,
                             System.Random.Mersenne.Pure64.Internal.PureMT)>_R) of wild { (,) a1 s' ->
                 (GHC.Types.:
                    @ Types.Chromosome
                    a1
                    (GHC.Types.[] @ Types.Chromosome),
                  s')
                   `cast`
                 (Sym (Data.Functor.Identity.N:Identity[0]
                           <([Types.Chromosome],
                             System.Random.Mersenne.Pure64.Internal.PureMT)>_R)) }) -}
b5febbc7fc3efe864a52e23df8294fae
  randomTfbss :: MyRandom.Rand [Types.Locus]
  {- Arity: 1, Strictness: <L,U>m,
     Unfolding: InlineRule (0, True, True)
                World.randomChromosome6
                  `cast`
                (Sym (Control.Monad.Trans.State.Strict.N:StateT[0]
                          <System.Random.Mersenne.Pure64.Internal.PureMT>_N
                          <Data.Functor.Identity.Identity>_R
                          <[Types.Locus]>_N)) -}
74f4724c43ed1bfcfd021c37442fcc62
  reduceToGenes :: Types.Genome -> [Types.Gene]
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: (\ (x :: [[Types.Locus]]) ->
                 World.gSTFromGenome_go x) -}
221a1fe1825d9ddd9986fec2f6b4572d
  reduceToTfbss :: Types.Genome -> [Types.Tfbs]
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: (\ (x :: [[Types.Locus]]) ->
                 World.reduceToTfbss_go x) -}
f81f6fb0855e5d93d47ccfa127b8471b
  reduceToTfbss_go :: [[Types.Locus]] -> [Types.Tfbs]
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U> -}
032d78008f49e8f691bc4632d1fe72cd
  sameGST :: Types.Agent -> Types.Agent -> GHC.Types.Bool
  {- Arity: 2, Strictness: <S,1*U><L,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ds :: Types.Agent) (ds1 :: Types.Agent) ->
                 case ds of wild {
                   Types.Agent ipv ipv1
                   -> case ds1 of wild1 {
                        Types.Agent ipv2 ipv3
                        -> Data.Map.Base.$fEqMap_$c==
                             @ Types.ID
                             @ Types.GeneState
                             Types.$fEqID
                             Types.$fEqGeneState
                             ipv1
                             ipv3
                        Types.NoAgent -> GHC.Types.False }
                   Types.NoAgent -> GHC.Types.True }) -}
5176ac702d7d22b49beba3b5ce043884
  takeWhileInclusive :: (a -> GHC.Types.Bool) -> [a] -> ([a], [a])
  {- Arity: 2, HasNoCafRefs, Strictness: <L,C(U)><S,1*U>m,
     Unfolding: InlineRule (2, True, False)
                (\ @ a (f :: a -> GHC.Types.Bool) (ls :: [a]) ->
                 World.takeWhileInclusive_takeWhileInclusive'
                   @ a
                   f
                   (GHC.Types.[] @ a, ls)) -}
0450ff9c509d3fbdc4e560561c18ab32
  takeWhileInclusive_takeWhileInclusive' ::
    (a -> GHC.Types.Bool) -> ([a], [a]) -> ([a], [a])
  {- Arity: 2, HasNoCafRefs, Strictness: <L,C(U)><S(LS),1*U(U,1*U)>m,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ @ a (w :: a -> GHC.Types.Bool) (w1 :: ([a], [a])) ->
                 case w1 of ww { (,) ww1 ww2 ->
                 case World.$wtakeWhileInclusive'
                        @ a
                        w
                        ww1
                        ww2 of ww3 { (#,#) ww4 ww5 ->
                 (ww4, ww5) } }) -}
9dffc291ff298a9497b60f5bce81355d
  targetExpression :: Types.Env -> Types.ID -> Types.GeneState
  {- Arity: 2, HasNoCafRefs, Strictness: <L,U(U)><S(S),1*U(U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Types.Env) (w1 :: Types.ID) ->
                 case w1 `cast` (Types.N:ID[0]) of ww { GHC.Types.I# ww1 ->
                 World.$wtargetExpression w ww1 }) -}
7b142aa46d62bcf01a36ec94334a9c46
  targetGST :: Types.Env -> Types.GeneStateTable
  {- Arity: 1, Strictness: <S(S),1*U(U)>, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Types.Env) ->
                 case w of ww { GHC.Types.I# ww1 -> World.$wtargetGST ww1 }) -}
6bfa059d668bc840bf07bb1a3879ef1b
  updateAgent :: Types.Agent -> Types.Agent
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (ds :: Types.Agent) ->
                 case ds of wild {
                   Types.Agent chroms gst
                   -> let {
                        newGenome :: Types.Genome
                        = GHC.Base.map
                            @ [Types.Locus]
                            @ [Types.Locus]
                            (World.updateChrom
                               World.locusEffect1 `cast` (Sym (Types.N:Weight[0]))
                               gst)
                            chroms
                      } in
                      case World.gSTFromGenome_go1
                             (World.gSTFromGenome_go newGenome)
                             (Data.Map.Base.Tip @ Types.ID @ Types.GeneState) of wild1 {
                        Data.Map.Base.Bin dt ds1 ds2 ds3 ds4
                        -> case dt of wild2 {
                             DEFAULT -> Types.NoAgent 20# -> Types.Agent newGenome wild1 }
                        Data.Map.Base.Tip -> Types.NoAgent }
                   Types.NoAgent -> Types.NoAgent }) -}
4d55e7cfdfe928384edd83e4f8ad2e92
  updateChrom ::
    Types.Weight
    -> Types.GeneStateTable -> Types.Chromosome -> Types.Chromosome
  {- Arity: 3, HasNoCafRefs, Strictness: <L,U(U)><L,U><S,1*U> -}
939589ced1d3857aa7011cd3a0c8e672
  updateGenome ::
    Types.GeneStateTable -> Types.Genome -> Types.Genome
  {- Arity: 2, HasNoCafRefs, Strictness: <L,U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Types.GeneStateTable) (eta :: [Types.Chromosome]) ->
                 GHC.Base.build
                   @ [Types.Locus]
                   (\ @ b1
                      (c :: [Types.Locus] -> b1 -> b1)[OneShot]
                      (n :: b1)[OneShot] ->
                    GHC.Base.foldr
                      @ [Types.Locus]
                      @ b1
                      (GHC.Base.mapFB
                         @ [Types.Locus]
                         @ b1
                         @ [Types.Locus]
                         c
                         (World.updateChrom
                            World.locusEffect1 `cast` (Sym (Types.N:Weight[0]))
                            x))
                      n
                      eta)) -}
84e9446b8f0872a576fa499d8cec4789
  updateLoc ::
    Types.Weight
    -> Types.GeneStateTable
    -> Types.Locus
    -> (Types.Weight, Types.Locus)
  {- Arity: 3, HasNoCafRefs, Strictness: <L,U(U)><L,1*U><S,1*U>m,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: Types.Weight)
                   (w1 :: Types.GeneStateTable)
                   (w2 :: Types.Locus) ->
                 case World.$wupdateLoc w w1 w2 of ww { (#,#) ww1 ww2 ->
                 (ww1, ww2) }) -}
"SPEC/World fromList @ ID _" [ALWAYS] forall @ a
                                             ($dOrd :: GHC.Classes.Ord Types.ID)
  Data.Map.Strict.fromList @ Types.ID @ a $dOrd
  = World.$sfromList @ a
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

